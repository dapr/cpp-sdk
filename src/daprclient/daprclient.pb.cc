// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: daprclient.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "daprclient.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace daprclient {

namespace {

const ::google::protobuf::Descriptor* CloudEventEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CloudEventEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindingEventEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindingEventEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindingEventEnvelope_MetadataEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BindingResponseEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindingResponseEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvokeEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvokeEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvokeEnvelope_MetadataEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GetTopicSubscriptionsEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetTopicSubscriptionsEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBindingsSubscriptionsEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBindingsSubscriptionsEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* State_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  State_reflection_ = NULL;
const ::google::protobuf::Descriptor* State_MetadataEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* StateOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StateOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetryPolicy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetryPolicy_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_daprclient_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_daprclient_2eproto() {
  protobuf_AddDesc_daprclient_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "daprclient.proto");
  GOOGLE_CHECK(file != NULL);
  CloudEventEnvelope_descriptor_ = file->message_type(0);
  static const int CloudEventEnvelope_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudEventEnvelope, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudEventEnvelope, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudEventEnvelope, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudEventEnvelope, specversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudEventEnvelope, datacontenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudEventEnvelope, topic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudEventEnvelope, data_),
  };
  CloudEventEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CloudEventEnvelope_descriptor_,
      CloudEventEnvelope::default_instance_,
      CloudEventEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(CloudEventEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudEventEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloudEventEnvelope, _is_default_instance_));
  BindingEventEnvelope_descriptor_ = file->message_type(1);
  static const int BindingEventEnvelope_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingEventEnvelope, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingEventEnvelope, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingEventEnvelope, metadata_),
  };
  BindingEventEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindingEventEnvelope_descriptor_,
      BindingEventEnvelope::default_instance_,
      BindingEventEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindingEventEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingEventEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingEventEnvelope, _is_default_instance_));
  BindingEventEnvelope_MetadataEntry_descriptor_ = BindingEventEnvelope_descriptor_->nested_type(0);
  BindingResponseEnvelope_descriptor_ = file->message_type(2);
  static const int BindingResponseEnvelope_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingResponseEnvelope, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingResponseEnvelope, to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingResponseEnvelope, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingResponseEnvelope, concurrency_),
  };
  BindingResponseEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindingResponseEnvelope_descriptor_,
      BindingResponseEnvelope::default_instance_,
      BindingResponseEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindingResponseEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingResponseEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingResponseEnvelope, _is_default_instance_));
  InvokeEnvelope_descriptor_ = file->message_type(3);
  static const int InvokeEnvelope_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeEnvelope, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeEnvelope, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeEnvelope, metadata_),
  };
  InvokeEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InvokeEnvelope_descriptor_,
      InvokeEnvelope::default_instance_,
      InvokeEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(InvokeEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeEnvelope, _is_default_instance_));
  InvokeEnvelope_MetadataEntry_descriptor_ = InvokeEnvelope_descriptor_->nested_type(0);
  GetTopicSubscriptionsEnvelope_descriptor_ = file->message_type(4);
  static const int GetTopicSubscriptionsEnvelope_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTopicSubscriptionsEnvelope, topics_),
  };
  GetTopicSubscriptionsEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetTopicSubscriptionsEnvelope_descriptor_,
      GetTopicSubscriptionsEnvelope::default_instance_,
      GetTopicSubscriptionsEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetTopicSubscriptionsEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTopicSubscriptionsEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetTopicSubscriptionsEnvelope, _is_default_instance_));
  GetBindingsSubscriptionsEnvelope_descriptor_ = file->message_type(5);
  static const int GetBindingsSubscriptionsEnvelope_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingsSubscriptionsEnvelope, bindings_),
  };
  GetBindingsSubscriptionsEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBindingsSubscriptionsEnvelope_descriptor_,
      GetBindingsSubscriptionsEnvelope::default_instance_,
      GetBindingsSubscriptionsEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetBindingsSubscriptionsEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingsSubscriptionsEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingsSubscriptionsEnvelope, _is_default_instance_));
  State_descriptor_ = file->message_type(6);
  static const int State_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, etag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, options_),
  };
  State_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      State_descriptor_,
      State::default_instance_,
      State_offsets_,
      -1,
      -1,
      -1,
      sizeof(State),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, _is_default_instance_));
  State_MetadataEntry_descriptor_ = State_descriptor_->nested_type(0);
  StateOptions_descriptor_ = file->message_type(7);
  static const int StateOptions_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOptions, concurrency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOptions, consistency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOptions, retrypolicy_),
  };
  StateOptions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StateOptions_descriptor_,
      StateOptions::default_instance_,
      StateOptions_offsets_,
      -1,
      -1,
      -1,
      sizeof(StateOptions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOptions, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOptions, _is_default_instance_));
  RetryPolicy_descriptor_ = file->message_type(8);
  static const int RetryPolicy_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetryPolicy, threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetryPolicy, pattern_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetryPolicy, interval_),
  };
  RetryPolicy_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RetryPolicy_descriptor_,
      RetryPolicy::default_instance_,
      RetryPolicy_offsets_,
      -1,
      -1,
      -1,
      sizeof(RetryPolicy),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetryPolicy, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetryPolicy, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_daprclient_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CloudEventEnvelope_descriptor_, &CloudEventEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindingEventEnvelope_descriptor_, &BindingEventEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        BindingEventEnvelope_MetadataEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                BindingEventEnvelope_MetadataEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindingResponseEnvelope_descriptor_, &BindingResponseEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InvokeEnvelope_descriptor_, &InvokeEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        InvokeEnvelope_MetadataEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                InvokeEnvelope_MetadataEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetTopicSubscriptionsEnvelope_descriptor_, &GetTopicSubscriptionsEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBindingsSubscriptionsEnvelope_descriptor_, &GetBindingsSubscriptionsEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      State_descriptor_, &State::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        State_MetadataEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                State_MetadataEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StateOptions_descriptor_, &StateOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RetryPolicy_descriptor_, &RetryPolicy::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_daprclient_2eproto() {
  delete CloudEventEnvelope::default_instance_;
  delete CloudEventEnvelope_reflection_;
  delete BindingEventEnvelope::default_instance_;
  delete BindingEventEnvelope_reflection_;
  delete BindingResponseEnvelope::default_instance_;
  delete BindingResponseEnvelope_reflection_;
  delete InvokeEnvelope::default_instance_;
  delete InvokeEnvelope_reflection_;
  delete GetTopicSubscriptionsEnvelope::default_instance_;
  delete GetTopicSubscriptionsEnvelope_reflection_;
  delete GetBindingsSubscriptionsEnvelope::default_instance_;
  delete GetBindingsSubscriptionsEnvelope_reflection_;
  delete State::default_instance_;
  delete State_reflection_;
  delete StateOptions::default_instance_;
  delete StateOptions_reflection_;
  delete RetryPolicy::default_instance_;
  delete RetryPolicy_reflection_;
}

void protobuf_AddDesc_daprclient_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_daprclient_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020daprclient.proto\022\ndaprclient\032\031google/p"
    "rotobuf/any.proto\032\033google/protobuf/empty"
    ".proto\032\036google/protobuf/duration.proto\"\237"
    "\001\n\022CloudEventEnvelope\022\n\n\002id\030\001 \001(\t\022\016\n\006sou"
    "rce\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\022\023\n\013specVersion\030\004"
    " \001(\t\022\027\n\017dataContentType\030\005 \001(\t\022\r\n\005topic\030\006"
    " \001(\t\022\"\n\004data\030\007 \001(\0132\024.google.protobuf.Any"
    "\"\273\001\n\024BindingEventEnvelope\022\014\n\004name\030\001 \001(\t\022"
    "\"\n\004data\030\002 \001(\0132\024.google.protobuf.Any\022@\n\010m"
    "etadata\030\003 \003(\0132..daprclient.BindingEventE"
    "nvelope.MetadataEntry\032/\n\rMetadataEntry\022\013"
    "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\200\001\n\027Bindi"
    "ngResponseEnvelope\022\"\n\004data\030\001 \001(\0132\024.googl"
    "e.protobuf.Any\022\n\n\002to\030\002 \003(\t\022 \n\005state\030\003 \003("
    "\0132\021.daprclient.State\022\023\n\013concurrency\030\004 \001("
    "\t\"\261\001\n\016InvokeEnvelope\022\016\n\006method\030\001 \001(\t\022\"\n\004"
    "data\030\002 \001(\0132\024.google.protobuf.Any\022:\n\010meta"
    "data\030\003 \003(\0132(.daprclient.InvokeEnvelope.M"
    "etadataEntry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001"
    "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"/\n\035GetTopicSubscri"
    "ptionsEnvelope\022\016\n\006topics\030\001 \003(\t\"4\n GetBin"
    "dingsSubscriptionsEnvelope\022\020\n\010bindings\030\001"
    " \003(\t\"\326\001\n\005State\022\013\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001"
    "(\0132\024.google.protobuf.Any\022\014\n\004etag\030\003 \001(\t\0221"
    "\n\010metadata\030\004 \003(\0132\037.daprclient.State.Meta"
    "dataEntry\022)\n\007options\030\005 \001(\0132\030.daprclient."
    "StateOptions\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001"
    "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"f\n\014StateOptions\022\023\n"
    "\013concurrency\030\001 \001(\t\022\023\n\013consistency\030\002 \001(\t\022"
    ",\n\013retryPolicy\030\003 \001(\0132\027.daprclient.RetryP"
    "olicy\"^\n\013RetryPolicy\022\021\n\tthreshold\030\001 \001(\005\022"
    "\017\n\007pattern\030\002 \001(\t\022+\n\010interval\030\003 \001(\0132\031.goo"
    "gle.protobuf.Duration2\263\003\n\nDaprClient\022>\n\010"
    "OnInvoke\022\032.daprclient.InvokeEnvelope\032\024.g"
    "oogle.protobuf.Any\"\000\022\\\n\025GetTopicSubscrip"
    "tions\022\026.google.protobuf.Empty\032).daprclie"
    "nt.GetTopicSubscriptionsEnvelope\"\000\022b\n\030Ge"
    "tBindingsSubscriptions\022\026.google.protobuf"
    ".Empty\032,.daprclient.GetBindingsSubscript"
    "ionsEnvelope\"\000\022Y\n\016OnBindingEvent\022 .daprc"
    "lient.BindingEventEnvelope\032#.daprclient."
    "BindingResponseEnvelope\"\000\022H\n\014OnTopicEven"
    "t\022\036.daprclient.CloudEventEnvelope\032\026.goog"
    "le.protobuf.Empty\"\000B\033\n\007io.daprB\020DaprClie"
    "ntProtosb\006proto3", 1776);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "daprclient.proto", &protobuf_RegisterTypes);
  CloudEventEnvelope::default_instance_ = new CloudEventEnvelope();
  BindingEventEnvelope::default_instance_ = new BindingEventEnvelope();
  BindingResponseEnvelope::default_instance_ = new BindingResponseEnvelope();
  InvokeEnvelope::default_instance_ = new InvokeEnvelope();
  GetTopicSubscriptionsEnvelope::default_instance_ = new GetTopicSubscriptionsEnvelope();
  GetBindingsSubscriptionsEnvelope::default_instance_ = new GetBindingsSubscriptionsEnvelope();
  State::default_instance_ = new State();
  StateOptions::default_instance_ = new StateOptions();
  RetryPolicy::default_instance_ = new RetryPolicy();
  CloudEventEnvelope::default_instance_->InitAsDefaultInstance();
  BindingEventEnvelope::default_instance_->InitAsDefaultInstance();
  BindingResponseEnvelope::default_instance_->InitAsDefaultInstance();
  InvokeEnvelope::default_instance_->InitAsDefaultInstance();
  GetTopicSubscriptionsEnvelope::default_instance_->InitAsDefaultInstance();
  GetBindingsSubscriptionsEnvelope::default_instance_->InitAsDefaultInstance();
  State::default_instance_->InitAsDefaultInstance();
  StateOptions::default_instance_->InitAsDefaultInstance();
  RetryPolicy::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_daprclient_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_daprclient_2eproto {
  StaticDescriptorInitializer_daprclient_2eproto() {
    protobuf_AddDesc_daprclient_2eproto();
  }
} static_descriptor_initializer_daprclient_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloudEventEnvelope::kIdFieldNumber;
const int CloudEventEnvelope::kSourceFieldNumber;
const int CloudEventEnvelope::kTypeFieldNumber;
const int CloudEventEnvelope::kSpecVersionFieldNumber;
const int CloudEventEnvelope::kDataContentTypeFieldNumber;
const int CloudEventEnvelope::kTopicFieldNumber;
const int CloudEventEnvelope::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloudEventEnvelope::CloudEventEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:daprclient.CloudEventEnvelope)
}

void CloudEventEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

CloudEventEnvelope::CloudEventEnvelope(const CloudEventEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:daprclient.CloudEventEnvelope)
}

void CloudEventEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  specversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datacontenttype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
}

CloudEventEnvelope::~CloudEventEnvelope() {
  // @@protoc_insertion_point(destructor:daprclient.CloudEventEnvelope)
  SharedDtor();
}

void CloudEventEnvelope::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  specversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datacontenttype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void CloudEventEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloudEventEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CloudEventEnvelope_descriptor_;
}

const CloudEventEnvelope& CloudEventEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_daprclient_2eproto();
  return *default_instance_;
}

CloudEventEnvelope* CloudEventEnvelope::default_instance_ = NULL;

CloudEventEnvelope* CloudEventEnvelope::New(::google::protobuf::Arena* arena) const {
  CloudEventEnvelope* n = new CloudEventEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloudEventEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:daprclient.CloudEventEnvelope)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  specversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datacontenttype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}

bool CloudEventEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:daprclient.CloudEventEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.CloudEventEnvelope.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_source;
        break;
      }

      // optional string source = 2;
      case 2: {
        if (tag == 18) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.CloudEventEnvelope.source"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }

      // optional string type = 3;
      case 3: {
        if (tag == 26) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.CloudEventEnvelope.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_specVersion;
        break;
      }

      // optional string specVersion = 4;
      case 4: {
        if (tag == 34) {
         parse_specVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_specversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->specversion().data(), this->specversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.CloudEventEnvelope.specVersion"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_dataContentType;
        break;
      }

      // optional string dataContentType = 5;
      case 5: {
        if (tag == 42) {
         parse_dataContentType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_datacontenttype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->datacontenttype().data(), this->datacontenttype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.CloudEventEnvelope.dataContentType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_topic;
        break;
      }

      // optional string topic = 6;
      case 6: {
        if (tag == 50) {
         parse_topic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), this->topic().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.CloudEventEnvelope.topic"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_data;
        break;
      }

      // optional .google.protobuf.Any data = 7;
      case 7: {
        if (tag == 58) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:daprclient.CloudEventEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:daprclient.CloudEventEnvelope)
  return false;
#undef DO_
}

void CloudEventEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:daprclient.CloudEventEnvelope)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.CloudEventEnvelope.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string source = 2;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.CloudEventEnvelope.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->source(), output);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.CloudEventEnvelope.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // optional string specVersion = 4;
  if (this->specversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->specversion().data(), this->specversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.CloudEventEnvelope.specVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->specversion(), output);
  }

  // optional string dataContentType = 5;
  if (this->datacontenttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datacontenttype().data(), this->datacontenttype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.CloudEventEnvelope.dataContentType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->datacontenttype(), output);
  }

  // optional string topic = 6;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), this->topic().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.CloudEventEnvelope.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->topic(), output);
  }

  // optional .google.protobuf.Any data = 7;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->data_, output);
  }

  // @@protoc_insertion_point(serialize_end:daprclient.CloudEventEnvelope)
}

::google::protobuf::uint8* CloudEventEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:daprclient.CloudEventEnvelope)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.CloudEventEnvelope.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string source = 2;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.CloudEventEnvelope.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source(), target);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.CloudEventEnvelope.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // optional string specVersion = 4;
  if (this->specversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->specversion().data(), this->specversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.CloudEventEnvelope.specVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->specversion(), target);
  }

  // optional string dataContentType = 5;
  if (this->datacontenttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datacontenttype().data(), this->datacontenttype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.CloudEventEnvelope.dataContentType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->datacontenttype(), target);
  }

  // optional string topic = 6;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), this->topic().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.CloudEventEnvelope.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->topic(), target);
  }

  // optional .google.protobuf.Any data = 7;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:daprclient.CloudEventEnvelope)
  return target;
}

int CloudEventEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:daprclient.CloudEventEnvelope)
  int total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string source = 2;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional string specVersion = 4;
  if (this->specversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->specversion());
  }

  // optional string dataContentType = 5;
  if (this->datacontenttype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->datacontenttype());
  }

  // optional string topic = 6;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // optional .google.protobuf.Any data = 7;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloudEventEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:daprclient.CloudEventEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CloudEventEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CloudEventEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:daprclient.CloudEventEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:daprclient.CloudEventEnvelope)
    MergeFrom(*source);
  }
}

void CloudEventEnvelope::MergeFrom(const CloudEventEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:daprclient.CloudEventEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.specversion().size() > 0) {

    specversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.specversion_);
  }
  if (from.datacontenttype().size() > 0) {

    datacontenttype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datacontenttype_);
  }
  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
}

void CloudEventEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:daprclient.CloudEventEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloudEventEnvelope::CopyFrom(const CloudEventEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:daprclient.CloudEventEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudEventEnvelope::IsInitialized() const {

  return true;
}

void CloudEventEnvelope::Swap(CloudEventEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloudEventEnvelope::InternalSwap(CloudEventEnvelope* other) {
  id_.Swap(&other->id_);
  source_.Swap(&other->source_);
  type_.Swap(&other->type_);
  specversion_.Swap(&other->specversion_);
  datacontenttype_.Swap(&other->datacontenttype_);
  topic_.Swap(&other->topic_);
  std::swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloudEventEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CloudEventEnvelope_descriptor_;
  metadata.reflection = CloudEventEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloudEventEnvelope

// optional string id = 1;
void CloudEventEnvelope::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CloudEventEnvelope::id() const {
  // @@protoc_insertion_point(field_get:daprclient.CloudEventEnvelope.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CloudEventEnvelope::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.CloudEventEnvelope.id)
}
 void CloudEventEnvelope::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.CloudEventEnvelope.id)
}
 void CloudEventEnvelope::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.CloudEventEnvelope.id)
}
 ::std::string* CloudEventEnvelope::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.CloudEventEnvelope.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CloudEventEnvelope::release_id() {
  // @@protoc_insertion_point(field_release:daprclient.CloudEventEnvelope.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CloudEventEnvelope::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:daprclient.CloudEventEnvelope.id)
}

// optional string source = 2;
void CloudEventEnvelope::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CloudEventEnvelope::source() const {
  // @@protoc_insertion_point(field_get:daprclient.CloudEventEnvelope.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CloudEventEnvelope::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.CloudEventEnvelope.source)
}
 void CloudEventEnvelope::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.CloudEventEnvelope.source)
}
 void CloudEventEnvelope::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.CloudEventEnvelope.source)
}
 ::std::string* CloudEventEnvelope::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.CloudEventEnvelope.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CloudEventEnvelope::release_source() {
  // @@protoc_insertion_point(field_release:daprclient.CloudEventEnvelope.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CloudEventEnvelope::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:daprclient.CloudEventEnvelope.source)
}

// optional string type = 3;
void CloudEventEnvelope::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CloudEventEnvelope::type() const {
  // @@protoc_insertion_point(field_get:daprclient.CloudEventEnvelope.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CloudEventEnvelope::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.CloudEventEnvelope.type)
}
 void CloudEventEnvelope::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.CloudEventEnvelope.type)
}
 void CloudEventEnvelope::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.CloudEventEnvelope.type)
}
 ::std::string* CloudEventEnvelope::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.CloudEventEnvelope.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CloudEventEnvelope::release_type() {
  // @@protoc_insertion_point(field_release:daprclient.CloudEventEnvelope.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CloudEventEnvelope::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:daprclient.CloudEventEnvelope.type)
}

// optional string specVersion = 4;
void CloudEventEnvelope::clear_specversion() {
  specversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CloudEventEnvelope::specversion() const {
  // @@protoc_insertion_point(field_get:daprclient.CloudEventEnvelope.specVersion)
  return specversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CloudEventEnvelope::set_specversion(const ::std::string& value) {
  
  specversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.CloudEventEnvelope.specVersion)
}
 void CloudEventEnvelope::set_specversion(const char* value) {
  
  specversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.CloudEventEnvelope.specVersion)
}
 void CloudEventEnvelope::set_specversion(const char* value, size_t size) {
  
  specversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.CloudEventEnvelope.specVersion)
}
 ::std::string* CloudEventEnvelope::mutable_specversion() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.CloudEventEnvelope.specVersion)
  return specversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CloudEventEnvelope::release_specversion() {
  // @@protoc_insertion_point(field_release:daprclient.CloudEventEnvelope.specVersion)
  
  return specversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CloudEventEnvelope::set_allocated_specversion(::std::string* specversion) {
  if (specversion != NULL) {
    
  } else {
    
  }
  specversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), specversion);
  // @@protoc_insertion_point(field_set_allocated:daprclient.CloudEventEnvelope.specVersion)
}

// optional string dataContentType = 5;
void CloudEventEnvelope::clear_datacontenttype() {
  datacontenttype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CloudEventEnvelope::datacontenttype() const {
  // @@protoc_insertion_point(field_get:daprclient.CloudEventEnvelope.dataContentType)
  return datacontenttype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CloudEventEnvelope::set_datacontenttype(const ::std::string& value) {
  
  datacontenttype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.CloudEventEnvelope.dataContentType)
}
 void CloudEventEnvelope::set_datacontenttype(const char* value) {
  
  datacontenttype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.CloudEventEnvelope.dataContentType)
}
 void CloudEventEnvelope::set_datacontenttype(const char* value, size_t size) {
  
  datacontenttype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.CloudEventEnvelope.dataContentType)
}
 ::std::string* CloudEventEnvelope::mutable_datacontenttype() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.CloudEventEnvelope.dataContentType)
  return datacontenttype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CloudEventEnvelope::release_datacontenttype() {
  // @@protoc_insertion_point(field_release:daprclient.CloudEventEnvelope.dataContentType)
  
  return datacontenttype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CloudEventEnvelope::set_allocated_datacontenttype(::std::string* datacontenttype) {
  if (datacontenttype != NULL) {
    
  } else {
    
  }
  datacontenttype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datacontenttype);
  // @@protoc_insertion_point(field_set_allocated:daprclient.CloudEventEnvelope.dataContentType)
}

// optional string topic = 6;
void CloudEventEnvelope::clear_topic() {
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CloudEventEnvelope::topic() const {
  // @@protoc_insertion_point(field_get:daprclient.CloudEventEnvelope.topic)
  return topic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CloudEventEnvelope::set_topic(const ::std::string& value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.CloudEventEnvelope.topic)
}
 void CloudEventEnvelope::set_topic(const char* value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.CloudEventEnvelope.topic)
}
 void CloudEventEnvelope::set_topic(const char* value, size_t size) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.CloudEventEnvelope.topic)
}
 ::std::string* CloudEventEnvelope::mutable_topic() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.CloudEventEnvelope.topic)
  return topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CloudEventEnvelope::release_topic() {
  // @@protoc_insertion_point(field_release:daprclient.CloudEventEnvelope.topic)
  
  return topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CloudEventEnvelope::set_allocated_topic(::std::string* topic) {
  if (topic != NULL) {
    
  } else {
    
  }
  topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topic);
  // @@protoc_insertion_point(field_set_allocated:daprclient.CloudEventEnvelope.topic)
}

// optional .google.protobuf.Any data = 7;
bool CloudEventEnvelope::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void CloudEventEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& CloudEventEnvelope::data() const {
  // @@protoc_insertion_point(field_get:daprclient.CloudEventEnvelope.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::google::protobuf::Any* CloudEventEnvelope::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:daprclient.CloudEventEnvelope.data)
  return data_;
}
::google::protobuf::Any* CloudEventEnvelope::release_data() {
  // @@protoc_insertion_point(field_release:daprclient.CloudEventEnvelope.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void CloudEventEnvelope::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:daprclient.CloudEventEnvelope.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindingEventEnvelope::kNameFieldNumber;
const int BindingEventEnvelope::kDataFieldNumber;
const int BindingEventEnvelope::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindingEventEnvelope::BindingEventEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:daprclient.BindingEventEnvelope)
}

void BindingEventEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

BindingEventEnvelope::BindingEventEnvelope(const BindingEventEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:daprclient.BindingEventEnvelope)
}

void BindingEventEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
  metadata_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  metadata_.SetEntryDescriptor(
      &::daprclient::BindingEventEnvelope_MetadataEntry_descriptor_);
}

BindingEventEnvelope::~BindingEventEnvelope() {
  // @@protoc_insertion_point(destructor:daprclient.BindingEventEnvelope)
  SharedDtor();
}

void BindingEventEnvelope::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void BindingEventEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindingEventEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindingEventEnvelope_descriptor_;
}

const BindingEventEnvelope& BindingEventEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_daprclient_2eproto();
  return *default_instance_;
}

BindingEventEnvelope* BindingEventEnvelope::default_instance_ = NULL;

BindingEventEnvelope* BindingEventEnvelope::New(::google::protobuf::Arena* arena) const {
  BindingEventEnvelope* n = new BindingEventEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindingEventEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:daprclient.BindingEventEnvelope)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
  metadata_.Clear();
}

bool BindingEventEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:daprclient.BindingEventEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.BindingEventEnvelope.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .google.protobuf.Any data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_metadata;
        break;
      }

      // map<string, string> metadata = 3;
      case 3: {
        if (tag == 26) {
         parse_metadata:
          DO_(input->IncrementRecursionDepth());
         parse_loop_metadata:
          BindingEventEnvelope_MetadataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.BindingEventEnvelope.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.BindingEventEnvelope.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:daprclient.BindingEventEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:daprclient.BindingEventEnvelope)
  return false;
#undef DO_
}

void BindingEventEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:daprclient.BindingEventEnvelope)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.BindingEventEnvelope.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .google.protobuf.Any data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "daprclient.BindingEventEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "daprclient.BindingEventEnvelope.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<BindingEventEnvelope_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BindingEventEnvelope_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:daprclient.BindingEventEnvelope)
}

::google::protobuf::uint8* BindingEventEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:daprclient.BindingEventEnvelope)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.BindingEventEnvelope.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .google.protobuf.Any data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->data_, false, target);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "daprclient.BindingEventEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "daprclient.BindingEventEnvelope.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<BindingEventEnvelope_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BindingEventEnvelope_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:daprclient.BindingEventEnvelope)
  return target;
}

int BindingEventEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:daprclient.BindingEventEnvelope)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .google.protobuf.Any data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // map<string, string> metadata = 3;
  total_size += 1 * this->metadata_size();
  {
    ::google::protobuf::scoped_ptr<BindingEventEnvelope_MetadataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindingEventEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:daprclient.BindingEventEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BindingEventEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BindingEventEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:daprclient.BindingEventEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:daprclient.BindingEventEnvelope)
    MergeFrom(*source);
  }
}

void BindingEventEnvelope::MergeFrom(const BindingEventEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:daprclient.BindingEventEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  metadata_.MergeFrom(from.metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
}

void BindingEventEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:daprclient.BindingEventEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingEventEnvelope::CopyFrom(const BindingEventEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:daprclient.BindingEventEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingEventEnvelope::IsInitialized() const {

  return true;
}

void BindingEventEnvelope::Swap(BindingEventEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindingEventEnvelope::InternalSwap(BindingEventEnvelope* other) {
  name_.Swap(&other->name_);
  std::swap(data_, other->data_);
  metadata_.Swap(&other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindingEventEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindingEventEnvelope_descriptor_;
  metadata.reflection = BindingEventEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindingEventEnvelope

// optional string name = 1;
void BindingEventEnvelope::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BindingEventEnvelope::name() const {
  // @@protoc_insertion_point(field_get:daprclient.BindingEventEnvelope.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingEventEnvelope::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.BindingEventEnvelope.name)
}
 void BindingEventEnvelope::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.BindingEventEnvelope.name)
}
 void BindingEventEnvelope::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.BindingEventEnvelope.name)
}
 ::std::string* BindingEventEnvelope::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.BindingEventEnvelope.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BindingEventEnvelope::release_name() {
  // @@protoc_insertion_point(field_release:daprclient.BindingEventEnvelope.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingEventEnvelope::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:daprclient.BindingEventEnvelope.name)
}

// optional .google.protobuf.Any data = 2;
bool BindingEventEnvelope::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void BindingEventEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& BindingEventEnvelope::data() const {
  // @@protoc_insertion_point(field_get:daprclient.BindingEventEnvelope.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::google::protobuf::Any* BindingEventEnvelope::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:daprclient.BindingEventEnvelope.data)
  return data_;
}
::google::protobuf::Any* BindingEventEnvelope::release_data() {
  // @@protoc_insertion_point(field_release:daprclient.BindingEventEnvelope.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void BindingEventEnvelope::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:daprclient.BindingEventEnvelope.data)
}

// map<string, string> metadata = 3;
int BindingEventEnvelope::metadata_size() const {
  return metadata_.size();
}
void BindingEventEnvelope::clear_metadata() {
  metadata_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
BindingEventEnvelope::metadata() const {
  // @@protoc_insertion_point(field_map:daprclient.BindingEventEnvelope.metadata)
  return metadata_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
BindingEventEnvelope::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:daprclient.BindingEventEnvelope.metadata)
  return metadata_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindingResponseEnvelope::kDataFieldNumber;
const int BindingResponseEnvelope::kToFieldNumber;
const int BindingResponseEnvelope::kStateFieldNumber;
const int BindingResponseEnvelope::kConcurrencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindingResponseEnvelope::BindingResponseEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:daprclient.BindingResponseEnvelope)
}

void BindingResponseEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

BindingResponseEnvelope::BindingResponseEnvelope(const BindingResponseEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:daprclient.BindingResponseEnvelope)
}

void BindingResponseEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  concurrency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BindingResponseEnvelope::~BindingResponseEnvelope() {
  // @@protoc_insertion_point(destructor:daprclient.BindingResponseEnvelope)
  SharedDtor();
}

void BindingResponseEnvelope::SharedDtor() {
  concurrency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void BindingResponseEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindingResponseEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindingResponseEnvelope_descriptor_;
}

const BindingResponseEnvelope& BindingResponseEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_daprclient_2eproto();
  return *default_instance_;
}

BindingResponseEnvelope* BindingResponseEnvelope::default_instance_ = NULL;

BindingResponseEnvelope* BindingResponseEnvelope::New(::google::protobuf::Arena* arena) const {
  BindingResponseEnvelope* n = new BindingResponseEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindingResponseEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:daprclient.BindingResponseEnvelope)
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
  concurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.Clear();
  state_.Clear();
}

bool BindingResponseEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:daprclient.BindingResponseEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Any data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_to;
        break;
      }

      // repeated string to = 2;
      case 2: {
        if (tag == 18) {
         parse_to:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to(this->to_size() - 1).data(),
            this->to(this->to_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.BindingResponseEnvelope.to"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_to;
        if (input->ExpectTag(26)) goto parse_state;
        break;
      }

      // repeated .daprclient.State state = 3;
      case 3: {
        if (tag == 26) {
         parse_state:
          DO_(input->IncrementRecursionDepth());
         parse_loop_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_state;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_concurrency;
        break;
      }

      // optional string concurrency = 4;
      case 4: {
        if (tag == 34) {
         parse_concurrency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_concurrency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->concurrency().data(), this->concurrency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.BindingResponseEnvelope.concurrency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:daprclient.BindingResponseEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:daprclient.BindingResponseEnvelope)
  return false;
#undef DO_
}

void BindingResponseEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:daprclient.BindingResponseEnvelope)
  // optional .google.protobuf.Any data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  // repeated string to = 2;
  for (int i = 0; i < this->to_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to(i).data(), this->to(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.BindingResponseEnvelope.to");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->to(i), output);
  }

  // repeated .daprclient.State state = 3;
  for (unsigned int i = 0, n = this->state_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->state(i), output);
  }

  // optional string concurrency = 4;
  if (this->concurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concurrency().data(), this->concurrency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.BindingResponseEnvelope.concurrency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->concurrency(), output);
  }

  // @@protoc_insertion_point(serialize_end:daprclient.BindingResponseEnvelope)
}

::google::protobuf::uint8* BindingResponseEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:daprclient.BindingResponseEnvelope)
  // optional .google.protobuf.Any data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->data_, false, target);
  }

  // repeated string to = 2;
  for (int i = 0; i < this->to_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to(i).data(), this->to(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.BindingResponseEnvelope.to");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->to(i), target);
  }

  // repeated .daprclient.State state = 3;
  for (unsigned int i = 0, n = this->state_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->state(i), false, target);
  }

  // optional string concurrency = 4;
  if (this->concurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concurrency().data(), this->concurrency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.BindingResponseEnvelope.concurrency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->concurrency(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:daprclient.BindingResponseEnvelope)
  return target;
}

int BindingResponseEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:daprclient.BindingResponseEnvelope)
  int total_size = 0;

  // optional .google.protobuf.Any data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // optional string concurrency = 4;
  if (this->concurrency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->concurrency());
  }

  // repeated string to = 2;
  total_size += 1 * this->to_size();
  for (int i = 0; i < this->to_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->to(i));
  }

  // repeated .daprclient.State state = 3;
  total_size += 1 * this->state_size();
  for (int i = 0; i < this->state_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->state(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindingResponseEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:daprclient.BindingResponseEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BindingResponseEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BindingResponseEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:daprclient.BindingResponseEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:daprclient.BindingResponseEnvelope)
    MergeFrom(*source);
  }
}

void BindingResponseEnvelope::MergeFrom(const BindingResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:daprclient.BindingResponseEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  to_.MergeFrom(from.to_);
  state_.MergeFrom(from.state_);
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.concurrency().size() > 0) {

    concurrency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.concurrency_);
  }
}

void BindingResponseEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:daprclient.BindingResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingResponseEnvelope::CopyFrom(const BindingResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:daprclient.BindingResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingResponseEnvelope::IsInitialized() const {

  return true;
}

void BindingResponseEnvelope::Swap(BindingResponseEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindingResponseEnvelope::InternalSwap(BindingResponseEnvelope* other) {
  std::swap(data_, other->data_);
  to_.UnsafeArenaSwap(&other->to_);
  state_.UnsafeArenaSwap(&other->state_);
  concurrency_.Swap(&other->concurrency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindingResponseEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindingResponseEnvelope_descriptor_;
  metadata.reflection = BindingResponseEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindingResponseEnvelope

// optional .google.protobuf.Any data = 1;
bool BindingResponseEnvelope::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void BindingResponseEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& BindingResponseEnvelope::data() const {
  // @@protoc_insertion_point(field_get:daprclient.BindingResponseEnvelope.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::google::protobuf::Any* BindingResponseEnvelope::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:daprclient.BindingResponseEnvelope.data)
  return data_;
}
::google::protobuf::Any* BindingResponseEnvelope::release_data() {
  // @@protoc_insertion_point(field_release:daprclient.BindingResponseEnvelope.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void BindingResponseEnvelope::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:daprclient.BindingResponseEnvelope.data)
}

// repeated string to = 2;
int BindingResponseEnvelope::to_size() const {
  return to_.size();
}
void BindingResponseEnvelope::clear_to() {
  to_.Clear();
}
 const ::std::string& BindingResponseEnvelope::to(int index) const {
  // @@protoc_insertion_point(field_get:daprclient.BindingResponseEnvelope.to)
  return to_.Get(index);
}
 ::std::string* BindingResponseEnvelope::mutable_to(int index) {
  // @@protoc_insertion_point(field_mutable:daprclient.BindingResponseEnvelope.to)
  return to_.Mutable(index);
}
 void BindingResponseEnvelope::set_to(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:daprclient.BindingResponseEnvelope.to)
  to_.Mutable(index)->assign(value);
}
 void BindingResponseEnvelope::set_to(int index, const char* value) {
  to_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:daprclient.BindingResponseEnvelope.to)
}
 void BindingResponseEnvelope::set_to(int index, const char* value, size_t size) {
  to_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:daprclient.BindingResponseEnvelope.to)
}
 ::std::string* BindingResponseEnvelope::add_to() {
  // @@protoc_insertion_point(field_add_mutable:daprclient.BindingResponseEnvelope.to)
  return to_.Add();
}
 void BindingResponseEnvelope::add_to(const ::std::string& value) {
  to_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:daprclient.BindingResponseEnvelope.to)
}
 void BindingResponseEnvelope::add_to(const char* value) {
  to_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:daprclient.BindingResponseEnvelope.to)
}
 void BindingResponseEnvelope::add_to(const char* value, size_t size) {
  to_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:daprclient.BindingResponseEnvelope.to)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
BindingResponseEnvelope::to() const {
  // @@protoc_insertion_point(field_list:daprclient.BindingResponseEnvelope.to)
  return to_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
BindingResponseEnvelope::mutable_to() {
  // @@protoc_insertion_point(field_mutable_list:daprclient.BindingResponseEnvelope.to)
  return &to_;
}

// repeated .daprclient.State state = 3;
int BindingResponseEnvelope::state_size() const {
  return state_.size();
}
void BindingResponseEnvelope::clear_state() {
  state_.Clear();
}
const ::daprclient::State& BindingResponseEnvelope::state(int index) const {
  // @@protoc_insertion_point(field_get:daprclient.BindingResponseEnvelope.state)
  return state_.Get(index);
}
::daprclient::State* BindingResponseEnvelope::mutable_state(int index) {
  // @@protoc_insertion_point(field_mutable:daprclient.BindingResponseEnvelope.state)
  return state_.Mutable(index);
}
::daprclient::State* BindingResponseEnvelope::add_state() {
  // @@protoc_insertion_point(field_add:daprclient.BindingResponseEnvelope.state)
  return state_.Add();
}
::google::protobuf::RepeatedPtrField< ::daprclient::State >*
BindingResponseEnvelope::mutable_state() {
  // @@protoc_insertion_point(field_mutable_list:daprclient.BindingResponseEnvelope.state)
  return &state_;
}
const ::google::protobuf::RepeatedPtrField< ::daprclient::State >&
BindingResponseEnvelope::state() const {
  // @@protoc_insertion_point(field_list:daprclient.BindingResponseEnvelope.state)
  return state_;
}

// optional string concurrency = 4;
void BindingResponseEnvelope::clear_concurrency() {
  concurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BindingResponseEnvelope::concurrency() const {
  // @@protoc_insertion_point(field_get:daprclient.BindingResponseEnvelope.concurrency)
  return concurrency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingResponseEnvelope::set_concurrency(const ::std::string& value) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.BindingResponseEnvelope.concurrency)
}
 void BindingResponseEnvelope::set_concurrency(const char* value) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.BindingResponseEnvelope.concurrency)
}
 void BindingResponseEnvelope::set_concurrency(const char* value, size_t size) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.BindingResponseEnvelope.concurrency)
}
 ::std::string* BindingResponseEnvelope::mutable_concurrency() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.BindingResponseEnvelope.concurrency)
  return concurrency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BindingResponseEnvelope::release_concurrency() {
  // @@protoc_insertion_point(field_release:daprclient.BindingResponseEnvelope.concurrency)
  
  return concurrency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingResponseEnvelope::set_allocated_concurrency(::std::string* concurrency) {
  if (concurrency != NULL) {
    
  } else {
    
  }
  concurrency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), concurrency);
  // @@protoc_insertion_point(field_set_allocated:daprclient.BindingResponseEnvelope.concurrency)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvokeEnvelope::kMethodFieldNumber;
const int InvokeEnvelope::kDataFieldNumber;
const int InvokeEnvelope::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvokeEnvelope::InvokeEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:daprclient.InvokeEnvelope)
}

void InvokeEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

InvokeEnvelope::InvokeEnvelope(const InvokeEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:daprclient.InvokeEnvelope)
}

void InvokeEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
  metadata_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  metadata_.SetEntryDescriptor(
      &::daprclient::InvokeEnvelope_MetadataEntry_descriptor_);
}

InvokeEnvelope::~InvokeEnvelope() {
  // @@protoc_insertion_point(destructor:daprclient.InvokeEnvelope)
  SharedDtor();
}

void InvokeEnvelope::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void InvokeEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvokeEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvokeEnvelope_descriptor_;
}

const InvokeEnvelope& InvokeEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_daprclient_2eproto();
  return *default_instance_;
}

InvokeEnvelope* InvokeEnvelope::default_instance_ = NULL;

InvokeEnvelope* InvokeEnvelope::New(::google::protobuf::Arena* arena) const {
  InvokeEnvelope* n = new InvokeEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InvokeEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:daprclient.InvokeEnvelope)
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
  metadata_.Clear();
}

bool InvokeEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:daprclient.InvokeEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string method = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.InvokeEnvelope.method"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .google.protobuf.Any data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_metadata;
        break;
      }

      // map<string, string> metadata = 3;
      case 3: {
        if (tag == 26) {
         parse_metadata:
          DO_(input->IncrementRecursionDepth());
         parse_loop_metadata:
          InvokeEnvelope_MetadataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.InvokeEnvelope.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.InvokeEnvelope.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:daprclient.InvokeEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:daprclient.InvokeEnvelope)
  return false;
#undef DO_
}

void InvokeEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:daprclient.InvokeEnvelope)
  // optional string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.InvokeEnvelope.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method(), output);
  }

  // optional .google.protobuf.Any data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "daprclient.InvokeEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "daprclient.InvokeEnvelope.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<InvokeEnvelope_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<InvokeEnvelope_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:daprclient.InvokeEnvelope)
}

::google::protobuf::uint8* InvokeEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:daprclient.InvokeEnvelope)
  // optional string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.InvokeEnvelope.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method(), target);
  }

  // optional .google.protobuf.Any data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->data_, false, target);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "daprclient.InvokeEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "daprclient.InvokeEnvelope.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<InvokeEnvelope_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<InvokeEnvelope_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:daprclient.InvokeEnvelope)
  return target;
}

int InvokeEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:daprclient.InvokeEnvelope)
  int total_size = 0;

  // optional string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // optional .google.protobuf.Any data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // map<string, string> metadata = 3;
  total_size += 1 * this->metadata_size();
  {
    ::google::protobuf::scoped_ptr<InvokeEnvelope_MetadataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvokeEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:daprclient.InvokeEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InvokeEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InvokeEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:daprclient.InvokeEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:daprclient.InvokeEnvelope)
    MergeFrom(*source);
  }
}

void InvokeEnvelope::MergeFrom(const InvokeEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:daprclient.InvokeEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  metadata_.MergeFrom(from.metadata_);
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
}

void InvokeEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:daprclient.InvokeEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeEnvelope::CopyFrom(const InvokeEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:daprclient.InvokeEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeEnvelope::IsInitialized() const {

  return true;
}

void InvokeEnvelope::Swap(InvokeEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvokeEnvelope::InternalSwap(InvokeEnvelope* other) {
  method_.Swap(&other->method_);
  std::swap(data_, other->data_);
  metadata_.Swap(&other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InvokeEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvokeEnvelope_descriptor_;
  metadata.reflection = InvokeEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InvokeEnvelope

// optional string method = 1;
void InvokeEnvelope::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InvokeEnvelope::method() const {
  // @@protoc_insertion_point(field_get:daprclient.InvokeEnvelope.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InvokeEnvelope::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.InvokeEnvelope.method)
}
 void InvokeEnvelope::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.InvokeEnvelope.method)
}
 void InvokeEnvelope::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.InvokeEnvelope.method)
}
 ::std::string* InvokeEnvelope::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.InvokeEnvelope.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InvokeEnvelope::release_method() {
  // @@protoc_insertion_point(field_release:daprclient.InvokeEnvelope.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InvokeEnvelope::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:daprclient.InvokeEnvelope.method)
}

// optional .google.protobuf.Any data = 2;
bool InvokeEnvelope::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void InvokeEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& InvokeEnvelope::data() const {
  // @@protoc_insertion_point(field_get:daprclient.InvokeEnvelope.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::google::protobuf::Any* InvokeEnvelope::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:daprclient.InvokeEnvelope.data)
  return data_;
}
::google::protobuf::Any* InvokeEnvelope::release_data() {
  // @@protoc_insertion_point(field_release:daprclient.InvokeEnvelope.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void InvokeEnvelope::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:daprclient.InvokeEnvelope.data)
}

// map<string, string> metadata = 3;
int InvokeEnvelope::metadata_size() const {
  return metadata_.size();
}
void InvokeEnvelope::clear_metadata() {
  metadata_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
InvokeEnvelope::metadata() const {
  // @@protoc_insertion_point(field_map:daprclient.InvokeEnvelope.metadata)
  return metadata_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
InvokeEnvelope::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:daprclient.InvokeEnvelope.metadata)
  return metadata_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTopicSubscriptionsEnvelope::kTopicsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTopicSubscriptionsEnvelope::GetTopicSubscriptionsEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:daprclient.GetTopicSubscriptionsEnvelope)
}

void GetTopicSubscriptionsEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetTopicSubscriptionsEnvelope::GetTopicSubscriptionsEnvelope(const GetTopicSubscriptionsEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:daprclient.GetTopicSubscriptionsEnvelope)
}

void GetTopicSubscriptionsEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

GetTopicSubscriptionsEnvelope::~GetTopicSubscriptionsEnvelope() {
  // @@protoc_insertion_point(destructor:daprclient.GetTopicSubscriptionsEnvelope)
  SharedDtor();
}

void GetTopicSubscriptionsEnvelope::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetTopicSubscriptionsEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetTopicSubscriptionsEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetTopicSubscriptionsEnvelope_descriptor_;
}

const GetTopicSubscriptionsEnvelope& GetTopicSubscriptionsEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_daprclient_2eproto();
  return *default_instance_;
}

GetTopicSubscriptionsEnvelope* GetTopicSubscriptionsEnvelope::default_instance_ = NULL;

GetTopicSubscriptionsEnvelope* GetTopicSubscriptionsEnvelope::New(::google::protobuf::Arena* arena) const {
  GetTopicSubscriptionsEnvelope* n = new GetTopicSubscriptionsEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetTopicSubscriptionsEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:daprclient.GetTopicSubscriptionsEnvelope)
  topics_.Clear();
}

bool GetTopicSubscriptionsEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:daprclient.GetTopicSubscriptionsEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string topics = 1;
      case 1: {
        if (tag == 10) {
         parse_topics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_topics()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topics(this->topics_size() - 1).data(),
            this->topics(this->topics_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.GetTopicSubscriptionsEnvelope.topics"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_topics;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:daprclient.GetTopicSubscriptionsEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:daprclient.GetTopicSubscriptionsEnvelope)
  return false;
#undef DO_
}

void GetTopicSubscriptionsEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:daprclient.GetTopicSubscriptionsEnvelope)
  // repeated string topics = 1;
  for (int i = 0; i < this->topics_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topics(i).data(), this->topics(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.GetTopicSubscriptionsEnvelope.topics");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->topics(i), output);
  }

  // @@protoc_insertion_point(serialize_end:daprclient.GetTopicSubscriptionsEnvelope)
}

::google::protobuf::uint8* GetTopicSubscriptionsEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:daprclient.GetTopicSubscriptionsEnvelope)
  // repeated string topics = 1;
  for (int i = 0; i < this->topics_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topics(i).data(), this->topics(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.GetTopicSubscriptionsEnvelope.topics");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->topics(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:daprclient.GetTopicSubscriptionsEnvelope)
  return target;
}

int GetTopicSubscriptionsEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:daprclient.GetTopicSubscriptionsEnvelope)
  int total_size = 0;

  // repeated string topics = 1;
  total_size += 1 * this->topics_size();
  for (int i = 0; i < this->topics_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->topics(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetTopicSubscriptionsEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:daprclient.GetTopicSubscriptionsEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetTopicSubscriptionsEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTopicSubscriptionsEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:daprclient.GetTopicSubscriptionsEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:daprclient.GetTopicSubscriptionsEnvelope)
    MergeFrom(*source);
  }
}

void GetTopicSubscriptionsEnvelope::MergeFrom(const GetTopicSubscriptionsEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:daprclient.GetTopicSubscriptionsEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  topics_.MergeFrom(from.topics_);
}

void GetTopicSubscriptionsEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:daprclient.GetTopicSubscriptionsEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTopicSubscriptionsEnvelope::CopyFrom(const GetTopicSubscriptionsEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:daprclient.GetTopicSubscriptionsEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTopicSubscriptionsEnvelope::IsInitialized() const {

  return true;
}

void GetTopicSubscriptionsEnvelope::Swap(GetTopicSubscriptionsEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTopicSubscriptionsEnvelope::InternalSwap(GetTopicSubscriptionsEnvelope* other) {
  topics_.UnsafeArenaSwap(&other->topics_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetTopicSubscriptionsEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetTopicSubscriptionsEnvelope_descriptor_;
  metadata.reflection = GetTopicSubscriptionsEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetTopicSubscriptionsEnvelope

// repeated string topics = 1;
int GetTopicSubscriptionsEnvelope::topics_size() const {
  return topics_.size();
}
void GetTopicSubscriptionsEnvelope::clear_topics() {
  topics_.Clear();
}
 const ::std::string& GetTopicSubscriptionsEnvelope::topics(int index) const {
  // @@protoc_insertion_point(field_get:daprclient.GetTopicSubscriptionsEnvelope.topics)
  return topics_.Get(index);
}
 ::std::string* GetTopicSubscriptionsEnvelope::mutable_topics(int index) {
  // @@protoc_insertion_point(field_mutable:daprclient.GetTopicSubscriptionsEnvelope.topics)
  return topics_.Mutable(index);
}
 void GetTopicSubscriptionsEnvelope::set_topics(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:daprclient.GetTopicSubscriptionsEnvelope.topics)
  topics_.Mutable(index)->assign(value);
}
 void GetTopicSubscriptionsEnvelope::set_topics(int index, const char* value) {
  topics_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:daprclient.GetTopicSubscriptionsEnvelope.topics)
}
 void GetTopicSubscriptionsEnvelope::set_topics(int index, const char* value, size_t size) {
  topics_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:daprclient.GetTopicSubscriptionsEnvelope.topics)
}
 ::std::string* GetTopicSubscriptionsEnvelope::add_topics() {
  // @@protoc_insertion_point(field_add_mutable:daprclient.GetTopicSubscriptionsEnvelope.topics)
  return topics_.Add();
}
 void GetTopicSubscriptionsEnvelope::add_topics(const ::std::string& value) {
  topics_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:daprclient.GetTopicSubscriptionsEnvelope.topics)
}
 void GetTopicSubscriptionsEnvelope::add_topics(const char* value) {
  topics_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:daprclient.GetTopicSubscriptionsEnvelope.topics)
}
 void GetTopicSubscriptionsEnvelope::add_topics(const char* value, size_t size) {
  topics_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:daprclient.GetTopicSubscriptionsEnvelope.topics)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetTopicSubscriptionsEnvelope::topics() const {
  // @@protoc_insertion_point(field_list:daprclient.GetTopicSubscriptionsEnvelope.topics)
  return topics_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
GetTopicSubscriptionsEnvelope::mutable_topics() {
  // @@protoc_insertion_point(field_mutable_list:daprclient.GetTopicSubscriptionsEnvelope.topics)
  return &topics_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBindingsSubscriptionsEnvelope::kBindingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBindingsSubscriptionsEnvelope::GetBindingsSubscriptionsEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:daprclient.GetBindingsSubscriptionsEnvelope)
}

void GetBindingsSubscriptionsEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetBindingsSubscriptionsEnvelope::GetBindingsSubscriptionsEnvelope(const GetBindingsSubscriptionsEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:daprclient.GetBindingsSubscriptionsEnvelope)
}

void GetBindingsSubscriptionsEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

GetBindingsSubscriptionsEnvelope::~GetBindingsSubscriptionsEnvelope() {
  // @@protoc_insertion_point(destructor:daprclient.GetBindingsSubscriptionsEnvelope)
  SharedDtor();
}

void GetBindingsSubscriptionsEnvelope::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetBindingsSubscriptionsEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBindingsSubscriptionsEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBindingsSubscriptionsEnvelope_descriptor_;
}

const GetBindingsSubscriptionsEnvelope& GetBindingsSubscriptionsEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_daprclient_2eproto();
  return *default_instance_;
}

GetBindingsSubscriptionsEnvelope* GetBindingsSubscriptionsEnvelope::default_instance_ = NULL;

GetBindingsSubscriptionsEnvelope* GetBindingsSubscriptionsEnvelope::New(::google::protobuf::Arena* arena) const {
  GetBindingsSubscriptionsEnvelope* n = new GetBindingsSubscriptionsEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBindingsSubscriptionsEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:daprclient.GetBindingsSubscriptionsEnvelope)
  bindings_.Clear();
}

bool GetBindingsSubscriptionsEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:daprclient.GetBindingsSubscriptionsEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string bindings = 1;
      case 1: {
        if (tag == 10) {
         parse_bindings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_bindings()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bindings(this->bindings_size() - 1).data(),
            this->bindings(this->bindings_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.GetBindingsSubscriptionsEnvelope.bindings"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_bindings;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:daprclient.GetBindingsSubscriptionsEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:daprclient.GetBindingsSubscriptionsEnvelope)
  return false;
#undef DO_
}

void GetBindingsSubscriptionsEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:daprclient.GetBindingsSubscriptionsEnvelope)
  // repeated string bindings = 1;
  for (int i = 0; i < this->bindings_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bindings(i).data(), this->bindings(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.GetBindingsSubscriptionsEnvelope.bindings");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->bindings(i), output);
  }

  // @@protoc_insertion_point(serialize_end:daprclient.GetBindingsSubscriptionsEnvelope)
}

::google::protobuf::uint8* GetBindingsSubscriptionsEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:daprclient.GetBindingsSubscriptionsEnvelope)
  // repeated string bindings = 1;
  for (int i = 0; i < this->bindings_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bindings(i).data(), this->bindings(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.GetBindingsSubscriptionsEnvelope.bindings");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->bindings(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:daprclient.GetBindingsSubscriptionsEnvelope)
  return target;
}

int GetBindingsSubscriptionsEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:daprclient.GetBindingsSubscriptionsEnvelope)
  int total_size = 0;

  // repeated string bindings = 1;
  total_size += 1 * this->bindings_size();
  for (int i = 0; i < this->bindings_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->bindings(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBindingsSubscriptionsEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:daprclient.GetBindingsSubscriptionsEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetBindingsSubscriptionsEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBindingsSubscriptionsEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:daprclient.GetBindingsSubscriptionsEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:daprclient.GetBindingsSubscriptionsEnvelope)
    MergeFrom(*source);
  }
}

void GetBindingsSubscriptionsEnvelope::MergeFrom(const GetBindingsSubscriptionsEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:daprclient.GetBindingsSubscriptionsEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  bindings_.MergeFrom(from.bindings_);
}

void GetBindingsSubscriptionsEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:daprclient.GetBindingsSubscriptionsEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBindingsSubscriptionsEnvelope::CopyFrom(const GetBindingsSubscriptionsEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:daprclient.GetBindingsSubscriptionsEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBindingsSubscriptionsEnvelope::IsInitialized() const {

  return true;
}

void GetBindingsSubscriptionsEnvelope::Swap(GetBindingsSubscriptionsEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBindingsSubscriptionsEnvelope::InternalSwap(GetBindingsSubscriptionsEnvelope* other) {
  bindings_.UnsafeArenaSwap(&other->bindings_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBindingsSubscriptionsEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBindingsSubscriptionsEnvelope_descriptor_;
  metadata.reflection = GetBindingsSubscriptionsEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBindingsSubscriptionsEnvelope

// repeated string bindings = 1;
int GetBindingsSubscriptionsEnvelope::bindings_size() const {
  return bindings_.size();
}
void GetBindingsSubscriptionsEnvelope::clear_bindings() {
  bindings_.Clear();
}
 const ::std::string& GetBindingsSubscriptionsEnvelope::bindings(int index) const {
  // @@protoc_insertion_point(field_get:daprclient.GetBindingsSubscriptionsEnvelope.bindings)
  return bindings_.Get(index);
}
 ::std::string* GetBindingsSubscriptionsEnvelope::mutable_bindings(int index) {
  // @@protoc_insertion_point(field_mutable:daprclient.GetBindingsSubscriptionsEnvelope.bindings)
  return bindings_.Mutable(index);
}
 void GetBindingsSubscriptionsEnvelope::set_bindings(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:daprclient.GetBindingsSubscriptionsEnvelope.bindings)
  bindings_.Mutable(index)->assign(value);
}
 void GetBindingsSubscriptionsEnvelope::set_bindings(int index, const char* value) {
  bindings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:daprclient.GetBindingsSubscriptionsEnvelope.bindings)
}
 void GetBindingsSubscriptionsEnvelope::set_bindings(int index, const char* value, size_t size) {
  bindings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:daprclient.GetBindingsSubscriptionsEnvelope.bindings)
}
 ::std::string* GetBindingsSubscriptionsEnvelope::add_bindings() {
  // @@protoc_insertion_point(field_add_mutable:daprclient.GetBindingsSubscriptionsEnvelope.bindings)
  return bindings_.Add();
}
 void GetBindingsSubscriptionsEnvelope::add_bindings(const ::std::string& value) {
  bindings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:daprclient.GetBindingsSubscriptionsEnvelope.bindings)
}
 void GetBindingsSubscriptionsEnvelope::add_bindings(const char* value) {
  bindings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:daprclient.GetBindingsSubscriptionsEnvelope.bindings)
}
 void GetBindingsSubscriptionsEnvelope::add_bindings(const char* value, size_t size) {
  bindings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:daprclient.GetBindingsSubscriptionsEnvelope.bindings)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetBindingsSubscriptionsEnvelope::bindings() const {
  // @@protoc_insertion_point(field_list:daprclient.GetBindingsSubscriptionsEnvelope.bindings)
  return bindings_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
GetBindingsSubscriptionsEnvelope::mutable_bindings() {
  // @@protoc_insertion_point(field_mutable_list:daprclient.GetBindingsSubscriptionsEnvelope.bindings)
  return &bindings_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int State::kKeyFieldNumber;
const int State::kValueFieldNumber;
const int State::kEtagFieldNumber;
const int State::kMetadataFieldNumber;
const int State::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

State::State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:daprclient.State)
}

void State::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  value_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
  options_ = const_cast< ::daprclient::StateOptions*>(&::daprclient::StateOptions::default_instance());
}

State::State(const State& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:daprclient.State)
}

void State::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  metadata_.SetEntryDescriptor(
      &::daprclient::State_MetadataEntry_descriptor_);
  options_ = NULL;
}

State::~State() {
  // @@protoc_insertion_point(destructor:daprclient.State)
  SharedDtor();
}

void State::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete value_;
    delete options_;
  }
}

void State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* State::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return State_descriptor_;
}

const State& State::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_daprclient_2eproto();
  return *default_instance_;
}

State* State::default_instance_ = NULL;

State* State::New(::google::protobuf::Arena* arena) const {
  State* n = new State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void State::Clear() {
// @@protoc_insertion_point(message_clear_start:daprclient.State)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
  metadata_.Clear();
}

bool State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:daprclient.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.State.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional .google.protobuf.Any value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_etag;
        break;
      }

      // optional string etag = 3;
      case 3: {
        if (tag == 26) {
         parse_etag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etag().data(), this->etag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.State.etag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_metadata;
        break;
      }

      // map<string, string> metadata = 4;
      case 4: {
        if (tag == 34) {
         parse_metadata:
          DO_(input->IncrementRecursionDepth());
         parse_loop_metadata:
          State_MetadataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.State.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.State.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_options;
        break;
      }

      // optional .daprclient.StateOptions options = 5;
      case 5: {
        if (tag == 42) {
         parse_options:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:daprclient.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:daprclient.State)
  return false;
#undef DO_
}

void State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:daprclient.State)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.State.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional .google.protobuf.Any value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  // optional string etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), this->etag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.State.etag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->etag(), output);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "daprclient.State.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "daprclient.State.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<State_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<State_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .daprclient.StateOptions options = 5;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->options_, output);
  }

  // @@protoc_insertion_point(serialize_end:daprclient.State)
}

::google::protobuf::uint8* State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:daprclient.State)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.State.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional .google.protobuf.Any value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_, false, target);
  }

  // optional string etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), this->etag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.State.etag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->etag(), target);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "daprclient.State.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "daprclient.State.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<State_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<State_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .daprclient.StateOptions options = 5;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->options_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:daprclient.State)
  return target;
}

int State::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:daprclient.State)
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional .google.protobuf.Any value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  // optional string etag = 3;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etag());
  }

  // optional .daprclient.StateOptions options = 5;
  if (this->has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->options_);
  }

  // map<string, string> metadata = 4;
  total_size += 1 * this->metadata_size();
  {
    ::google::protobuf::scoped_ptr<State_MetadataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:daprclient.State)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const State* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:daprclient.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:daprclient.State)
    MergeFrom(*source);
  }
}

void State::MergeFrom(const State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:daprclient.State)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  metadata_.MergeFrom(from.metadata_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_value()) {
    mutable_value()->::google::protobuf::Any::MergeFrom(from.value());
  }
  if (from.etag().size() > 0) {

    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_options()) {
    mutable_options()->::daprclient::StateOptions::MergeFrom(from.options());
  }
}

void State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:daprclient.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void State::CopyFrom(const State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:daprclient.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool State::IsInitialized() const {

  return true;
}

void State::Swap(State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void State::InternalSwap(State* other) {
  key_.Swap(&other->key_);
  std::swap(value_, other->value_);
  etag_.Swap(&other->etag_);
  metadata_.Swap(&other->metadata_);
  std::swap(options_, other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata State::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = State_descriptor_;
  metadata.reflection = State_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// State

// optional string key = 1;
void State::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& State::key() const {
  // @@protoc_insertion_point(field_get:daprclient.State.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void State::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.State.key)
}
 void State::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.State.key)
}
 void State::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.State.key)
}
 ::std::string* State::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.State.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* State::release_key() {
  // @@protoc_insertion_point(field_release:daprclient.State.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void State::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:daprclient.State.key)
}

// optional .google.protobuf.Any value = 2;
bool State::has_value() const {
  return !_is_default_instance_ && value_ != NULL;
}
void State::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::google::protobuf::Any& State::value() const {
  // @@protoc_insertion_point(field_get:daprclient.State.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
::google::protobuf::Any* State::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:daprclient.State.value)
  return value_;
}
::google::protobuf::Any* State::release_value() {
  // @@protoc_insertion_point(field_release:daprclient.State.value)
  
  ::google::protobuf::Any* temp = value_;
  value_ = NULL;
  return temp;
}
void State::set_allocated_value(::google::protobuf::Any* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:daprclient.State.value)
}

// optional string etag = 3;
void State::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& State::etag() const {
  // @@protoc_insertion_point(field_get:daprclient.State.etag)
  return etag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void State::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.State.etag)
}
 void State::set_etag(const char* value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.State.etag)
}
 void State::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.State.etag)
}
 ::std::string* State::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.State.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* State::release_etag() {
  // @@protoc_insertion_point(field_release:daprclient.State.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void State::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:daprclient.State.etag)
}

// map<string, string> metadata = 4;
int State::metadata_size() const {
  return metadata_.size();
}
void State::clear_metadata() {
  metadata_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
State::metadata() const {
  // @@protoc_insertion_point(field_map:daprclient.State.metadata)
  return metadata_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
State::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:daprclient.State.metadata)
  return metadata_.MutableMap();
}

// optional .daprclient.StateOptions options = 5;
bool State::has_options() const {
  return !_is_default_instance_ && options_ != NULL;
}
void State::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
}
const ::daprclient::StateOptions& State::options() const {
  // @@protoc_insertion_point(field_get:daprclient.State.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
::daprclient::StateOptions* State::mutable_options() {
  
  if (options_ == NULL) {
    options_ = new ::daprclient::StateOptions;
  }
  // @@protoc_insertion_point(field_mutable:daprclient.State.options)
  return options_;
}
::daprclient::StateOptions* State::release_options() {
  // @@protoc_insertion_point(field_release:daprclient.State.options)
  
  ::daprclient::StateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
void State::set_allocated_options(::daprclient::StateOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:daprclient.State.options)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateOptions::kConcurrencyFieldNumber;
const int StateOptions::kConsistencyFieldNumber;
const int StateOptions::kRetryPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateOptions::StateOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:daprclient.StateOptions)
}

void StateOptions::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retrypolicy_ = const_cast< ::daprclient::RetryPolicy*>(&::daprclient::RetryPolicy::default_instance());
}

StateOptions::StateOptions(const StateOptions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:daprclient.StateOptions)
}

void StateOptions::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  concurrency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retrypolicy_ = NULL;
}

StateOptions::~StateOptions() {
  // @@protoc_insertion_point(destructor:daprclient.StateOptions)
  SharedDtor();
}

void StateOptions::SharedDtor() {
  concurrency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete retrypolicy_;
  }
}

void StateOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StateOptions_descriptor_;
}

const StateOptions& StateOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_daprclient_2eproto();
  return *default_instance_;
}

StateOptions* StateOptions::default_instance_ = NULL;

StateOptions* StateOptions::New(::google::protobuf::Arena* arena) const {
  StateOptions* n = new StateOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StateOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:daprclient.StateOptions)
  concurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && retrypolicy_ != NULL) delete retrypolicy_;
  retrypolicy_ = NULL;
}

bool StateOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:daprclient.StateOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string concurrency = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_concurrency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->concurrency().data(), this->concurrency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.StateOptions.concurrency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_consistency;
        break;
      }

      // optional string consistency = 2;
      case 2: {
        if (tag == 18) {
         parse_consistency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_consistency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->consistency().data(), this->consistency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.StateOptions.consistency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_retryPolicy;
        break;
      }

      // optional .daprclient.RetryPolicy retryPolicy = 3;
      case 3: {
        if (tag == 26) {
         parse_retryPolicy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retrypolicy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:daprclient.StateOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:daprclient.StateOptions)
  return false;
#undef DO_
}

void StateOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:daprclient.StateOptions)
  // optional string concurrency = 1;
  if (this->concurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concurrency().data(), this->concurrency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.StateOptions.concurrency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->concurrency(), output);
  }

  // optional string consistency = 2;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), this->consistency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.StateOptions.consistency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->consistency(), output);
  }

  // optional .daprclient.RetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->retrypolicy_, output);
  }

  // @@protoc_insertion_point(serialize_end:daprclient.StateOptions)
}

::google::protobuf::uint8* StateOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:daprclient.StateOptions)
  // optional string concurrency = 1;
  if (this->concurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concurrency().data(), this->concurrency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.StateOptions.concurrency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->concurrency(), target);
  }

  // optional string consistency = 2;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), this->consistency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.StateOptions.consistency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->consistency(), target);
  }

  // optional .daprclient.RetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->retrypolicy_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:daprclient.StateOptions)
  return target;
}

int StateOptions::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:daprclient.StateOptions)
  int total_size = 0;

  // optional string concurrency = 1;
  if (this->concurrency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->concurrency());
  }

  // optional string consistency = 2;
  if (this->consistency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->consistency());
  }

  // optional .daprclient.RetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retrypolicy_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:daprclient.StateOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StateOptions* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StateOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:daprclient.StateOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:daprclient.StateOptions)
    MergeFrom(*source);
  }
}

void StateOptions::MergeFrom(const StateOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:daprclient.StateOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.concurrency().size() > 0) {

    concurrency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.concurrency_);
  }
  if (from.consistency().size() > 0) {

    consistency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consistency_);
  }
  if (from.has_retrypolicy()) {
    mutable_retrypolicy()->::daprclient::RetryPolicy::MergeFrom(from.retrypolicy());
  }
}

void StateOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:daprclient.StateOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateOptions::CopyFrom(const StateOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:daprclient.StateOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateOptions::IsInitialized() const {

  return true;
}

void StateOptions::Swap(StateOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateOptions::InternalSwap(StateOptions* other) {
  concurrency_.Swap(&other->concurrency_);
  consistency_.Swap(&other->consistency_);
  std::swap(retrypolicy_, other->retrypolicy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StateOptions_descriptor_;
  metadata.reflection = StateOptions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StateOptions

// optional string concurrency = 1;
void StateOptions::clear_concurrency() {
  concurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StateOptions::concurrency() const {
  // @@protoc_insertion_point(field_get:daprclient.StateOptions.concurrency)
  return concurrency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateOptions::set_concurrency(const ::std::string& value) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.StateOptions.concurrency)
}
 void StateOptions::set_concurrency(const char* value) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.StateOptions.concurrency)
}
 void StateOptions::set_concurrency(const char* value, size_t size) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.StateOptions.concurrency)
}
 ::std::string* StateOptions::mutable_concurrency() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.StateOptions.concurrency)
  return concurrency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StateOptions::release_concurrency() {
  // @@protoc_insertion_point(field_release:daprclient.StateOptions.concurrency)
  
  return concurrency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateOptions::set_allocated_concurrency(::std::string* concurrency) {
  if (concurrency != NULL) {
    
  } else {
    
  }
  concurrency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), concurrency);
  // @@protoc_insertion_point(field_set_allocated:daprclient.StateOptions.concurrency)
}

// optional string consistency = 2;
void StateOptions::clear_consistency() {
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StateOptions::consistency() const {
  // @@protoc_insertion_point(field_get:daprclient.StateOptions.consistency)
  return consistency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateOptions::set_consistency(const ::std::string& value) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.StateOptions.consistency)
}
 void StateOptions::set_consistency(const char* value) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.StateOptions.consistency)
}
 void StateOptions::set_consistency(const char* value, size_t size) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.StateOptions.consistency)
}
 ::std::string* StateOptions::mutable_consistency() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.StateOptions.consistency)
  return consistency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StateOptions::release_consistency() {
  // @@protoc_insertion_point(field_release:daprclient.StateOptions.consistency)
  
  return consistency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateOptions::set_allocated_consistency(::std::string* consistency) {
  if (consistency != NULL) {
    
  } else {
    
  }
  consistency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), consistency);
  // @@protoc_insertion_point(field_set_allocated:daprclient.StateOptions.consistency)
}

// optional .daprclient.RetryPolicy retryPolicy = 3;
bool StateOptions::has_retrypolicy() const {
  return !_is_default_instance_ && retrypolicy_ != NULL;
}
void StateOptions::clear_retrypolicy() {
  if (GetArenaNoVirtual() == NULL && retrypolicy_ != NULL) delete retrypolicy_;
  retrypolicy_ = NULL;
}
const ::daprclient::RetryPolicy& StateOptions::retrypolicy() const {
  // @@protoc_insertion_point(field_get:daprclient.StateOptions.retryPolicy)
  return retrypolicy_ != NULL ? *retrypolicy_ : *default_instance_->retrypolicy_;
}
::daprclient::RetryPolicy* StateOptions::mutable_retrypolicy() {
  
  if (retrypolicy_ == NULL) {
    retrypolicy_ = new ::daprclient::RetryPolicy;
  }
  // @@protoc_insertion_point(field_mutable:daprclient.StateOptions.retryPolicy)
  return retrypolicy_;
}
::daprclient::RetryPolicy* StateOptions::release_retrypolicy() {
  // @@protoc_insertion_point(field_release:daprclient.StateOptions.retryPolicy)
  
  ::daprclient::RetryPolicy* temp = retrypolicy_;
  retrypolicy_ = NULL;
  return temp;
}
void StateOptions::set_allocated_retrypolicy(::daprclient::RetryPolicy* retrypolicy) {
  delete retrypolicy_;
  retrypolicy_ = retrypolicy;
  if (retrypolicy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:daprclient.StateOptions.retryPolicy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetryPolicy::kThresholdFieldNumber;
const int RetryPolicy::kPatternFieldNumber;
const int RetryPolicy::kIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetryPolicy::RetryPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:daprclient.RetryPolicy)
}

void RetryPolicy::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  interval_ = const_cast< ::google::protobuf::Duration*>(&::google::protobuf::Duration::default_instance());
}

RetryPolicy::RetryPolicy(const RetryPolicy& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:daprclient.RetryPolicy)
}

void RetryPolicy::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  threshold_ = 0;
  pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interval_ = NULL;
}

RetryPolicy::~RetryPolicy() {
  // @@protoc_insertion_point(destructor:daprclient.RetryPolicy)
  SharedDtor();
}

void RetryPolicy::SharedDtor() {
  pattern_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete interval_;
  }
}

void RetryPolicy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetryPolicy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetryPolicy_descriptor_;
}

const RetryPolicy& RetryPolicy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_daprclient_2eproto();
  return *default_instance_;
}

RetryPolicy* RetryPolicy::default_instance_ = NULL;

RetryPolicy* RetryPolicy::New(::google::protobuf::Arena* arena) const {
  RetryPolicy* n = new RetryPolicy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetryPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:daprclient.RetryPolicy)
  threshold_ = 0;
  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) delete interval_;
  interval_ = NULL;
}

bool RetryPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:daprclient.RetryPolicy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 threshold = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pattern;
        break;
      }

      // optional string pattern = 2;
      case 2: {
        if (tag == 18) {
         parse_pattern:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pattern()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pattern().data(), this->pattern().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daprclient.RetryPolicy.pattern"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_interval;
        break;
      }

      // optional .google.protobuf.Duration interval = 3;
      case 3: {
        if (tag == 26) {
         parse_interval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:daprclient.RetryPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:daprclient.RetryPolicy)
  return false;
#undef DO_
}

void RetryPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:daprclient.RetryPolicy)
  // optional int32 threshold = 1;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->threshold(), output);
  }

  // optional string pattern = 2;
  if (this->pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern().data(), this->pattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.RetryPolicy.pattern");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pattern(), output);
  }

  // optional .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->interval_, output);
  }

  // @@protoc_insertion_point(serialize_end:daprclient.RetryPolicy)
}

::google::protobuf::uint8* RetryPolicy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:daprclient.RetryPolicy)
  // optional int32 threshold = 1;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->threshold(), target);
  }

  // optional string pattern = 2;
  if (this->pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern().data(), this->pattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daprclient.RetryPolicy.pattern");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pattern(), target);
  }

  // optional .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->interval_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:daprclient.RetryPolicy)
  return target;
}

int RetryPolicy::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:daprclient.RetryPolicy)
  int total_size = 0;

  // optional int32 threshold = 1;
  if (this->threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->threshold());
  }

  // optional string pattern = 2;
  if (this->pattern().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pattern());
  }

  // optional .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->interval_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetryPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:daprclient.RetryPolicy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RetryPolicy* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RetryPolicy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:daprclient.RetryPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:daprclient.RetryPolicy)
    MergeFrom(*source);
  }
}

void RetryPolicy::MergeFrom(const RetryPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:daprclient.RetryPolicy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
  if (from.pattern().size() > 0) {

    pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pattern_);
  }
  if (from.has_interval()) {
    mutable_interval()->::google::protobuf::Duration::MergeFrom(from.interval());
  }
}

void RetryPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:daprclient.RetryPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetryPolicy::CopyFrom(const RetryPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:daprclient.RetryPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetryPolicy::IsInitialized() const {

  return true;
}

void RetryPolicy::Swap(RetryPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetryPolicy::InternalSwap(RetryPolicy* other) {
  std::swap(threshold_, other->threshold_);
  pattern_.Swap(&other->pattern_);
  std::swap(interval_, other->interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetryPolicy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetryPolicy_descriptor_;
  metadata.reflection = RetryPolicy_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RetryPolicy

// optional int32 threshold = 1;
void RetryPolicy::clear_threshold() {
  threshold_ = 0;
}
 ::google::protobuf::int32 RetryPolicy::threshold() const {
  // @@protoc_insertion_point(field_get:daprclient.RetryPolicy.threshold)
  return threshold_;
}
 void RetryPolicy::set_threshold(::google::protobuf::int32 value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:daprclient.RetryPolicy.threshold)
}

// optional string pattern = 2;
void RetryPolicy::clear_pattern() {
  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RetryPolicy::pattern() const {
  // @@protoc_insertion_point(field_get:daprclient.RetryPolicy.pattern)
  return pattern_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RetryPolicy::set_pattern(const ::std::string& value) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:daprclient.RetryPolicy.pattern)
}
 void RetryPolicy::set_pattern(const char* value) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:daprclient.RetryPolicy.pattern)
}
 void RetryPolicy::set_pattern(const char* value, size_t size) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:daprclient.RetryPolicy.pattern)
}
 ::std::string* RetryPolicy::mutable_pattern() {
  
  // @@protoc_insertion_point(field_mutable:daprclient.RetryPolicy.pattern)
  return pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RetryPolicy::release_pattern() {
  // @@protoc_insertion_point(field_release:daprclient.RetryPolicy.pattern)
  
  return pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RetryPolicy::set_allocated_pattern(::std::string* pattern) {
  if (pattern != NULL) {
    
  } else {
    
  }
  pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pattern);
  // @@protoc_insertion_point(field_set_allocated:daprclient.RetryPolicy.pattern)
}

// optional .google.protobuf.Duration interval = 3;
bool RetryPolicy::has_interval() const {
  return !_is_default_instance_ && interval_ != NULL;
}
void RetryPolicy::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) delete interval_;
  interval_ = NULL;
}
const ::google::protobuf::Duration& RetryPolicy::interval() const {
  // @@protoc_insertion_point(field_get:daprclient.RetryPolicy.interval)
  return interval_ != NULL ? *interval_ : *default_instance_->interval_;
}
::google::protobuf::Duration* RetryPolicy::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:daprclient.RetryPolicy.interval)
  return interval_;
}
::google::protobuf::Duration* RetryPolicy::release_interval() {
  // @@protoc_insertion_point(field_release:daprclient.RetryPolicy.interval)
  
  ::google::protobuf::Duration* temp = interval_;
  interval_ = NULL;
  return temp;
}
void RetryPolicy::set_allocated_interval(::google::protobuf::Duration* interval) {
  delete interval_;
  interval_ = interval;
  if (interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:daprclient.RetryPolicy.interval)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace daprclient

// @@protoc_insertion_point(global_scope)
