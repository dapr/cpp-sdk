// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dapr.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dapr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
<<<<<<< HEAD

=======
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_dapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSecretEnvelope_MetadataEntry_DoNotUse_dapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSecretResponseEnvelope_DataEntry_DoNotUse_dapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeBindingEnvelope_MetadataEntry_DoNotUse_dapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeServiceEnvelope_MetadataEntry_DoNotUse_dapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse_dapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RetryPolicy_dapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_State_MetadataEntry_DoNotUse_dapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StateOptions_dapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_StateRequest_dapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateRequest_MetadataEntry_DoNotUse_dapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StateRequestOptions_dapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_dapr_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StateRetryPolicy_dapr_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
namespace dapr {
class InvokeServiceResponseEnvelope_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse> _instance;
} _InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse_default_instance_;
class InvokeServiceResponseEnvelopeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeServiceResponseEnvelope> _instance;
} _InvokeServiceResponseEnvelope_default_instance_;
class DeleteStateEnvelopeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteStateEnvelope> _instance;
} _DeleteStateEnvelope_default_instance_;
class SaveStateEnvelopeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SaveStateEnvelope> _instance;
} _SaveStateEnvelope_default_instance_;
class GetStateEnvelopeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStateEnvelope> _instance;
} _GetStateEnvelope_default_instance_;
class GetStateResponseEnvelopeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStateResponseEnvelope> _instance;
} _GetStateResponseEnvelope_default_instance_;
class GetSecretEnvelope_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSecretEnvelope_MetadataEntry_DoNotUse> _instance;
} _GetSecretEnvelope_MetadataEntry_DoNotUse_default_instance_;
class GetSecretEnvelopeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSecretEnvelope> _instance;
} _GetSecretEnvelope_default_instance_;
class GetSecretResponseEnvelope_DataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSecretResponseEnvelope_DataEntry_DoNotUse> _instance;
} _GetSecretResponseEnvelope_DataEntry_DoNotUse_default_instance_;
class GetSecretResponseEnvelopeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSecretResponseEnvelope> _instance;
} _GetSecretResponseEnvelope_default_instance_;
class InvokeBindingEnvelope_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeBindingEnvelope_MetadataEntry_DoNotUse> _instance;
} _InvokeBindingEnvelope_MetadataEntry_DoNotUse_default_instance_;
class InvokeBindingEnvelopeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeBindingEnvelope> _instance;
} _InvokeBindingEnvelope_default_instance_;
class InvokeServiceEnvelope_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeServiceEnvelope_MetadataEntry_DoNotUse> _instance;
} _InvokeServiceEnvelope_MetadataEntry_DoNotUse_default_instance_;
class InvokeServiceEnvelopeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InvokeServiceEnvelope> _instance;
} _InvokeServiceEnvelope_default_instance_;
class PublishEventEnvelopeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PublishEventEnvelope> _instance;
} _PublishEventEnvelope_default_instance_;
class State_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<State_MetadataEntry_DoNotUse> _instance;
} _State_MetadataEntry_DoNotUse_default_instance_;
class StateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<State> _instance;
} _State_default_instance_;
class StateOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateOptions> _instance;
} _StateOptions_default_instance_;
class RetryPolicyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RetryPolicy> _instance;
} _RetryPolicy_default_instance_;
class StateRequest_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateRequest_MetadataEntry_DoNotUse> _instance;
} _StateRequest_MetadataEntry_DoNotUse_default_instance_;
class StateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateRequest> _instance;
} _StateRequest_default_instance_;
class StateRequestOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateRequestOptions> _instance;
} _StateRequestOptions_default_instance_;
class StateRetryPolicyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateRetryPolicy> _instance;
} _StateRetryPolicy_default_instance_;
}  // namespace dapr
static void InitDefaultsscc_info_DeleteStateEnvelope_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_DeleteStateEnvelope_default_instance_;
    new (ptr) ::dapr::DeleteStateEnvelope();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::DeleteStateEnvelope::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteStateEnvelope_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteStateEnvelope_dapr_2eproto}, {
      &scc_info_StateOptions_dapr_2eproto.base,}};

static void InitDefaultsscc_info_GetSecretEnvelope_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_GetSecretEnvelope_default_instance_;
    new (ptr) ::dapr::GetSecretEnvelope();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::GetSecretEnvelope::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSecretEnvelope_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSecretEnvelope_dapr_2eproto}, {
      &scc_info_GetSecretEnvelope_MetadataEntry_DoNotUse_dapr_2eproto.base,}};

static void InitDefaultsscc_info_GetSecretEnvelope_MetadataEntry_DoNotUse_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_GetSecretEnvelope_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::GetSecretEnvelope_MetadataEntry_DoNotUse();
  }
  ::dapr::GetSecretEnvelope_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSecretEnvelope_MetadataEntry_DoNotUse_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSecretEnvelope_MetadataEntry_DoNotUse_dapr_2eproto}, {}};

static void InitDefaultsscc_info_GetSecretResponseEnvelope_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_GetSecretResponseEnvelope_default_instance_;
    new (ptr) ::dapr::GetSecretResponseEnvelope();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::GetSecretResponseEnvelope::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSecretResponseEnvelope_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSecretResponseEnvelope_dapr_2eproto}, {
      &scc_info_GetSecretResponseEnvelope_DataEntry_DoNotUse_dapr_2eproto.base,}};

static void InitDefaultsscc_info_GetSecretResponseEnvelope_DataEntry_DoNotUse_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_GetSecretResponseEnvelope_DataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::GetSecretResponseEnvelope_DataEntry_DoNotUse();
  }
  ::dapr::GetSecretResponseEnvelope_DataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSecretResponseEnvelope_DataEntry_DoNotUse_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSecretResponseEnvelope_DataEntry_DoNotUse_dapr_2eproto}, {}};

static void InitDefaultsscc_info_GetStateEnvelope_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_GetStateEnvelope_default_instance_;
    new (ptr) ::dapr::GetStateEnvelope();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::GetStateEnvelope::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetStateEnvelope_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetStateEnvelope_dapr_2eproto}, {}};

static void InitDefaultsscc_info_GetStateResponseEnvelope_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_GetStateResponseEnvelope_default_instance_;
    new (ptr) ::dapr::GetStateResponseEnvelope();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::GetStateResponseEnvelope::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetStateResponseEnvelope_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetStateResponseEnvelope_dapr_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_InvokeBindingEnvelope_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_InvokeBindingEnvelope_default_instance_;
    new (ptr) ::dapr::InvokeBindingEnvelope();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::InvokeBindingEnvelope::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_InvokeBindingEnvelope_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_InvokeBindingEnvelope_dapr_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_InvokeBindingEnvelope_MetadataEntry_DoNotUse_dapr_2eproto.base,}};

static void InitDefaultsscc_info_InvokeBindingEnvelope_MetadataEntry_DoNotUse_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_InvokeBindingEnvelope_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse();
  }
  ::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeBindingEnvelope_MetadataEntry_DoNotUse_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InvokeBindingEnvelope_MetadataEntry_DoNotUse_dapr_2eproto}, {}};

static void InitDefaultsscc_info_InvokeServiceEnvelope_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_InvokeServiceEnvelope_default_instance_;
    new (ptr) ::dapr::InvokeServiceEnvelope();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::InvokeServiceEnvelope::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_InvokeServiceEnvelope_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_InvokeServiceEnvelope_dapr_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_InvokeServiceEnvelope_MetadataEntry_DoNotUse_dapr_2eproto.base,}};

static void InitDefaultsscc_info_InvokeServiceEnvelope_MetadataEntry_DoNotUse_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_InvokeServiceEnvelope_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse();
  }
  ::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeServiceEnvelope_MetadataEntry_DoNotUse_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InvokeServiceEnvelope_MetadataEntry_DoNotUse_dapr_2eproto}, {}};

static void InitDefaultsscc_info_InvokeServiceResponseEnvelope_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_InvokeServiceResponseEnvelope_default_instance_;
    new (ptr) ::dapr::InvokeServiceResponseEnvelope();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::InvokeServiceResponseEnvelope::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_InvokeServiceResponseEnvelope_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_InvokeServiceResponseEnvelope_dapr_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse_dapr_2eproto.base,}};

static void InitDefaultsscc_info_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse();
  }
  ::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse_dapr_2eproto}, {}};

static void InitDefaultsscc_info_PublishEventEnvelope_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_PublishEventEnvelope_default_instance_;
    new (ptr) ::dapr::PublishEventEnvelope();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::PublishEventEnvelope::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PublishEventEnvelope_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PublishEventEnvelope_dapr_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_RetryPolicy_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_RetryPolicy_default_instance_;
    new (ptr) ::dapr::RetryPolicy();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::RetryPolicy::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RetryPolicy_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RetryPolicy_dapr_2eproto}, {
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsscc_info_SaveStateEnvelope_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_SaveStateEnvelope_default_instance_;
    new (ptr) ::dapr::SaveStateEnvelope();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::SaveStateEnvelope::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SaveStateEnvelope_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SaveStateEnvelope_dapr_2eproto}, {
      &scc_info_StateRequest_dapr_2eproto.base,}};

static void InitDefaultsscc_info_State_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_State_default_instance_;
    new (ptr) ::dapr::State();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::State::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_State_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_State_dapr_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_State_MetadataEntry_DoNotUse_dapr_2eproto.base,
      &scc_info_StateOptions_dapr_2eproto.base,}};

static void InitDefaultsscc_info_State_MetadataEntry_DoNotUse_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_State_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::State_MetadataEntry_DoNotUse();
  }
  ::dapr::State_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_State_MetadataEntry_DoNotUse_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_State_MetadataEntry_DoNotUse_dapr_2eproto}, {}};

static void InitDefaultsscc_info_StateOptions_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_StateOptions_default_instance_;
    new (ptr) ::dapr::StateOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::StateOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StateOptions_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StateOptions_dapr_2eproto}, {
      &scc_info_RetryPolicy_dapr_2eproto.base,}};

static void InitDefaultsscc_info_StateRequest_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_StateRequest_default_instance_;
    new (ptr) ::dapr::StateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::StateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_StateRequest_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_StateRequest_dapr_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_StateRequest_MetadataEntry_DoNotUse_dapr_2eproto.base,
      &scc_info_StateRequestOptions_dapr_2eproto.base,}};

static void InitDefaultsscc_info_StateRequest_MetadataEntry_DoNotUse_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_StateRequest_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::dapr::StateRequest_MetadataEntry_DoNotUse();
  }
  ::dapr::StateRequest_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateRequest_MetadataEntry_DoNotUse_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StateRequest_MetadataEntry_DoNotUse_dapr_2eproto}, {}};

static void InitDefaultsscc_info_StateRequestOptions_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_StateRequestOptions_default_instance_;
    new (ptr) ::dapr::StateRequestOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::StateRequestOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StateRequestOptions_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StateRequestOptions_dapr_2eproto}, {
      &scc_info_StateRetryPolicy_dapr_2eproto.base,}};

static void InitDefaultsscc_info_StateRetryPolicy_dapr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapr::_StateRetryPolicy_default_instance_;
    new (ptr) ::dapr::StateRetryPolicy();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapr::StateRetryPolicy::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StateRetryPolicy_dapr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StateRetryPolicy_dapr_2eproto}, {
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_dapr_2eproto[23];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_dapr_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_dapr_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_dapr_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceResponseEnvelope, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::DeleteStateEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::DeleteStateEnvelope, storename_),
  PROTOBUF_FIELD_OFFSET(::dapr::DeleteStateEnvelope, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::DeleteStateEnvelope, etag_),
  PROTOBUF_FIELD_OFFSET(::dapr::DeleteStateEnvelope, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::SaveStateEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::SaveStateEnvelope, storename_),
  PROTOBUF_FIELD_OFFSET(::dapr::SaveStateEnvelope, requests_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::GetStateEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::GetStateEnvelope, storename_),
  PROTOBUF_FIELD_OFFSET(::dapr::GetStateEnvelope, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::GetStateEnvelope, consistency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::GetStateResponseEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::GetStateResponseEnvelope, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::GetStateResponseEnvelope, etag_),
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretEnvelope_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretEnvelope_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretEnvelope_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretEnvelope_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretEnvelope, storename_),
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretEnvelope, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretEnvelope, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretResponseEnvelope_DataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretResponseEnvelope_DataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretResponseEnvelope_DataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretResponseEnvelope_DataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretResponseEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::GetSecretResponseEnvelope, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeBindingEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeBindingEnvelope, name_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeBindingEnvelope, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeBindingEnvelope, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceEnvelope, id_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceEnvelope, method_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceEnvelope, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::InvokeServiceEnvelope, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::PublishEventEnvelope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::PublishEventEnvelope, topic_),
  PROTOBUF_FIELD_OFFSET(::dapr::PublishEventEnvelope, data_),
  PROTOBUF_FIELD_OFFSET(::dapr::State_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::State_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::State_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::State_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::State, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::State, value_),
  PROTOBUF_FIELD_OFFSET(::dapr::State, etag_),
  PROTOBUF_FIELD_OFFSET(::dapr::State, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::State, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::StateOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::StateOptions, concurrency_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateOptions, consistency_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateOptions, retrypolicy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::RetryPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::RetryPolicy, threshold_),
  PROTOBUF_FIELD_OFFSET(::dapr::RetryPolicy, pattern_),
  PROTOBUF_FIELD_OFFSET(::dapr::RetryPolicy, interval_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequest_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequest_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequest_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequest_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequest, key_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequest, value_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequest, etag_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequest, metadata_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequest, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequestOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequestOptions, concurrency_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequestOptions, consistency_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateRequestOptions, retrypolicy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dapr::StateRetryPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::dapr::StateRetryPolicy, threshold_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateRetryPolicy, pattern_),
  PROTOBUF_FIELD_OFFSET(::dapr::StateRetryPolicy, interval_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse)},
  { 9, -1, sizeof(::dapr::InvokeServiceResponseEnvelope)},
  { 16, -1, sizeof(::dapr::DeleteStateEnvelope)},
  { 25, -1, sizeof(::dapr::SaveStateEnvelope)},
  { 32, -1, sizeof(::dapr::GetStateEnvelope)},
  { 40, -1, sizeof(::dapr::GetStateResponseEnvelope)},
  { 47, 54, sizeof(::dapr::GetSecretEnvelope_MetadataEntry_DoNotUse)},
  { 56, -1, sizeof(::dapr::GetSecretEnvelope)},
  { 64, 71, sizeof(::dapr::GetSecretResponseEnvelope_DataEntry_DoNotUse)},
  { 73, -1, sizeof(::dapr::GetSecretResponseEnvelope)},
  { 79, 86, sizeof(::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse)},
  { 88, -1, sizeof(::dapr::InvokeBindingEnvelope)},
  { 96, 103, sizeof(::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse)},
  { 105, -1, sizeof(::dapr::InvokeServiceEnvelope)},
  { 114, -1, sizeof(::dapr::PublishEventEnvelope)},
  { 121, 128, sizeof(::dapr::State_MetadataEntry_DoNotUse)},
  { 130, -1, sizeof(::dapr::State)},
  { 140, -1, sizeof(::dapr::StateOptions)},
  { 148, -1, sizeof(::dapr::RetryPolicy)},
  { 156, 163, sizeof(::dapr::StateRequest_MetadataEntry_DoNotUse)},
  { 165, -1, sizeof(::dapr::StateRequest)},
  { 175, -1, sizeof(::dapr::StateRequestOptions)},
  { 183, -1, sizeof(::dapr::StateRetryPolicy)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_InvokeServiceResponseEnvelope_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_DeleteStateEnvelope_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_SaveStateEnvelope_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_GetStateEnvelope_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_GetStateResponseEnvelope_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_GetSecretEnvelope_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_GetSecretEnvelope_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_GetSecretResponseEnvelope_DataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_GetSecretResponseEnvelope_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_InvokeBindingEnvelope_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_InvokeBindingEnvelope_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_InvokeServiceEnvelope_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_InvokeServiceEnvelope_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_PublishEventEnvelope_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_State_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_State_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_StateOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_RetryPolicy_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_StateRequest_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_StateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_StateRequestOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::dapr::_StateRetryPolicy_default_instance_),
};

const char descriptor_table_protodef_dapr_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\ndapr.proto\022\004dapr\032\031google/protobuf/any."
  "proto\032\033google/protobuf/empty.proto\032\036goog"
  "le/protobuf/duration.proto\"\271\001\n\035InvokeSer"
  "viceResponseEnvelope\022\"\n\004data\030\001 \001(\0132\024.goo"
  "gle.protobuf.Any\022C\n\010metadata\030\002 \003(\01321.dap"
  "r.InvokeServiceResponseEnvelope.Metadata"
  "Entry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
  "alue\030\002 \001(\t:\0028\001\"h\n\023DeleteStateEnvelope\022\021\n"
  "\tstoreName\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022\014\n\004etag\030\003 "
  "\001(\t\022#\n\007options\030\004 \001(\0132\022.dapr.StateOptions"
  "\"L\n\021SaveStateEnvelope\022\021\n\tstoreName\030\001 \001(\t"
  "\022$\n\010requests\030\002 \003(\0132\022.dapr.StateRequest\"G"
  "\n\020GetStateEnvelope\022\021\n\tstoreName\030\001 \001(\t\022\013\n"
  "\003key\030\002 \001(\t\022\023\n\013consistency\030\003 \001(\t\"L\n\030GetSt"
  "ateResponseEnvelope\022\"\n\004data\030\001 \001(\0132\024.goog"
  "le.protobuf.Any\022\014\n\004etag\030\002 \001(\t\"\235\001\n\021GetSec"
  "retEnvelope\022\021\n\tstoreName\030\001 \001(\t\022\013\n\003key\030\002 "
  "\001(\t\0227\n\010metadata\030\003 \003(\0132%.dapr.GetSecretEn"
  "velope.MetadataEntry\032/\n\rMetadataEntry\022\013\n"
  "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\201\001\n\031GetSec"
  "retResponseEnvelope\0227\n\004data\030\001 \003(\0132).dapr"
  ".GetSecretResponseEnvelope.DataEntry\032+\n\t"
  "DataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
  "\001\"\267\001\n\025InvokeBindingEnvelope\022\014\n\004name\030\001 \001("
  "\t\022\"\n\004data\030\002 \001(\0132\024.google.protobuf.Any\022;\n"
  "\010metadata\030\003 \003(\0132).dapr.InvokeBindingEnve"
  "lope.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\305\001\n\025InvokeSe"
  "rviceEnvelope\022\n\n\002id\030\001 \001(\t\022\016\n\006method\030\002 \001("
  "\t\022\"\n\004data\030\003 \001(\0132\024.google.protobuf.Any\022;\n"
  "\010metadata\030\004 \003(\0132).dapr.InvokeServiceEnve"
  "lope.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"I\n\024PublishEv"
  "entEnvelope\022\r\n\005topic\030\001 \001(\t\022\"\n\004data\030\002 \001(\013"
  "2\024.google.protobuf.Any\"\312\001\n\005State\022\013\n\003key\030"
  "\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.google.protobuf.A"
  "ny\022\014\n\004etag\030\003 \001(\t\022+\n\010metadata\030\004 \003(\0132\031.dap"
  "r.State.MetadataEntry\022#\n\007options\030\005 \001(\0132\022"
  ".dapr.StateOptions\032/\n\rMetadataEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"`\n\014StateOpti"
  "ons\022\023\n\013concurrency\030\001 \001(\t\022\023\n\013consistency\030"
  "\002 \001(\t\022&\n\013retryPolicy\030\003 \001(\0132\021.dapr.RetryP"
  "olicy\"^\n\013RetryPolicy\022\021\n\tthreshold\030\001 \001(\005\022"
  "\017\n\007pattern\030\002 \001(\t\022+\n\010interval\030\003 \001(\0132\031.goo"
  "gle.protobuf.Duration\"\337\001\n\014StateRequest\022\013"
  "\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.google.prot"
  "obuf.Any\022\014\n\004etag\030\003 \001(\t\0222\n\010metadata\030\004 \003(\013"
  "2 .dapr.StateRequest.MetadataEntry\022*\n\007op"
  "tions\030\005 \001(\0132\031.dapr.StateRequestOptions\032/"
  "\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
  "\001(\t:\0028\001\"l\n\023StateRequestOptions\022\023\n\013concur"
  "rency\030\001 \001(\t\022\023\n\013consistency\030\002 \001(\t\022+\n\013retr"
  "yPolicy\030\003 \001(\0132\026.dapr.StateRetryPolicy\"c\n"
  "\020StateRetryPolicy\022\021\n\tthreshold\030\001 \001(\005\022\017\n\007"
  "pattern\030\002 \001(\t\022+\n\010interval\030\003 \001(\0132\031.google"
  ".protobuf.Duration2\374\003\n\004Dapr\022D\n\014PublishEv"
  "ent\022\032.dapr.PublishEventEnvelope\032\026.google"
  ".protobuf.Empty\"\000\022S\n\rInvokeService\022\033.dap"
  "r.InvokeServiceEnvelope\032#.dapr.InvokeSer"
  "viceResponseEnvelope\"\000\022F\n\rInvokeBinding\022"
  "\033.dapr.InvokeBindingEnvelope\032\026.google.pr"
  "otobuf.Empty\"\000\022D\n\010GetState\022\026.dapr.GetSta"
  "teEnvelope\032\036.dapr.GetStateResponseEnvelo"
  "pe\"\000\022G\n\tGetSecret\022\027.dapr.GetSecretEnvelo"
  "pe\032\037.dapr.GetSecretResponseEnvelope\"\000\022>\n"
  "\tSaveState\022\027.dapr.SaveStateEnvelope\032\026.go"
  "ogle.protobuf.Empty\"\000\022B\n\013DeleteState\022\031.d"
  "apr.DeleteStateEnvelope\032\026.google.protobu"
  "f.Empty\"\000B0\n\007io.daprB\nDaprProtos\252\002\030Dapr."
  "Client.Autogen.Grpcb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_dapr_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_dapr_2eproto_sccs[23] = {
  &scc_info_DeleteStateEnvelope_dapr_2eproto.base,
  &scc_info_GetSecretEnvelope_dapr_2eproto.base,
  &scc_info_GetSecretEnvelope_MetadataEntry_DoNotUse_dapr_2eproto.base,
  &scc_info_GetSecretResponseEnvelope_dapr_2eproto.base,
  &scc_info_GetSecretResponseEnvelope_DataEntry_DoNotUse_dapr_2eproto.base,
  &scc_info_GetStateEnvelope_dapr_2eproto.base,
  &scc_info_GetStateResponseEnvelope_dapr_2eproto.base,
  &scc_info_InvokeBindingEnvelope_dapr_2eproto.base,
  &scc_info_InvokeBindingEnvelope_MetadataEntry_DoNotUse_dapr_2eproto.base,
  &scc_info_InvokeServiceEnvelope_dapr_2eproto.base,
  &scc_info_InvokeServiceEnvelope_MetadataEntry_DoNotUse_dapr_2eproto.base,
  &scc_info_InvokeServiceResponseEnvelope_dapr_2eproto.base,
  &scc_info_InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse_dapr_2eproto.base,
  &scc_info_PublishEventEnvelope_dapr_2eproto.base,
  &scc_info_RetryPolicy_dapr_2eproto.base,
  &scc_info_SaveStateEnvelope_dapr_2eproto.base,
  &scc_info_State_dapr_2eproto.base,
  &scc_info_State_MetadataEntry_DoNotUse_dapr_2eproto.base,
  &scc_info_StateOptions_dapr_2eproto.base,
  &scc_info_StateRequest_dapr_2eproto.base,
  &scc_info_StateRequest_MetadataEntry_DoNotUse_dapr_2eproto.base,
  &scc_info_StateRequestOptions_dapr_2eproto.base,
  &scc_info_StateRetryPolicy_dapr_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_dapr_2eproto_once;
static bool descriptor_table_dapr_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dapr_2eproto = {
  &descriptor_table_dapr_2eproto_initialized, descriptor_table_protodef_dapr_2eproto, "dapr.proto", 2787,
  &descriptor_table_dapr_2eproto_once, descriptor_table_dapr_2eproto_sccs, descriptor_table_dapr_2eproto_deps, 23, 3,
  schemas, file_default_instances, TableStruct_dapr_2eproto::offsets,
  file_level_metadata_dapr_2eproto, 23, file_level_enum_descriptors_dapr_2eproto, file_level_service_descriptors_dapr_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_dapr_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_dapr_2eproto), true);
>>>>>>> master
namespace dapr {

namespace {

const ::google::protobuf::Descriptor* InvokeServiceResponseEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvokeServiceResponseEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvokeServiceResponseEnvelope_MetadataEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DeleteStateEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteStateEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveStateEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveStateEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStateEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStateEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStateResponseEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStateResponseEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSecretEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSecretEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSecretEnvelope_MetadataEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GetSecretResponseEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSecretResponseEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSecretResponseEnvelope_DataEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* InvokeBindingEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvokeBindingEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvokeBindingEnvelope_MetadataEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* InvokeServiceEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvokeServiceEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvokeServiceEnvelope_MetadataEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PublishEventEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PublishEventEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* State_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  State_reflection_ = NULL;
const ::google::protobuf::Descriptor* State_MetadataEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* StateOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StateOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetryPolicy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetryPolicy_reflection_ = NULL;
const ::google::protobuf::Descriptor* StateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* StateRequest_MetadataEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* StateRequestOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StateRequestOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* StateRetryPolicy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StateRetryPolicy_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dapr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_dapr_2eproto() {
  protobuf_AddDesc_dapr_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dapr.proto");
  GOOGLE_CHECK(file != NULL);
  InvokeServiceResponseEnvelope_descriptor_ = file->message_type(0);
  static const int InvokeServiceResponseEnvelope_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeServiceResponseEnvelope, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeServiceResponseEnvelope, metadata_),
  };
  InvokeServiceResponseEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InvokeServiceResponseEnvelope_descriptor_,
      InvokeServiceResponseEnvelope::default_instance_,
      InvokeServiceResponseEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(InvokeServiceResponseEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeServiceResponseEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeServiceResponseEnvelope, _is_default_instance_));
  InvokeServiceResponseEnvelope_MetadataEntry_descriptor_ = InvokeServiceResponseEnvelope_descriptor_->nested_type(0);
  DeleteStateEnvelope_descriptor_ = file->message_type(1);
  static const int DeleteStateEnvelope_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteStateEnvelope, storename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteStateEnvelope, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteStateEnvelope, etag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteStateEnvelope, options_),
  };
  DeleteStateEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteStateEnvelope_descriptor_,
      DeleteStateEnvelope::default_instance_,
      DeleteStateEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteStateEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteStateEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteStateEnvelope, _is_default_instance_));
  SaveStateEnvelope_descriptor_ = file->message_type(2);
  static const int SaveStateEnvelope_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveStateEnvelope, storename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveStateEnvelope, requests_),
  };
  SaveStateEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveStateEnvelope_descriptor_,
      SaveStateEnvelope::default_instance_,
      SaveStateEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(SaveStateEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveStateEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveStateEnvelope, _is_default_instance_));
  GetStateEnvelope_descriptor_ = file->message_type(3);
  static const int GetStateEnvelope_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateEnvelope, storename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateEnvelope, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateEnvelope, consistency_),
  };
  GetStateEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetStateEnvelope_descriptor_,
      GetStateEnvelope::default_instance_,
      GetStateEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetStateEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateEnvelope, _is_default_instance_));
  GetStateResponseEnvelope_descriptor_ = file->message_type(4);
  static const int GetStateResponseEnvelope_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateResponseEnvelope, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateResponseEnvelope, etag_),
  };
  GetStateResponseEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetStateResponseEnvelope_descriptor_,
      GetStateResponseEnvelope::default_instance_,
      GetStateResponseEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetStateResponseEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateResponseEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStateResponseEnvelope, _is_default_instance_));
  GetSecretEnvelope_descriptor_ = file->message_type(5);
  static const int GetSecretEnvelope_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSecretEnvelope, storename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSecretEnvelope, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSecretEnvelope, metadata_),
  };
  GetSecretEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetSecretEnvelope_descriptor_,
      GetSecretEnvelope::default_instance_,
      GetSecretEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetSecretEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSecretEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSecretEnvelope, _is_default_instance_));
  GetSecretEnvelope_MetadataEntry_descriptor_ = GetSecretEnvelope_descriptor_->nested_type(0);
  GetSecretResponseEnvelope_descriptor_ = file->message_type(6);
  static const int GetSecretResponseEnvelope_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSecretResponseEnvelope, data_),
  };
  GetSecretResponseEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetSecretResponseEnvelope_descriptor_,
      GetSecretResponseEnvelope::default_instance_,
      GetSecretResponseEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetSecretResponseEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSecretResponseEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSecretResponseEnvelope, _is_default_instance_));
  GetSecretResponseEnvelope_DataEntry_descriptor_ = GetSecretResponseEnvelope_descriptor_->nested_type(0);
  InvokeBindingEnvelope_descriptor_ = file->message_type(7);
  static const int InvokeBindingEnvelope_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeBindingEnvelope, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeBindingEnvelope, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeBindingEnvelope, metadata_),
  };
  InvokeBindingEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InvokeBindingEnvelope_descriptor_,
      InvokeBindingEnvelope::default_instance_,
      InvokeBindingEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(InvokeBindingEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeBindingEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeBindingEnvelope, _is_default_instance_));
  InvokeBindingEnvelope_MetadataEntry_descriptor_ = InvokeBindingEnvelope_descriptor_->nested_type(0);
  InvokeServiceEnvelope_descriptor_ = file->message_type(8);
  static const int InvokeServiceEnvelope_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeServiceEnvelope, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeServiceEnvelope, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeServiceEnvelope, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeServiceEnvelope, metadata_),
  };
  InvokeServiceEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InvokeServiceEnvelope_descriptor_,
      InvokeServiceEnvelope::default_instance_,
      InvokeServiceEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(InvokeServiceEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeServiceEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvokeServiceEnvelope, _is_default_instance_));
  InvokeServiceEnvelope_MetadataEntry_descriptor_ = InvokeServiceEnvelope_descriptor_->nested_type(0);
  PublishEventEnvelope_descriptor_ = file->message_type(9);
  static const int PublishEventEnvelope_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublishEventEnvelope, topic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublishEventEnvelope, data_),
  };
  PublishEventEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PublishEventEnvelope_descriptor_,
      PublishEventEnvelope::default_instance_,
      PublishEventEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(PublishEventEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublishEventEnvelope, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PublishEventEnvelope, _is_default_instance_));
  State_descriptor_ = file->message_type(10);
  static const int State_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, etag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, options_),
  };
  State_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      State_descriptor_,
      State::default_instance_,
      State_offsets_,
      -1,
      -1,
      -1,
      sizeof(State),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(State, _is_default_instance_));
  State_MetadataEntry_descriptor_ = State_descriptor_->nested_type(0);
  StateOptions_descriptor_ = file->message_type(11);
  static const int StateOptions_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOptions, concurrency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOptions, consistency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOptions, retrypolicy_),
  };
  StateOptions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StateOptions_descriptor_,
      StateOptions::default_instance_,
      StateOptions_offsets_,
      -1,
      -1,
      -1,
      sizeof(StateOptions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOptions, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOptions, _is_default_instance_));
  RetryPolicy_descriptor_ = file->message_type(12);
  static const int RetryPolicy_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetryPolicy, threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetryPolicy, pattern_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetryPolicy, interval_),
  };
  RetryPolicy_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RetryPolicy_descriptor_,
      RetryPolicy::default_instance_,
      RetryPolicy_offsets_,
      -1,
      -1,
      -1,
      sizeof(RetryPolicy),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetryPolicy, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetryPolicy, _is_default_instance_));
  StateRequest_descriptor_ = file->message_type(13);
  static const int StateRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRequest, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRequest, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRequest, etag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRequest, metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRequest, options_),
  };
  StateRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StateRequest_descriptor_,
      StateRequest::default_instance_,
      StateRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(StateRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRequest, _is_default_instance_));
  StateRequest_MetadataEntry_descriptor_ = StateRequest_descriptor_->nested_type(0);
  StateRequestOptions_descriptor_ = file->message_type(14);
  static const int StateRequestOptions_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRequestOptions, concurrency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRequestOptions, consistency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRequestOptions, retrypolicy_),
  };
  StateRequestOptions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StateRequestOptions_descriptor_,
      StateRequestOptions::default_instance_,
      StateRequestOptions_offsets_,
      -1,
      -1,
      -1,
      sizeof(StateRequestOptions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRequestOptions, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRequestOptions, _is_default_instance_));
  StateRetryPolicy_descriptor_ = file->message_type(15);
  static const int StateRetryPolicy_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRetryPolicy, threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRetryPolicy, pattern_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRetryPolicy, interval_),
  };
  StateRetryPolicy_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StateRetryPolicy_descriptor_,
      StateRetryPolicy::default_instance_,
      StateRetryPolicy_offsets_,
      -1,
      -1,
      -1,
      sizeof(StateRetryPolicy),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRetryPolicy, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateRetryPolicy, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dapr_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InvokeServiceResponseEnvelope_descriptor_, &InvokeServiceResponseEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        InvokeServiceResponseEnvelope_MetadataEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                InvokeServiceResponseEnvelope_MetadataEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteStateEnvelope_descriptor_, &DeleteStateEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveStateEnvelope_descriptor_, &SaveStateEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetStateEnvelope_descriptor_, &GetStateEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetStateResponseEnvelope_descriptor_, &GetStateResponseEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetSecretEnvelope_descriptor_, &GetSecretEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        GetSecretEnvelope_MetadataEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                GetSecretEnvelope_MetadataEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetSecretResponseEnvelope_descriptor_, &GetSecretResponseEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        GetSecretResponseEnvelope_DataEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                GetSecretResponseEnvelope_DataEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InvokeBindingEnvelope_descriptor_, &InvokeBindingEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        InvokeBindingEnvelope_MetadataEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                InvokeBindingEnvelope_MetadataEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InvokeServiceEnvelope_descriptor_, &InvokeServiceEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        InvokeServiceEnvelope_MetadataEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                InvokeServiceEnvelope_MetadataEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PublishEventEnvelope_descriptor_, &PublishEventEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      State_descriptor_, &State::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        State_MetadataEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                State_MetadataEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StateOptions_descriptor_, &StateOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RetryPolicy_descriptor_, &RetryPolicy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StateRequest_descriptor_, &StateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        StateRequest_MetadataEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                StateRequest_MetadataEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StateRequestOptions_descriptor_, &StateRequestOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StateRetryPolicy_descriptor_, &StateRetryPolicy::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dapr_2eproto() {
  delete InvokeServiceResponseEnvelope::default_instance_;
  delete InvokeServiceResponseEnvelope_reflection_;
  delete DeleteStateEnvelope::default_instance_;
  delete DeleteStateEnvelope_reflection_;
  delete SaveStateEnvelope::default_instance_;
  delete SaveStateEnvelope_reflection_;
  delete GetStateEnvelope::default_instance_;
  delete GetStateEnvelope_reflection_;
  delete GetStateResponseEnvelope::default_instance_;
  delete GetStateResponseEnvelope_reflection_;
  delete GetSecretEnvelope::default_instance_;
  delete GetSecretEnvelope_reflection_;
  delete GetSecretResponseEnvelope::default_instance_;
  delete GetSecretResponseEnvelope_reflection_;
  delete InvokeBindingEnvelope::default_instance_;
  delete InvokeBindingEnvelope_reflection_;
  delete InvokeServiceEnvelope::default_instance_;
  delete InvokeServiceEnvelope_reflection_;
  delete PublishEventEnvelope::default_instance_;
  delete PublishEventEnvelope_reflection_;
  delete State::default_instance_;
  delete State_reflection_;
  delete StateOptions::default_instance_;
  delete StateOptions_reflection_;
  delete RetryPolicy::default_instance_;
  delete RetryPolicy_reflection_;
  delete StateRequest::default_instance_;
  delete StateRequest_reflection_;
  delete StateRequestOptions::default_instance_;
  delete StateRequestOptions_reflection_;
  delete StateRetryPolicy::default_instance_;
  delete StateRetryPolicy_reflection_;
}

void protobuf_AddDesc_dapr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_dapr_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ndapr.proto\022\004dapr\032\031google/protobuf/any."
    "proto\032\033google/protobuf/empty.proto\032\036goog"
    "le/protobuf/duration.proto\"\271\001\n\035InvokeSer"
    "viceResponseEnvelope\022\"\n\004data\030\001 \001(\0132\024.goo"
    "gle.protobuf.Any\022C\n\010metadata\030\002 \003(\01321.dap"
    "r.InvokeServiceResponseEnvelope.Metadata"
    "Entry\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
    "alue\030\002 \001(\t:\0028\001\"h\n\023DeleteStateEnvelope\022\021\n"
    "\tstoreName\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022\014\n\004etag\030\003 "
    "\001(\t\022#\n\007options\030\004 \001(\0132\022.dapr.StateOptions"
    "\"L\n\021SaveStateEnvelope\022\021\n\tstoreName\030\001 \001(\t"
    "\022$\n\010requests\030\002 \003(\0132\022.dapr.StateRequest\"G"
    "\n\020GetStateEnvelope\022\021\n\tstoreName\030\001 \001(\t\022\013\n"
    "\003key\030\002 \001(\t\022\023\n\013consistency\030\003 \001(\t\"L\n\030GetSt"
    "ateResponseEnvelope\022\"\n\004data\030\001 \001(\0132\024.goog"
    "le.protobuf.Any\022\014\n\004etag\030\002 \001(\t\"\235\001\n\021GetSec"
    "retEnvelope\022\021\n\tstoreName\030\001 \001(\t\022\013\n\003key\030\002 "
    "\001(\t\0227\n\010metadata\030\003 \003(\0132%.dapr.GetSecretEn"
    "velope.MetadataEntry\032/\n\rMetadataEntry\022\013\n"
    "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\201\001\n\031GetSec"
    "retResponseEnvelope\0227\n\004data\030\001 \003(\0132).dapr"
    ".GetSecretResponseEnvelope.DataEntry\032+\n\t"
    "DataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
    "\001\"\267\001\n\025InvokeBindingEnvelope\022\014\n\004name\030\001 \001("
    "\t\022\"\n\004data\030\002 \001(\0132\024.google.protobuf.Any\022;\n"
    "\010metadata\030\003 \003(\0132).dapr.InvokeBindingEnve"
    "lope.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003k"
    "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\305\001\n\025InvokeSe"
    "rviceEnvelope\022\n\n\002id\030\001 \001(\t\022\016\n\006method\030\002 \001("
    "\t\022\"\n\004data\030\003 \001(\0132\024.google.protobuf.Any\022;\n"
    "\010metadata\030\004 \003(\0132).dapr.InvokeServiceEnve"
    "lope.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003k"
    "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"I\n\024PublishEv"
    "entEnvelope\022\r\n\005topic\030\001 \001(\t\022\"\n\004data\030\002 \001(\013"
    "2\024.google.protobuf.Any\"\312\001\n\005State\022\013\n\003key\030"
    "\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.google.protobuf.A"
    "ny\022\014\n\004etag\030\003 \001(\t\022+\n\010metadata\030\004 \003(\0132\031.dap"
    "r.State.MetadataEntry\022#\n\007options\030\005 \001(\0132\022"
    ".dapr.StateOptions\032/\n\rMetadataEntry\022\013\n\003k"
    "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"`\n\014StateOpti"
    "ons\022\023\n\013concurrency\030\001 \001(\t\022\023\n\013consistency\030"
    "\002 \001(\t\022&\n\013retryPolicy\030\003 \001(\0132\021.dapr.RetryP"
    "olicy\"^\n\013RetryPolicy\022\021\n\tthreshold\030\001 \001(\005\022"
    "\017\n\007pattern\030\002 \001(\t\022+\n\010interval\030\003 \001(\0132\031.goo"
    "gle.protobuf.Duration\"\337\001\n\014StateRequest\022\013"
    "\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.google.prot"
    "obuf.Any\022\014\n\004etag\030\003 \001(\t\0222\n\010metadata\030\004 \003(\013"
    "2 .dapr.StateRequest.MetadataEntry\022*\n\007op"
    "tions\030\005 \001(\0132\031.dapr.StateRequestOptions\032/"
    "\n\rMetadataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
    "\001(\t:\0028\001\"l\n\023StateRequestOptions\022\023\n\013concur"
    "rency\030\001 \001(\t\022\023\n\013consistency\030\002 \001(\t\022+\n\013retr"
    "yPolicy\030\003 \001(\0132\026.dapr.StateRetryPolicy\"c\n"
    "\020StateRetryPolicy\022\021\n\tthreshold\030\001 \001(\005\022\017\n\007"
    "pattern\030\002 \001(\t\022+\n\010interval\030\003 \001(\0132\031.google"
    ".protobuf.Duration2\374\003\n\004Dapr\022D\n\014PublishEv"
    "ent\022\032.dapr.PublishEventEnvelope\032\026.google"
    ".protobuf.Empty\"\000\022S\n\rInvokeService\022\033.dap"
    "r.InvokeServiceEnvelope\032#.dapr.InvokeSer"
    "viceResponseEnvelope\"\000\022F\n\rInvokeBinding\022"
    "\033.dapr.InvokeBindingEnvelope\032\026.google.pr"
    "otobuf.Empty\"\000\022D\n\010GetState\022\026.dapr.GetSta"
    "teEnvelope\032\036.dapr.GetStateResponseEnvelo"
    "pe\"\000\022G\n\tGetSecret\022\027.dapr.GetSecretEnvelo"
    "pe\032\037.dapr.GetSecretResponseEnvelope\"\000\022>\n"
    "\tSaveState\022\027.dapr.SaveStateEnvelope\032\026.go"
    "ogle.protobuf.Empty\"\000\022B\n\013DeleteState\022\031.d"
    "apr.DeleteStateEnvelope\032\026.google.protobu"
    "f.Empty\"\000B0\n\007io.daprB\nDaprProtos\252\002\030Dapr."
    "Client.Autogen.Grpcb\006proto3", 2787);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dapr.proto", &protobuf_RegisterTypes);
  InvokeServiceResponseEnvelope::default_instance_ = new InvokeServiceResponseEnvelope();
  DeleteStateEnvelope::default_instance_ = new DeleteStateEnvelope();
  SaveStateEnvelope::default_instance_ = new SaveStateEnvelope();
  GetStateEnvelope::default_instance_ = new GetStateEnvelope();
  GetStateResponseEnvelope::default_instance_ = new GetStateResponseEnvelope();
  GetSecretEnvelope::default_instance_ = new GetSecretEnvelope();
  GetSecretResponseEnvelope::default_instance_ = new GetSecretResponseEnvelope();
  InvokeBindingEnvelope::default_instance_ = new InvokeBindingEnvelope();
  InvokeServiceEnvelope::default_instance_ = new InvokeServiceEnvelope();
  PublishEventEnvelope::default_instance_ = new PublishEventEnvelope();
  State::default_instance_ = new State();
  StateOptions::default_instance_ = new StateOptions();
  RetryPolicy::default_instance_ = new RetryPolicy();
  StateRequest::default_instance_ = new StateRequest();
  StateRequestOptions::default_instance_ = new StateRequestOptions();
  StateRetryPolicy::default_instance_ = new StateRetryPolicy();
  InvokeServiceResponseEnvelope::default_instance_->InitAsDefaultInstance();
  DeleteStateEnvelope::default_instance_->InitAsDefaultInstance();
  SaveStateEnvelope::default_instance_->InitAsDefaultInstance();
  GetStateEnvelope::default_instance_->InitAsDefaultInstance();
  GetStateResponseEnvelope::default_instance_->InitAsDefaultInstance();
  GetSecretEnvelope::default_instance_->InitAsDefaultInstance();
  GetSecretResponseEnvelope::default_instance_->InitAsDefaultInstance();
  InvokeBindingEnvelope::default_instance_->InitAsDefaultInstance();
  InvokeServiceEnvelope::default_instance_->InitAsDefaultInstance();
  PublishEventEnvelope::default_instance_->InitAsDefaultInstance();
  State::default_instance_->InitAsDefaultInstance();
  StateOptions::default_instance_->InitAsDefaultInstance();
  RetryPolicy::default_instance_->InitAsDefaultInstance();
  StateRequest::default_instance_->InitAsDefaultInstance();
  StateRequestOptions::default_instance_->InitAsDefaultInstance();
  StateRetryPolicy::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dapr_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dapr_2eproto {
  StaticDescriptorInitializer_dapr_2eproto() {
    protobuf_AddDesc_dapr_2eproto();
  }
} static_descriptor_initializer_dapr_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvokeServiceResponseEnvelope::kDataFieldNumber;
const int InvokeServiceResponseEnvelope::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvokeServiceResponseEnvelope::InvokeServiceResponseEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.InvokeServiceResponseEnvelope)
}

void InvokeServiceResponseEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

InvokeServiceResponseEnvelope::InvokeServiceResponseEnvelope(const InvokeServiceResponseEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.InvokeServiceResponseEnvelope)
}

void InvokeServiceResponseEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  metadata_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  metadata_.SetEntryDescriptor(
      &::dapr::InvokeServiceResponseEnvelope_MetadataEntry_descriptor_);
}

InvokeServiceResponseEnvelope::~InvokeServiceResponseEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.InvokeServiceResponseEnvelope)
  SharedDtor();
}

void InvokeServiceResponseEnvelope::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void InvokeServiceResponseEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvokeServiceResponseEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvokeServiceResponseEnvelope_descriptor_;
}

const InvokeServiceResponseEnvelope& InvokeServiceResponseEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

InvokeServiceResponseEnvelope* InvokeServiceResponseEnvelope::default_instance_ = NULL;

InvokeServiceResponseEnvelope* InvokeServiceResponseEnvelope::New(::google::protobuf::Arena* arena) const {
  InvokeServiceResponseEnvelope* n = new InvokeServiceResponseEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InvokeServiceResponseEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.InvokeServiceResponseEnvelope)
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
  metadata_.Clear();
}

bool InvokeServiceResponseEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.InvokeServiceResponseEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Any data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_metadata;
        break;
      }

      // map<string, string> metadata = 2;
      case 2: {
        if (tag == 18) {
         parse_metadata:
          DO_(input->IncrementRecursionDepth());
         parse_loop_metadata:
          InvokeServiceResponseEnvelope_MetadataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeServiceResponseEnvelope.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeServiceResponseEnvelope.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.InvokeServiceResponseEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.InvokeServiceResponseEnvelope)
  return false;
#undef DO_
}

void InvokeServiceResponseEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.InvokeServiceResponseEnvelope)
  // optional .google.protobuf.Any data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  // map<string, string> metadata = 2;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceResponseEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceResponseEnvelope.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<InvokeServiceResponseEnvelope_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<InvokeServiceResponseEnvelope_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:dapr.InvokeServiceResponseEnvelope)
}

::google::protobuf::uint8* InvokeServiceResponseEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.InvokeServiceResponseEnvelope)
  // optional .google.protobuf.Any data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->data_, false, target);
  }

  // map<string, string> metadata = 2;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceResponseEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceResponseEnvelope.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<InvokeServiceResponseEnvelope_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<InvokeServiceResponseEnvelope_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.InvokeServiceResponseEnvelope)
  return target;
}

int InvokeServiceResponseEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.InvokeServiceResponseEnvelope)
  int total_size = 0;

  // optional .google.protobuf.Any data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // map<string, string> metadata = 2;
  total_size += 1 * this->metadata_size();
  {
    ::google::protobuf::scoped_ptr<InvokeServiceResponseEnvelope_MetadataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvokeServiceResponseEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.InvokeServiceResponseEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InvokeServiceResponseEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InvokeServiceResponseEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.InvokeServiceResponseEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.InvokeServiceResponseEnvelope)
    MergeFrom(*source);
  }
}

void InvokeServiceResponseEnvelope::MergeFrom(const InvokeServiceResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.InvokeServiceResponseEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  metadata_.MergeFrom(from.metadata_);
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
}

void InvokeServiceResponseEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.InvokeServiceResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeServiceResponseEnvelope::CopyFrom(const InvokeServiceResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.InvokeServiceResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeServiceResponseEnvelope::IsInitialized() const {

  return true;
}

void InvokeServiceResponseEnvelope::Swap(InvokeServiceResponseEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvokeServiceResponseEnvelope::InternalSwap(InvokeServiceResponseEnvelope* other) {
  std::swap(data_, other->data_);
  metadata_.Swap(&other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InvokeServiceResponseEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvokeServiceResponseEnvelope_descriptor_;
  metadata.reflection = InvokeServiceResponseEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InvokeServiceResponseEnvelope

// optional .google.protobuf.Any data = 1;
bool InvokeServiceResponseEnvelope::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void InvokeServiceResponseEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& InvokeServiceResponseEnvelope::data() const {
  // @@protoc_insertion_point(field_get:dapr.InvokeServiceResponseEnvelope.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::google::protobuf::Any* InvokeServiceResponseEnvelope::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:dapr.InvokeServiceResponseEnvelope.data)
  return data_;
}
::google::protobuf::Any* InvokeServiceResponseEnvelope::release_data() {
  // @@protoc_insertion_point(field_release:dapr.InvokeServiceResponseEnvelope.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void InvokeServiceResponseEnvelope::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.InvokeServiceResponseEnvelope.data)
}

// map<string, string> metadata = 2;
int InvokeServiceResponseEnvelope::metadata_size() const {
  return metadata_.size();
}
void InvokeServiceResponseEnvelope::clear_metadata() {
  metadata_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
InvokeServiceResponseEnvelope::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.InvokeServiceResponseEnvelope.metadata)
  return metadata_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
InvokeServiceResponseEnvelope::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.InvokeServiceResponseEnvelope.metadata)
  return metadata_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteStateEnvelope::kStoreNameFieldNumber;
const int DeleteStateEnvelope::kKeyFieldNumber;
const int DeleteStateEnvelope::kEtagFieldNumber;
const int DeleteStateEnvelope::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteStateEnvelope::DeleteStateEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.DeleteStateEnvelope)
}

void DeleteStateEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  options_ = const_cast< ::dapr::StateOptions*>(&::dapr::StateOptions::default_instance());
}

DeleteStateEnvelope::DeleteStateEnvelope(const DeleteStateEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.DeleteStateEnvelope)
}

void DeleteStateEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  storename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  options_ = NULL;
}

DeleteStateEnvelope::~DeleteStateEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.DeleteStateEnvelope)
  SharedDtor();
}

void DeleteStateEnvelope::SharedDtor() {
  storename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete options_;
  }
}

void DeleteStateEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteStateEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteStateEnvelope_descriptor_;
}

const DeleteStateEnvelope& DeleteStateEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

DeleteStateEnvelope* DeleteStateEnvelope::default_instance_ = NULL;

DeleteStateEnvelope* DeleteStateEnvelope::New(::google::protobuf::Arena* arena) const {
  DeleteStateEnvelope* n = new DeleteStateEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteStateEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.DeleteStateEnvelope)
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
}

bool DeleteStateEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.DeleteStateEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string storeName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_storename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->storename().data(), this->storename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.DeleteStateEnvelope.storeName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key;
        break;
      }

      // optional string key = 2;
      case 2: {
        if (tag == 18) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.DeleteStateEnvelope.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_etag;
        break;
      }

      // optional string etag = 3;
      case 3: {
        if (tag == 26) {
         parse_etag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etag().data(), this->etag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.DeleteStateEnvelope.etag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_options;
        break;
      }

      // optional .dapr.StateOptions options = 4;
      case 4: {
        if (tag == 34) {
         parse_options:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.DeleteStateEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.DeleteStateEnvelope)
  return false;
#undef DO_
}

void DeleteStateEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.DeleteStateEnvelope)
  // optional string storeName = 1;
  if (this->storename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storename().data(), this->storename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.DeleteStateEnvelope.storeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->storename(), output);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.DeleteStateEnvelope.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional string etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), this->etag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.DeleteStateEnvelope.etag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->etag(), output);
  }

  // optional .dapr.StateOptions options = 4;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->options_, output);
  }

  // @@protoc_insertion_point(serialize_end:dapr.DeleteStateEnvelope)
}

::google::protobuf::uint8* DeleteStateEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.DeleteStateEnvelope)
  // optional string storeName = 1;
  if (this->storename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storename().data(), this->storename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.DeleteStateEnvelope.storeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->storename(), target);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.DeleteStateEnvelope.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional string etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), this->etag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.DeleteStateEnvelope.etag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->etag(), target);
  }

  // optional .dapr.StateOptions options = 4;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->options_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.DeleteStateEnvelope)
  return target;
}

int DeleteStateEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.DeleteStateEnvelope)
  int total_size = 0;

  // optional string storeName = 1;
  if (this->storename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->storename());
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional string etag = 3;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etag());
  }

  // optional .dapr.StateOptions options = 4;
  if (this->has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->options_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteStateEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.DeleteStateEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DeleteStateEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteStateEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.DeleteStateEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.DeleteStateEnvelope)
    MergeFrom(*source);
  }
}

void DeleteStateEnvelope::MergeFrom(const DeleteStateEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.DeleteStateEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.storename().size() > 0) {

    storename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storename_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.etag().size() > 0) {

    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_options()) {
    mutable_options()->::dapr::StateOptions::MergeFrom(from.options());
  }
}

void DeleteStateEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.DeleteStateEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteStateEnvelope::CopyFrom(const DeleteStateEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.DeleteStateEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteStateEnvelope::IsInitialized() const {

  return true;
}

void DeleteStateEnvelope::Swap(DeleteStateEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteStateEnvelope::InternalSwap(DeleteStateEnvelope* other) {
  storename_.Swap(&other->storename_);
  key_.Swap(&other->key_);
  etag_.Swap(&other->etag_);
  std::swap(options_, other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteStateEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteStateEnvelope_descriptor_;
  metadata.reflection = DeleteStateEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteStateEnvelope

// optional string storeName = 1;
void DeleteStateEnvelope::clear_storename() {
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DeleteStateEnvelope::storename() const {
  // @@protoc_insertion_point(field_get:dapr.DeleteStateEnvelope.storeName)
  return storename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteStateEnvelope::set_storename(const ::std::string& value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.DeleteStateEnvelope.storeName)
}
 void DeleteStateEnvelope::set_storename(const char* value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.DeleteStateEnvelope.storeName)
}
 void DeleteStateEnvelope::set_storename(const char* value, size_t size) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.DeleteStateEnvelope.storeName)
}
 ::std::string* DeleteStateEnvelope::mutable_storename() {
  
  // @@protoc_insertion_point(field_mutable:dapr.DeleteStateEnvelope.storeName)
  return storename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DeleteStateEnvelope::release_storename() {
  // @@protoc_insertion_point(field_release:dapr.DeleteStateEnvelope.storeName)
  
  return storename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteStateEnvelope::set_allocated_storename(::std::string* storename) {
  if (storename != NULL) {
    
  } else {
    
  }
  storename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storename);
  // @@protoc_insertion_point(field_set_allocated:dapr.DeleteStateEnvelope.storeName)
}

// optional string key = 2;
void DeleteStateEnvelope::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DeleteStateEnvelope::key() const {
  // @@protoc_insertion_point(field_get:dapr.DeleteStateEnvelope.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteStateEnvelope::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.DeleteStateEnvelope.key)
}
 void DeleteStateEnvelope::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.DeleteStateEnvelope.key)
}
 void DeleteStateEnvelope::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.DeleteStateEnvelope.key)
}
 ::std::string* DeleteStateEnvelope::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.DeleteStateEnvelope.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DeleteStateEnvelope::release_key() {
  // @@protoc_insertion_point(field_release:dapr.DeleteStateEnvelope.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteStateEnvelope::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.DeleteStateEnvelope.key)
}

// optional string etag = 3;
void DeleteStateEnvelope::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DeleteStateEnvelope::etag() const {
  // @@protoc_insertion_point(field_get:dapr.DeleteStateEnvelope.etag)
  return etag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteStateEnvelope::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.DeleteStateEnvelope.etag)
}
 void DeleteStateEnvelope::set_etag(const char* value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.DeleteStateEnvelope.etag)
}
 void DeleteStateEnvelope::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.DeleteStateEnvelope.etag)
}
 ::std::string* DeleteStateEnvelope::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.DeleteStateEnvelope.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DeleteStateEnvelope::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.DeleteStateEnvelope.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DeleteStateEnvelope::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.DeleteStateEnvelope.etag)
}

// optional .dapr.StateOptions options = 4;
bool DeleteStateEnvelope::has_options() const {
  return !_is_default_instance_ && options_ != NULL;
}
void DeleteStateEnvelope::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
}
const ::dapr::StateOptions& DeleteStateEnvelope::options() const {
  // @@protoc_insertion_point(field_get:dapr.DeleteStateEnvelope.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
::dapr::StateOptions* DeleteStateEnvelope::mutable_options() {
  
  if (options_ == NULL) {
    options_ = new ::dapr::StateOptions;
  }
  // @@protoc_insertion_point(field_mutable:dapr.DeleteStateEnvelope.options)
  return options_;
}
::dapr::StateOptions* DeleteStateEnvelope::release_options() {
  // @@protoc_insertion_point(field_release:dapr.DeleteStateEnvelope.options)
  
  ::dapr::StateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
void DeleteStateEnvelope::set_allocated_options(::dapr::StateOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.DeleteStateEnvelope.options)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveStateEnvelope::kStoreNameFieldNumber;
const int SaveStateEnvelope::kRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveStateEnvelope::SaveStateEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.SaveStateEnvelope)
}

void SaveStateEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SaveStateEnvelope::SaveStateEnvelope(const SaveStateEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.SaveStateEnvelope)
}

void SaveStateEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  storename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SaveStateEnvelope::~SaveStateEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.SaveStateEnvelope)
  SharedDtor();
}

void SaveStateEnvelope::SharedDtor() {
  storename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SaveStateEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveStateEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveStateEnvelope_descriptor_;
}

const SaveStateEnvelope& SaveStateEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

SaveStateEnvelope* SaveStateEnvelope::default_instance_ = NULL;

SaveStateEnvelope* SaveStateEnvelope::New(::google::protobuf::Arena* arena) const {
  SaveStateEnvelope* n = new SaveStateEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveStateEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.SaveStateEnvelope)
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requests_.Clear();
}

bool SaveStateEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.SaveStateEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string storeName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_storename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->storename().data(), this->storename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.SaveStateEnvelope.storeName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_requests;
        break;
      }

      // repeated .dapr.StateRequest requests = 2;
      case 2: {
        if (tag == 18) {
         parse_requests:
          DO_(input->IncrementRecursionDepth());
         parse_loop_requests:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_requests()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_requests;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.SaveStateEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.SaveStateEnvelope)
  return false;
#undef DO_
}

void SaveStateEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.SaveStateEnvelope)
  // optional string storeName = 1;
  if (this->storename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storename().data(), this->storename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.SaveStateEnvelope.storeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->storename(), output);
  }

  // repeated .dapr.StateRequest requests = 2;
  for (unsigned int i = 0, n = this->requests_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->requests(i), output);
  }

  // @@protoc_insertion_point(serialize_end:dapr.SaveStateEnvelope)
}

::google::protobuf::uint8* SaveStateEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.SaveStateEnvelope)
  // optional string storeName = 1;
  if (this->storename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storename().data(), this->storename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.SaveStateEnvelope.storeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->storename(), target);
  }

  // repeated .dapr.StateRequest requests = 2;
  for (unsigned int i = 0, n = this->requests_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->requests(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.SaveStateEnvelope)
  return target;
}

int SaveStateEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.SaveStateEnvelope)
  int total_size = 0;

  // optional string storeName = 1;
  if (this->storename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->storename());
  }

  // repeated .dapr.StateRequest requests = 2;
  total_size += 1 * this->requests_size();
  for (int i = 0; i < this->requests_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->requests(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveStateEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.SaveStateEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SaveStateEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveStateEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.SaveStateEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.SaveStateEnvelope)
    MergeFrom(*source);
  }
}

void SaveStateEnvelope::MergeFrom(const SaveStateEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.SaveStateEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  requests_.MergeFrom(from.requests_);
  if (from.storename().size() > 0) {

    storename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storename_);
  }
}

void SaveStateEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.SaveStateEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveStateEnvelope::CopyFrom(const SaveStateEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.SaveStateEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveStateEnvelope::IsInitialized() const {

  return true;
}

void SaveStateEnvelope::Swap(SaveStateEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveStateEnvelope::InternalSwap(SaveStateEnvelope* other) {
  storename_.Swap(&other->storename_);
  requests_.UnsafeArenaSwap(&other->requests_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveStateEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveStateEnvelope_descriptor_;
  metadata.reflection = SaveStateEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveStateEnvelope

// optional string storeName = 1;
void SaveStateEnvelope::clear_storename() {
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SaveStateEnvelope::storename() const {
  // @@protoc_insertion_point(field_get:dapr.SaveStateEnvelope.storeName)
  return storename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SaveStateEnvelope::set_storename(const ::std::string& value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.SaveStateEnvelope.storeName)
}
 void SaveStateEnvelope::set_storename(const char* value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.SaveStateEnvelope.storeName)
}
 void SaveStateEnvelope::set_storename(const char* value, size_t size) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.SaveStateEnvelope.storeName)
}
 ::std::string* SaveStateEnvelope::mutable_storename() {
  
  // @@protoc_insertion_point(field_mutable:dapr.SaveStateEnvelope.storeName)
  return storename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SaveStateEnvelope::release_storename() {
  // @@protoc_insertion_point(field_release:dapr.SaveStateEnvelope.storeName)
  
  return storename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SaveStateEnvelope::set_allocated_storename(::std::string* storename) {
  if (storename != NULL) {
    
  } else {
    
  }
  storename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storename);
  // @@protoc_insertion_point(field_set_allocated:dapr.SaveStateEnvelope.storeName)
}

// repeated .dapr.StateRequest requests = 2;
int SaveStateEnvelope::requests_size() const {
  return requests_.size();
}
void SaveStateEnvelope::clear_requests() {
  requests_.Clear();
}
const ::dapr::StateRequest& SaveStateEnvelope::requests(int index) const {
  // @@protoc_insertion_point(field_get:dapr.SaveStateEnvelope.requests)
  return requests_.Get(index);
}
::dapr::StateRequest* SaveStateEnvelope::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.SaveStateEnvelope.requests)
  return requests_.Mutable(index);
}
::dapr::StateRequest* SaveStateEnvelope::add_requests() {
  // @@protoc_insertion_point(field_add:dapr.SaveStateEnvelope.requests)
  return requests_.Add();
}
::google::protobuf::RepeatedPtrField< ::dapr::StateRequest >*
SaveStateEnvelope::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:dapr.SaveStateEnvelope.requests)
  return &requests_;
}
const ::google::protobuf::RepeatedPtrField< ::dapr::StateRequest >&
SaveStateEnvelope::requests() const {
  // @@protoc_insertion_point(field_list:dapr.SaveStateEnvelope.requests)
  return requests_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStateEnvelope::kStoreNameFieldNumber;
const int GetStateEnvelope::kKeyFieldNumber;
const int GetStateEnvelope::kConsistencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStateEnvelope::GetStateEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.GetStateEnvelope)
}

void GetStateEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetStateEnvelope::GetStateEnvelope(const GetStateEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.GetStateEnvelope)
}

void GetStateEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  storename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetStateEnvelope::~GetStateEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.GetStateEnvelope)
  SharedDtor();
}

void GetStateEnvelope::SharedDtor() {
  storename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetStateEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStateEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStateEnvelope_descriptor_;
}

const GetStateEnvelope& GetStateEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

GetStateEnvelope* GetStateEnvelope::default_instance_ = NULL;

GetStateEnvelope* GetStateEnvelope::New(::google::protobuf::Arena* arena) const {
  GetStateEnvelope* n = new GetStateEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetStateEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.GetStateEnvelope)
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetStateEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.GetStateEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string storeName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_storename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->storename().data(), this->storename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetStateEnvelope.storeName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key;
        break;
      }

      // optional string key = 2;
      case 2: {
        if (tag == 18) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetStateEnvelope.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_consistency;
        break;
      }

      // optional string consistency = 3;
      case 3: {
        if (tag == 26) {
         parse_consistency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_consistency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->consistency().data(), this->consistency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetStateEnvelope.consistency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.GetStateEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.GetStateEnvelope)
  return false;
#undef DO_
}

void GetStateEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.GetStateEnvelope)
  // optional string storeName = 1;
  if (this->storename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storename().data(), this->storename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateEnvelope.storeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->storename(), output);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateEnvelope.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional string consistency = 3;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), this->consistency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateEnvelope.consistency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->consistency(), output);
  }

  // @@protoc_insertion_point(serialize_end:dapr.GetStateEnvelope)
}

::google::protobuf::uint8* GetStateEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.GetStateEnvelope)
  // optional string storeName = 1;
  if (this->storename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storename().data(), this->storename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateEnvelope.storeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->storename(), target);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateEnvelope.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional string consistency = 3;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), this->consistency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateEnvelope.consistency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->consistency(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.GetStateEnvelope)
  return target;
}

int GetStateEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.GetStateEnvelope)
  int total_size = 0;

  // optional string storeName = 1;
  if (this->storename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->storename());
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional string consistency = 3;
  if (this->consistency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->consistency());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetStateEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.GetStateEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetStateEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStateEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.GetStateEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.GetStateEnvelope)
    MergeFrom(*source);
  }
}

void GetStateEnvelope::MergeFrom(const GetStateEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.GetStateEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.storename().size() > 0) {

    storename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storename_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.consistency().size() > 0) {

    consistency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consistency_);
  }
}

void GetStateEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.GetStateEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStateEnvelope::CopyFrom(const GetStateEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.GetStateEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStateEnvelope::IsInitialized() const {

  return true;
}

void GetStateEnvelope::Swap(GetStateEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStateEnvelope::InternalSwap(GetStateEnvelope* other) {
  storename_.Swap(&other->storename_);
  key_.Swap(&other->key_);
  consistency_.Swap(&other->consistency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetStateEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStateEnvelope_descriptor_;
  metadata.reflection = GetStateEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetStateEnvelope

// optional string storeName = 1;
void GetStateEnvelope::clear_storename() {
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetStateEnvelope::storename() const {
  // @@protoc_insertion_point(field_get:dapr.GetStateEnvelope.storeName)
  return storename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetStateEnvelope::set_storename(const ::std::string& value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.GetStateEnvelope.storeName)
}
 void GetStateEnvelope::set_storename(const char* value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.GetStateEnvelope.storeName)
}
 void GetStateEnvelope::set_storename(const char* value, size_t size) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.GetStateEnvelope.storeName)
}
 ::std::string* GetStateEnvelope::mutable_storename() {
  
  // @@protoc_insertion_point(field_mutable:dapr.GetStateEnvelope.storeName)
  return storename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetStateEnvelope::release_storename() {
  // @@protoc_insertion_point(field_release:dapr.GetStateEnvelope.storeName)
  
  return storename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetStateEnvelope::set_allocated_storename(::std::string* storename) {
  if (storename != NULL) {
    
  } else {
    
  }
  storename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storename);
  // @@protoc_insertion_point(field_set_allocated:dapr.GetStateEnvelope.storeName)
}

// optional string key = 2;
void GetStateEnvelope::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetStateEnvelope::key() const {
  // @@protoc_insertion_point(field_get:dapr.GetStateEnvelope.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetStateEnvelope::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.GetStateEnvelope.key)
}
 void GetStateEnvelope::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.GetStateEnvelope.key)
}
 void GetStateEnvelope::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.GetStateEnvelope.key)
}
 ::std::string* GetStateEnvelope::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.GetStateEnvelope.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetStateEnvelope::release_key() {
  // @@protoc_insertion_point(field_release:dapr.GetStateEnvelope.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetStateEnvelope::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.GetStateEnvelope.key)
}

// optional string consistency = 3;
void GetStateEnvelope::clear_consistency() {
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetStateEnvelope::consistency() const {
  // @@protoc_insertion_point(field_get:dapr.GetStateEnvelope.consistency)
  return consistency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetStateEnvelope::set_consistency(const ::std::string& value) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.GetStateEnvelope.consistency)
}
 void GetStateEnvelope::set_consistency(const char* value) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.GetStateEnvelope.consistency)
}
 void GetStateEnvelope::set_consistency(const char* value, size_t size) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.GetStateEnvelope.consistency)
}
 ::std::string* GetStateEnvelope::mutable_consistency() {
  
  // @@protoc_insertion_point(field_mutable:dapr.GetStateEnvelope.consistency)
  return consistency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetStateEnvelope::release_consistency() {
  // @@protoc_insertion_point(field_release:dapr.GetStateEnvelope.consistency)
  
  return consistency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetStateEnvelope::set_allocated_consistency(::std::string* consistency) {
  if (consistency != NULL) {
    
  } else {
    
  }
  consistency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), consistency);
  // @@protoc_insertion_point(field_set_allocated:dapr.GetStateEnvelope.consistency)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStateResponseEnvelope::kDataFieldNumber;
const int GetStateResponseEnvelope::kEtagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStateResponseEnvelope::GetStateResponseEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.GetStateResponseEnvelope)
}

void GetStateResponseEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

GetStateResponseEnvelope::GetStateResponseEnvelope(const GetStateResponseEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.GetStateResponseEnvelope)
}

void GetStateResponseEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetStateResponseEnvelope::~GetStateResponseEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.GetStateResponseEnvelope)
  SharedDtor();
}

void GetStateResponseEnvelope::SharedDtor() {
  etag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void GetStateResponseEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStateResponseEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStateResponseEnvelope_descriptor_;
}

const GetStateResponseEnvelope& GetStateResponseEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

GetStateResponseEnvelope* GetStateResponseEnvelope::default_instance_ = NULL;

GetStateResponseEnvelope* GetStateResponseEnvelope::New(::google::protobuf::Arena* arena) const {
  GetStateResponseEnvelope* n = new GetStateResponseEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetStateResponseEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.GetStateResponseEnvelope)
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetStateResponseEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.GetStateResponseEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Any data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_etag;
        break;
      }

      // optional string etag = 2;
      case 2: {
        if (tag == 18) {
         parse_etag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etag().data(), this->etag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetStateResponseEnvelope.etag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.GetStateResponseEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.GetStateResponseEnvelope)
  return false;
#undef DO_
}

void GetStateResponseEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.GetStateResponseEnvelope)
  // optional .google.protobuf.Any data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  // optional string etag = 2;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), this->etag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateResponseEnvelope.etag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->etag(), output);
  }

  // @@protoc_insertion_point(serialize_end:dapr.GetStateResponseEnvelope)
}

::google::protobuf::uint8* GetStateResponseEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.GetStateResponseEnvelope)
  // optional .google.protobuf.Any data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->data_, false, target);
  }

  // optional string etag = 2;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), this->etag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetStateResponseEnvelope.etag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->etag(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.GetStateResponseEnvelope)
  return target;
}

int GetStateResponseEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.GetStateResponseEnvelope)
  int total_size = 0;

  // optional .google.protobuf.Any data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // optional string etag = 2;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etag());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetStateResponseEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.GetStateResponseEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetStateResponseEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStateResponseEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.GetStateResponseEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.GetStateResponseEnvelope)
    MergeFrom(*source);
  }
}

void GetStateResponseEnvelope::MergeFrom(const GetStateResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.GetStateResponseEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.etag().size() > 0) {

    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
}

void GetStateResponseEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.GetStateResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStateResponseEnvelope::CopyFrom(const GetStateResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.GetStateResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStateResponseEnvelope::IsInitialized() const {

  return true;
}

void GetStateResponseEnvelope::Swap(GetStateResponseEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStateResponseEnvelope::InternalSwap(GetStateResponseEnvelope* other) {
  std::swap(data_, other->data_);
  etag_.Swap(&other->etag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetStateResponseEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStateResponseEnvelope_descriptor_;
  metadata.reflection = GetStateResponseEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetStateResponseEnvelope

// optional .google.protobuf.Any data = 1;
bool GetStateResponseEnvelope::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void GetStateResponseEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& GetStateResponseEnvelope::data() const {
  // @@protoc_insertion_point(field_get:dapr.GetStateResponseEnvelope.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::google::protobuf::Any* GetStateResponseEnvelope::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:dapr.GetStateResponseEnvelope.data)
  return data_;
}
::google::protobuf::Any* GetStateResponseEnvelope::release_data() {
  // @@protoc_insertion_point(field_release:dapr.GetStateResponseEnvelope.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void GetStateResponseEnvelope::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.GetStateResponseEnvelope.data)
}

// optional string etag = 2;
void GetStateResponseEnvelope::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetStateResponseEnvelope::etag() const {
  // @@protoc_insertion_point(field_get:dapr.GetStateResponseEnvelope.etag)
  return etag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetStateResponseEnvelope::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.GetStateResponseEnvelope.etag)
}
 void GetStateResponseEnvelope::set_etag(const char* value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.GetStateResponseEnvelope.etag)
}
 void GetStateResponseEnvelope::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.GetStateResponseEnvelope.etag)
}
 ::std::string* GetStateResponseEnvelope::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.GetStateResponseEnvelope.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetStateResponseEnvelope::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.GetStateResponseEnvelope.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetStateResponseEnvelope::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.GetStateResponseEnvelope.etag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSecretEnvelope::kStoreNameFieldNumber;
const int GetSecretEnvelope::kKeyFieldNumber;
const int GetSecretEnvelope::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSecretEnvelope::GetSecretEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.GetSecretEnvelope)
}

void GetSecretEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetSecretEnvelope::GetSecretEnvelope(const GetSecretEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.GetSecretEnvelope)
}

void GetSecretEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  storename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  metadata_.SetEntryDescriptor(
      &::dapr::GetSecretEnvelope_MetadataEntry_descriptor_);
}

GetSecretEnvelope::~GetSecretEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.GetSecretEnvelope)
  SharedDtor();
}

void GetSecretEnvelope::SharedDtor() {
  storename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetSecretEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSecretEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSecretEnvelope_descriptor_;
}

const GetSecretEnvelope& GetSecretEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

GetSecretEnvelope* GetSecretEnvelope::default_instance_ = NULL;

GetSecretEnvelope* GetSecretEnvelope::New(::google::protobuf::Arena* arena) const {
  GetSecretEnvelope* n = new GetSecretEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSecretEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.GetSecretEnvelope)
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.Clear();
}

bool GetSecretEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.GetSecretEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string storeName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_storename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->storename().data(), this->storename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetSecretEnvelope.storeName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key;
        break;
      }

      // optional string key = 2;
      case 2: {
        if (tag == 18) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetSecretEnvelope.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_metadata;
        break;
      }

      // map<string, string> metadata = 3;
      case 3: {
        if (tag == 26) {
         parse_metadata:
          DO_(input->IncrementRecursionDepth());
         parse_loop_metadata:
          GetSecretEnvelope_MetadataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetSecretEnvelope.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetSecretEnvelope.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.GetSecretEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.GetSecretEnvelope)
  return false;
#undef DO_
}

void GetSecretEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.GetSecretEnvelope)
  // optional string storeName = 1;
  if (this->storename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storename().data(), this->storename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetSecretEnvelope.storeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->storename(), output);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetSecretEnvelope.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.GetSecretEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.GetSecretEnvelope.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GetSecretEnvelope_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GetSecretEnvelope_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:dapr.GetSecretEnvelope)
}

::google::protobuf::uint8* GetSecretEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.GetSecretEnvelope)
  // optional string storeName = 1;
  if (this->storename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storename().data(), this->storename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetSecretEnvelope.storeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->storename(), target);
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.GetSecretEnvelope.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.GetSecretEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.GetSecretEnvelope.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GetSecretEnvelope_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GetSecretEnvelope_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.GetSecretEnvelope)
  return target;
}

int GetSecretEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.GetSecretEnvelope)
  int total_size = 0;

  // optional string storeName = 1;
  if (this->storename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->storename());
  }

  // optional string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // map<string, string> metadata = 3;
  total_size += 1 * this->metadata_size();
  {
    ::google::protobuf::scoped_ptr<GetSecretEnvelope_MetadataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSecretEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.GetSecretEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetSecretEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSecretEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.GetSecretEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.GetSecretEnvelope)
    MergeFrom(*source);
  }
}

void GetSecretEnvelope::MergeFrom(const GetSecretEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.GetSecretEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  metadata_.MergeFrom(from.metadata_);
  if (from.storename().size() > 0) {

    storename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storename_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void GetSecretEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.GetSecretEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSecretEnvelope::CopyFrom(const GetSecretEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.GetSecretEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSecretEnvelope::IsInitialized() const {

  return true;
}

void GetSecretEnvelope::Swap(GetSecretEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSecretEnvelope::InternalSwap(GetSecretEnvelope* other) {
  storename_.Swap(&other->storename_);
  key_.Swap(&other->key_);
  metadata_.Swap(&other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSecretEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSecretEnvelope_descriptor_;
  metadata.reflection = GetSecretEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSecretEnvelope

// optional string storeName = 1;
void GetSecretEnvelope::clear_storename() {
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetSecretEnvelope::storename() const {
  // @@protoc_insertion_point(field_get:dapr.GetSecretEnvelope.storeName)
  return storename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetSecretEnvelope::set_storename(const ::std::string& value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.GetSecretEnvelope.storeName)
}
 void GetSecretEnvelope::set_storename(const char* value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.GetSecretEnvelope.storeName)
}
 void GetSecretEnvelope::set_storename(const char* value, size_t size) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.GetSecretEnvelope.storeName)
}
 ::std::string* GetSecretEnvelope::mutable_storename() {
  
  // @@protoc_insertion_point(field_mutable:dapr.GetSecretEnvelope.storeName)
  return storename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetSecretEnvelope::release_storename() {
  // @@protoc_insertion_point(field_release:dapr.GetSecretEnvelope.storeName)
  
  return storename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetSecretEnvelope::set_allocated_storename(::std::string* storename) {
  if (storename != NULL) {
    
  } else {
    
  }
  storename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storename);
  // @@protoc_insertion_point(field_set_allocated:dapr.GetSecretEnvelope.storeName)
}

// optional string key = 2;
void GetSecretEnvelope::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetSecretEnvelope::key() const {
  // @@protoc_insertion_point(field_get:dapr.GetSecretEnvelope.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetSecretEnvelope::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.GetSecretEnvelope.key)
}
 void GetSecretEnvelope::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.GetSecretEnvelope.key)
}
 void GetSecretEnvelope::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.GetSecretEnvelope.key)
}
 ::std::string* GetSecretEnvelope::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.GetSecretEnvelope.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetSecretEnvelope::release_key() {
  // @@protoc_insertion_point(field_release:dapr.GetSecretEnvelope.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetSecretEnvelope::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.GetSecretEnvelope.key)
}

// map<string, string> metadata = 3;
int GetSecretEnvelope::metadata_size() const {
  return metadata_.size();
}
void GetSecretEnvelope::clear_metadata() {
  metadata_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
GetSecretEnvelope::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.GetSecretEnvelope.metadata)
  return metadata_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
GetSecretEnvelope::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.GetSecretEnvelope.metadata)
  return metadata_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSecretResponseEnvelope::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSecretResponseEnvelope::GetSecretResponseEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.GetSecretResponseEnvelope)
}

void GetSecretResponseEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetSecretResponseEnvelope::GetSecretResponseEnvelope(const GetSecretResponseEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.GetSecretResponseEnvelope)
}

void GetSecretResponseEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  data_.SetEntryDescriptor(
      &::dapr::GetSecretResponseEnvelope_DataEntry_descriptor_);
}

GetSecretResponseEnvelope::~GetSecretResponseEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.GetSecretResponseEnvelope)
  SharedDtor();
}

void GetSecretResponseEnvelope::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetSecretResponseEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSecretResponseEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSecretResponseEnvelope_descriptor_;
}

const GetSecretResponseEnvelope& GetSecretResponseEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

GetSecretResponseEnvelope* GetSecretResponseEnvelope::default_instance_ = NULL;

GetSecretResponseEnvelope* GetSecretResponseEnvelope::New(::google::protobuf::Arena* arena) const {
  GetSecretResponseEnvelope* n = new GetSecretResponseEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSecretResponseEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.GetSecretResponseEnvelope)
  data_.Clear();
}

bool GetSecretResponseEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.GetSecretResponseEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> data = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          GetSecretResponseEnvelope_DataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&data_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetSecretResponseEnvelope.DataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.GetSecretResponseEnvelope.DataEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.GetSecretResponseEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.GetSecretResponseEnvelope)
  return false;
#undef DO_
}

void GetSecretResponseEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.GetSecretResponseEnvelope)
  // map<string, string> data = 1;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.GetSecretResponseEnvelope.DataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.GetSecretResponseEnvelope.DataEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->data().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GetSecretResponseEnvelope_DataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GetSecretResponseEnvelope_DataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:dapr.GetSecretResponseEnvelope)
}

::google::protobuf::uint8* GetSecretResponseEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.GetSecretResponseEnvelope)
  // map<string, string> data = 1;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.GetSecretResponseEnvelope.DataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.GetSecretResponseEnvelope.DataEntry.value");
      }
    };

    if (deterministic &&
        this->data().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GetSecretResponseEnvelope_DataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GetSecretResponseEnvelope_DataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.GetSecretResponseEnvelope)
  return target;
}

int GetSecretResponseEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.GetSecretResponseEnvelope)
  int total_size = 0;

  // map<string, string> data = 1;
  total_size += 1 * this->data_size();
  {
    ::google::protobuf::scoped_ptr<GetSecretResponseEnvelope_DataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->data().begin();
        it != this->data().end(); ++it) {
      entry.reset(data_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSecretResponseEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.GetSecretResponseEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetSecretResponseEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSecretResponseEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.GetSecretResponseEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.GetSecretResponseEnvelope)
    MergeFrom(*source);
  }
}

void GetSecretResponseEnvelope::MergeFrom(const GetSecretResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.GetSecretResponseEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
}

void GetSecretResponseEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.GetSecretResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSecretResponseEnvelope::CopyFrom(const GetSecretResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.GetSecretResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSecretResponseEnvelope::IsInitialized() const {

  return true;
}

void GetSecretResponseEnvelope::Swap(GetSecretResponseEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSecretResponseEnvelope::InternalSwap(GetSecretResponseEnvelope* other) {
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSecretResponseEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSecretResponseEnvelope_descriptor_;
  metadata.reflection = GetSecretResponseEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSecretResponseEnvelope

<<<<<<< HEAD
// map<string, string> data = 1;
int GetSecretResponseEnvelope::data_size() const {
  return data_.size();
}
void GetSecretResponseEnvelope::clear_data() {
  data_.Clear();
=======
// ===================================================================

GetSecretEnvelope_MetadataEntry_DoNotUse::GetSecretEnvelope_MetadataEntry_DoNotUse() {}
GetSecretEnvelope_MetadataEntry_DoNotUse::GetSecretEnvelope_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetSecretEnvelope_MetadataEntry_DoNotUse::MergeFrom(const GetSecretEnvelope_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetSecretEnvelope_MetadataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetSecretEnvelope_MetadataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetSecretEnvelope::InitAsDefaultInstance() {
}
class GetSecretEnvelope::_Internal {
 public:
};

GetSecretEnvelope::GetSecretEnvelope()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.GetSecretEnvelope)
}
GetSecretEnvelope::GetSecretEnvelope(const GetSecretEnvelope& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  storename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_storename().empty()) {
    storename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.storename_);
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:dapr.GetSecretEnvelope)
}

void GetSecretEnvelope::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSecretEnvelope_dapr_2eproto.base);
  storename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSecretEnvelope::~GetSecretEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.GetSecretEnvelope)
  SharedDtor();
}

void GetSecretEnvelope::SharedDtor() {
  storename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSecretEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSecretEnvelope& GetSecretEnvelope::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSecretEnvelope_dapr_2eproto.base);
  return *internal_default_instance();
}


void GetSecretEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.GetSecretEnvelope)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  storename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GetSecretEnvelope::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string storeName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_storename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.GetSecretEnvelope.storeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "dapr.GetSecretEnvelope.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSecretEnvelope::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.GetSecretEnvelope)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string storeName = 1;
  if (this->storename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_storename().data(), static_cast<int>(this->_internal_storename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.GetSecretEnvelope.storeName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_storename(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dapr.GetSecretEnvelope.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // map<string, string> metadata = 3;
  if (!this->_internal_metadata().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.GetSecretEnvelope.MetadataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.GetSecretEnvelope.MetadataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_metadata().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetSecretEnvelope_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_metadata().begin();
          it != this->_internal_metadata().end(); ++it) {
        target = GetSecretEnvelope_MetadataEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.GetSecretEnvelope)
  return target;
}

size_t GetSecretEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.GetSecretEnvelope)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetSecretEnvelope_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string storeName = 1;
  if (this->storename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_storename());
  }

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSecretEnvelope::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.GetSecretEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSecretEnvelope* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSecretEnvelope>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.GetSecretEnvelope)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.GetSecretEnvelope)
    MergeFrom(*source);
  }
}

void GetSecretEnvelope::MergeFrom(const GetSecretEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.GetSecretEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.storename().size() > 0) {

    storename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.storename_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void GetSecretEnvelope::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.GetSecretEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSecretEnvelope::CopyFrom(const GetSecretEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.GetSecretEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSecretEnvelope::IsInitialized() const {
  return true;
}

void GetSecretEnvelope::InternalSwap(GetSecretEnvelope* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  metadata_.Swap(&other->metadata_);
  storename_.Swap(&other->storename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSecretEnvelope::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetSecretResponseEnvelope_DataEntry_DoNotUse::GetSecretResponseEnvelope_DataEntry_DoNotUse() {}
GetSecretResponseEnvelope_DataEntry_DoNotUse::GetSecretResponseEnvelope_DataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetSecretResponseEnvelope_DataEntry_DoNotUse::MergeFrom(const GetSecretResponseEnvelope_DataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetSecretResponseEnvelope_DataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetSecretResponseEnvelope_DataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetSecretResponseEnvelope::InitAsDefaultInstance() {
}
class GetSecretResponseEnvelope::_Internal {
 public:
};

GetSecretResponseEnvelope::GetSecretResponseEnvelope()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.GetSecretResponseEnvelope)
}
GetSecretResponseEnvelope::GetSecretResponseEnvelope(const GetSecretResponseEnvelope& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.MergeFrom(from.data_);
  // @@protoc_insertion_point(copy_constructor:dapr.GetSecretResponseEnvelope)
}

void GetSecretResponseEnvelope::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSecretResponseEnvelope_dapr_2eproto.base);
}

GetSecretResponseEnvelope::~GetSecretResponseEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.GetSecretResponseEnvelope)
  SharedDtor();
}

void GetSecretResponseEnvelope::SharedDtor() {
}

void GetSecretResponseEnvelope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSecretResponseEnvelope& GetSecretResponseEnvelope::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSecretResponseEnvelope_dapr_2eproto.base);
  return *internal_default_instance();
}


void GetSecretResponseEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.GetSecretResponseEnvelope)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear();
}

const char* GetSecretResponseEnvelope::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, string> data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&data_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSecretResponseEnvelope::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.GetSecretResponseEnvelope)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> data = 1;
  if (!this->_internal_data().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.GetSecretResponseEnvelope.DataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "dapr.GetSecretResponseEnvelope.DataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_data().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_data().begin();
          it != this->_internal_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetSecretResponseEnvelope_DataEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_data().begin();
          it != this->_internal_data().end(); ++it) {
        target = GetSecretResponseEnvelope_DataEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dapr.GetSecretResponseEnvelope)
  return target;
}

size_t GetSecretResponseEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.GetSecretResponseEnvelope)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> data = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_data_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_data().begin();
      it != this->_internal_data().end(); ++it) {
    total_size += GetSecretResponseEnvelope_DataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSecretResponseEnvelope::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.GetSecretResponseEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSecretResponseEnvelope* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSecretResponseEnvelope>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.GetSecretResponseEnvelope)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.GetSecretResponseEnvelope)
    MergeFrom(*source);
  }
}

void GetSecretResponseEnvelope::MergeFrom(const GetSecretResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.GetSecretResponseEnvelope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void GetSecretResponseEnvelope::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.GetSecretResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSecretResponseEnvelope::CopyFrom(const GetSecretResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.GetSecretResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSecretResponseEnvelope::IsInitialized() const {
  return true;
}

void GetSecretResponseEnvelope::InternalSwap(GetSecretResponseEnvelope* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  data_.Swap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSecretResponseEnvelope::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

InvokeBindingEnvelope_MetadataEntry_DoNotUse::InvokeBindingEnvelope_MetadataEntry_DoNotUse() {}
InvokeBindingEnvelope_MetadataEntry_DoNotUse::InvokeBindingEnvelope_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InvokeBindingEnvelope_MetadataEntry_DoNotUse::MergeFrom(const InvokeBindingEnvelope_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
>>>>>>> master
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
GetSecretResponseEnvelope::data() const {
  // @@protoc_insertion_point(field_map:dapr.GetSecretResponseEnvelope.data)
  return data_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
GetSecretResponseEnvelope::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:dapr.GetSecretResponseEnvelope.data)
  return data_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvokeBindingEnvelope::kNameFieldNumber;
const int InvokeBindingEnvelope::kDataFieldNumber;
const int InvokeBindingEnvelope::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvokeBindingEnvelope::InvokeBindingEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.InvokeBindingEnvelope)
}

void InvokeBindingEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

InvokeBindingEnvelope::InvokeBindingEnvelope(const InvokeBindingEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.InvokeBindingEnvelope)
}

void InvokeBindingEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
  metadata_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  metadata_.SetEntryDescriptor(
      &::dapr::InvokeBindingEnvelope_MetadataEntry_descriptor_);
}

InvokeBindingEnvelope::~InvokeBindingEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.InvokeBindingEnvelope)
  SharedDtor();
}

void InvokeBindingEnvelope::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void InvokeBindingEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvokeBindingEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvokeBindingEnvelope_descriptor_;
}

const InvokeBindingEnvelope& InvokeBindingEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

InvokeBindingEnvelope* InvokeBindingEnvelope::default_instance_ = NULL;

InvokeBindingEnvelope* InvokeBindingEnvelope::New(::google::protobuf::Arena* arena) const {
  InvokeBindingEnvelope* n = new InvokeBindingEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InvokeBindingEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.InvokeBindingEnvelope)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
  metadata_.Clear();
}

bool InvokeBindingEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.InvokeBindingEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeBindingEnvelope.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .google.protobuf.Any data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_metadata;
        break;
      }

      // map<string, string> metadata = 3;
      case 3: {
        if (tag == 26) {
         parse_metadata:
          DO_(input->IncrementRecursionDepth());
         parse_loop_metadata:
          InvokeBindingEnvelope_MetadataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeBindingEnvelope.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeBindingEnvelope.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.InvokeBindingEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.InvokeBindingEnvelope)
  return false;
#undef DO_
}

void InvokeBindingEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.InvokeBindingEnvelope)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.InvokeBindingEnvelope.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .google.protobuf.Any data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeBindingEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeBindingEnvelope.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<InvokeBindingEnvelope_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<InvokeBindingEnvelope_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:dapr.InvokeBindingEnvelope)
}

::google::protobuf::uint8* InvokeBindingEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.InvokeBindingEnvelope)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.InvokeBindingEnvelope.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .google.protobuf.Any data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->data_, false, target);
  }

  // map<string, string> metadata = 3;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeBindingEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeBindingEnvelope.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<InvokeBindingEnvelope_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<InvokeBindingEnvelope_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.InvokeBindingEnvelope)
  return target;
}

int InvokeBindingEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.InvokeBindingEnvelope)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .google.protobuf.Any data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // map<string, string> metadata = 3;
  total_size += 1 * this->metadata_size();
  {
    ::google::protobuf::scoped_ptr<InvokeBindingEnvelope_MetadataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvokeBindingEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.InvokeBindingEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InvokeBindingEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InvokeBindingEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.InvokeBindingEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.InvokeBindingEnvelope)
    MergeFrom(*source);
  }
}

void InvokeBindingEnvelope::MergeFrom(const InvokeBindingEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.InvokeBindingEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  metadata_.MergeFrom(from.metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
}

void InvokeBindingEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.InvokeBindingEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeBindingEnvelope::CopyFrom(const InvokeBindingEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.InvokeBindingEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeBindingEnvelope::IsInitialized() const {

  return true;
}

void InvokeBindingEnvelope::Swap(InvokeBindingEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvokeBindingEnvelope::InternalSwap(InvokeBindingEnvelope* other) {
  name_.Swap(&other->name_);
  std::swap(data_, other->data_);
  metadata_.Swap(&other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InvokeBindingEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvokeBindingEnvelope_descriptor_;
  metadata.reflection = InvokeBindingEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InvokeBindingEnvelope

// optional string name = 1;
void InvokeBindingEnvelope::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InvokeBindingEnvelope::name() const {
  // @@protoc_insertion_point(field_get:dapr.InvokeBindingEnvelope.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InvokeBindingEnvelope::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.InvokeBindingEnvelope.name)
}
 void InvokeBindingEnvelope::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.InvokeBindingEnvelope.name)
}
 void InvokeBindingEnvelope::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.InvokeBindingEnvelope.name)
}
 ::std::string* InvokeBindingEnvelope::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.InvokeBindingEnvelope.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InvokeBindingEnvelope::release_name() {
  // @@protoc_insertion_point(field_release:dapr.InvokeBindingEnvelope.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InvokeBindingEnvelope::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.InvokeBindingEnvelope.name)
}

// optional .google.protobuf.Any data = 2;
bool InvokeBindingEnvelope::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void InvokeBindingEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& InvokeBindingEnvelope::data() const {
  // @@protoc_insertion_point(field_get:dapr.InvokeBindingEnvelope.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::google::protobuf::Any* InvokeBindingEnvelope::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:dapr.InvokeBindingEnvelope.data)
  return data_;
}
::google::protobuf::Any* InvokeBindingEnvelope::release_data() {
  // @@protoc_insertion_point(field_release:dapr.InvokeBindingEnvelope.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void InvokeBindingEnvelope::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.InvokeBindingEnvelope.data)
}

// map<string, string> metadata = 3;
int InvokeBindingEnvelope::metadata_size() const {
  return metadata_.size();
}
void InvokeBindingEnvelope::clear_metadata() {
  metadata_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
InvokeBindingEnvelope::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.InvokeBindingEnvelope.metadata)
  return metadata_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
InvokeBindingEnvelope::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.InvokeBindingEnvelope.metadata)
  return metadata_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvokeServiceEnvelope::kIdFieldNumber;
const int InvokeServiceEnvelope::kMethodFieldNumber;
const int InvokeServiceEnvelope::kDataFieldNumber;
const int InvokeServiceEnvelope::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvokeServiceEnvelope::InvokeServiceEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.InvokeServiceEnvelope)
}

void InvokeServiceEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

InvokeServiceEnvelope::InvokeServiceEnvelope(const InvokeServiceEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.InvokeServiceEnvelope)
}

void InvokeServiceEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
  metadata_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  metadata_.SetEntryDescriptor(
      &::dapr::InvokeServiceEnvelope_MetadataEntry_descriptor_);
}

InvokeServiceEnvelope::~InvokeServiceEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.InvokeServiceEnvelope)
  SharedDtor();
}

void InvokeServiceEnvelope::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void InvokeServiceEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvokeServiceEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvokeServiceEnvelope_descriptor_;
}

const InvokeServiceEnvelope& InvokeServiceEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

InvokeServiceEnvelope* InvokeServiceEnvelope::default_instance_ = NULL;

InvokeServiceEnvelope* InvokeServiceEnvelope::New(::google::protobuf::Arena* arena) const {
  InvokeServiceEnvelope* n = new InvokeServiceEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InvokeServiceEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.InvokeServiceEnvelope)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
  metadata_.Clear();
}

bool InvokeServiceEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.InvokeServiceEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeServiceEnvelope.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_method;
        break;
      }

      // optional string method = 2;
      case 2: {
        if (tag == 18) {
         parse_method:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeServiceEnvelope.method"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // optional .google.protobuf.Any data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_metadata;
        break;
      }

      // map<string, string> metadata = 4;
      case 4: {
        if (tag == 34) {
         parse_metadata:
          DO_(input->IncrementRecursionDepth());
         parse_loop_metadata:
          InvokeServiceEnvelope_MetadataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeServiceEnvelope.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.InvokeServiceEnvelope.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.InvokeServiceEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.InvokeServiceEnvelope)
  return false;
#undef DO_
}

void InvokeServiceEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.InvokeServiceEnvelope)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.InvokeServiceEnvelope.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.InvokeServiceEnvelope.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method(), output);
  }

  // optional .google.protobuf.Any data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceEnvelope.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<InvokeServiceEnvelope_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<InvokeServiceEnvelope_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:dapr.InvokeServiceEnvelope)
}

::google::protobuf::uint8* InvokeServiceEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.InvokeServiceEnvelope)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.InvokeServiceEnvelope.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.InvokeServiceEnvelope.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method(), target);
  }

  // optional .google.protobuf.Any data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->data_, false, target);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceEnvelope.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.InvokeServiceEnvelope.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<InvokeServiceEnvelope_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<InvokeServiceEnvelope_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.InvokeServiceEnvelope)
  return target;
}

int InvokeServiceEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.InvokeServiceEnvelope)
  int total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // optional .google.protobuf.Any data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // map<string, string> metadata = 4;
  total_size += 1 * this->metadata_size();
  {
    ::google::protobuf::scoped_ptr<InvokeServiceEnvelope_MetadataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvokeServiceEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.InvokeServiceEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InvokeServiceEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InvokeServiceEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.InvokeServiceEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.InvokeServiceEnvelope)
    MergeFrom(*source);
  }
}

void InvokeServiceEnvelope::MergeFrom(const InvokeServiceEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.InvokeServiceEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  metadata_.MergeFrom(from.metadata_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
}

void InvokeServiceEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.InvokeServiceEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvokeServiceEnvelope::CopyFrom(const InvokeServiceEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.InvokeServiceEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeServiceEnvelope::IsInitialized() const {

  return true;
}

void InvokeServiceEnvelope::Swap(InvokeServiceEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvokeServiceEnvelope::InternalSwap(InvokeServiceEnvelope* other) {
  id_.Swap(&other->id_);
  method_.Swap(&other->method_);
  std::swap(data_, other->data_);
  metadata_.Swap(&other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InvokeServiceEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvokeServiceEnvelope_descriptor_;
  metadata.reflection = InvokeServiceEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InvokeServiceEnvelope

// optional string id = 1;
void InvokeServiceEnvelope::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InvokeServiceEnvelope::id() const {
  // @@protoc_insertion_point(field_get:dapr.InvokeServiceEnvelope.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InvokeServiceEnvelope::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.InvokeServiceEnvelope.id)
}
 void InvokeServiceEnvelope::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.InvokeServiceEnvelope.id)
}
 void InvokeServiceEnvelope::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.InvokeServiceEnvelope.id)
}
 ::std::string* InvokeServiceEnvelope::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.InvokeServiceEnvelope.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InvokeServiceEnvelope::release_id() {
  // @@protoc_insertion_point(field_release:dapr.InvokeServiceEnvelope.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InvokeServiceEnvelope::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:dapr.InvokeServiceEnvelope.id)
}

// optional string method = 2;
void InvokeServiceEnvelope::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& InvokeServiceEnvelope::method() const {
  // @@protoc_insertion_point(field_get:dapr.InvokeServiceEnvelope.method)
  return method_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InvokeServiceEnvelope::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.InvokeServiceEnvelope.method)
}
 void InvokeServiceEnvelope::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.InvokeServiceEnvelope.method)
}
 void InvokeServiceEnvelope::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.InvokeServiceEnvelope.method)
}
 ::std::string* InvokeServiceEnvelope::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:dapr.InvokeServiceEnvelope.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InvokeServiceEnvelope::release_method() {
  // @@protoc_insertion_point(field_release:dapr.InvokeServiceEnvelope.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InvokeServiceEnvelope::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:dapr.InvokeServiceEnvelope.method)
}

// optional .google.protobuf.Any data = 3;
bool InvokeServiceEnvelope::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void InvokeServiceEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& InvokeServiceEnvelope::data() const {
  // @@protoc_insertion_point(field_get:dapr.InvokeServiceEnvelope.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::google::protobuf::Any* InvokeServiceEnvelope::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:dapr.InvokeServiceEnvelope.data)
  return data_;
}
::google::protobuf::Any* InvokeServiceEnvelope::release_data() {
  // @@protoc_insertion_point(field_release:dapr.InvokeServiceEnvelope.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void InvokeServiceEnvelope::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.InvokeServiceEnvelope.data)
}

// map<string, string> metadata = 4;
int InvokeServiceEnvelope::metadata_size() const {
  return metadata_.size();
}
void InvokeServiceEnvelope::clear_metadata() {
  metadata_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
InvokeServiceEnvelope::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.InvokeServiceEnvelope.metadata)
  return metadata_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
InvokeServiceEnvelope::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.InvokeServiceEnvelope.metadata)
  return metadata_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishEventEnvelope::kTopicFieldNumber;
const int PublishEventEnvelope::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishEventEnvelope::PublishEventEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.PublishEventEnvelope)
}

void PublishEventEnvelope::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

PublishEventEnvelope::PublishEventEnvelope(const PublishEventEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.PublishEventEnvelope)
}

void PublishEventEnvelope::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
}

PublishEventEnvelope::~PublishEventEnvelope() {
  // @@protoc_insertion_point(destructor:dapr.PublishEventEnvelope)
  SharedDtor();
}

void PublishEventEnvelope::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void PublishEventEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PublishEventEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PublishEventEnvelope_descriptor_;
}

const PublishEventEnvelope& PublishEventEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

PublishEventEnvelope* PublishEventEnvelope::default_instance_ = NULL;

PublishEventEnvelope* PublishEventEnvelope::New(::google::protobuf::Arena* arena) const {
  PublishEventEnvelope* n = new PublishEventEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PublishEventEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.PublishEventEnvelope)
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}

bool PublishEventEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.PublishEventEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string topic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), this->topic().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.PublishEventEnvelope.topic"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional .google.protobuf.Any data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.PublishEventEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.PublishEventEnvelope)
  return false;
#undef DO_
}

void PublishEventEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.PublishEventEnvelope)
  // optional string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), this->topic().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.PublishEventEnvelope.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // optional .google.protobuf.Any data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // @@protoc_insertion_point(serialize_end:dapr.PublishEventEnvelope)
}

::google::protobuf::uint8* PublishEventEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.PublishEventEnvelope)
  // optional string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), this->topic().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.PublishEventEnvelope.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // optional .google.protobuf.Any data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.PublishEventEnvelope)
  return target;
}

int PublishEventEnvelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.PublishEventEnvelope)
  int total_size = 0;

  // optional string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // optional .google.protobuf.Any data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PublishEventEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.PublishEventEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PublishEventEnvelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PublishEventEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.PublishEventEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.PublishEventEnvelope)
    MergeFrom(*source);
  }
}

void PublishEventEnvelope::MergeFrom(const PublishEventEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.PublishEventEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
}

void PublishEventEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.PublishEventEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishEventEnvelope::CopyFrom(const PublishEventEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.PublishEventEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishEventEnvelope::IsInitialized() const {

  return true;
}

void PublishEventEnvelope::Swap(PublishEventEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishEventEnvelope::InternalSwap(PublishEventEnvelope* other) {
  topic_.Swap(&other->topic_);
  std::swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PublishEventEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PublishEventEnvelope_descriptor_;
  metadata.reflection = PublishEventEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PublishEventEnvelope

// optional string topic = 1;
void PublishEventEnvelope::clear_topic() {
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PublishEventEnvelope::topic() const {
  // @@protoc_insertion_point(field_get:dapr.PublishEventEnvelope.topic)
  return topic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PublishEventEnvelope::set_topic(const ::std::string& value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.PublishEventEnvelope.topic)
}
 void PublishEventEnvelope::set_topic(const char* value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.PublishEventEnvelope.topic)
}
 void PublishEventEnvelope::set_topic(const char* value, size_t size) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.PublishEventEnvelope.topic)
}
 ::std::string* PublishEventEnvelope::mutable_topic() {
  
  // @@protoc_insertion_point(field_mutable:dapr.PublishEventEnvelope.topic)
  return topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PublishEventEnvelope::release_topic() {
  // @@protoc_insertion_point(field_release:dapr.PublishEventEnvelope.topic)
  
  return topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PublishEventEnvelope::set_allocated_topic(::std::string* topic) {
  if (topic != NULL) {
    
  } else {
    
  }
  topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topic);
  // @@protoc_insertion_point(field_set_allocated:dapr.PublishEventEnvelope.topic)
}

// optional .google.protobuf.Any data = 2;
bool PublishEventEnvelope::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void PublishEventEnvelope::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& PublishEventEnvelope::data() const {
  // @@protoc_insertion_point(field_get:dapr.PublishEventEnvelope.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::google::protobuf::Any* PublishEventEnvelope::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:dapr.PublishEventEnvelope.data)
  return data_;
}
::google::protobuf::Any* PublishEventEnvelope::release_data() {
  // @@protoc_insertion_point(field_release:dapr.PublishEventEnvelope.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void PublishEventEnvelope::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.PublishEventEnvelope.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int State::kKeyFieldNumber;
const int State::kValueFieldNumber;
const int State::kEtagFieldNumber;
const int State::kMetadataFieldNumber;
const int State::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

State::State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.State)
}

void State::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  value_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
  options_ = const_cast< ::dapr::StateOptions*>(&::dapr::StateOptions::default_instance());
}

State::State(const State& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.State)
}

void State::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  metadata_.SetEntryDescriptor(
      &::dapr::State_MetadataEntry_descriptor_);
  options_ = NULL;
}

State::~State() {
  // @@protoc_insertion_point(destructor:dapr.State)
  SharedDtor();
}

void State::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete value_;
    delete options_;
  }
}

void State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* State::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return State_descriptor_;
}

const State& State::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

State* State::default_instance_ = NULL;

State* State::New(::google::protobuf::Arena* arena) const {
  State* n = new State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void State::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.State)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
  metadata_.Clear();
}

bool State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.State.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional .google.protobuf.Any value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_etag;
        break;
      }

      // optional string etag = 3;
      case 3: {
        if (tag == 26) {
         parse_etag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etag().data(), this->etag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.State.etag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_metadata;
        break;
      }

      // map<string, string> metadata = 4;
      case 4: {
        if (tag == 34) {
         parse_metadata:
          DO_(input->IncrementRecursionDepth());
         parse_loop_metadata:
          State_MetadataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.State.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.State.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_options;
        break;
      }

      // optional .dapr.StateOptions options = 5;
      case 5: {
        if (tag == 42) {
         parse_options:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.State)
  return false;
#undef DO_
}

void State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.State)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.State.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional .google.protobuf.Any value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  // optional string etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), this->etag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.State.etag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->etag(), output);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.State.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.State.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<State_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<State_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .dapr.StateOptions options = 5;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->options_, output);
  }

  // @@protoc_insertion_point(serialize_end:dapr.State)
}

::google::protobuf::uint8* State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.State)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.State.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional .google.protobuf.Any value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_, false, target);
  }

  // optional string etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), this->etag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.State.etag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->etag(), target);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.State.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.State.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<State_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<State_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .dapr.StateOptions options = 5;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->options_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.State)
  return target;
}

int State::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.State)
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional .google.protobuf.Any value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  // optional string etag = 3;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etag());
  }

  // optional .dapr.StateOptions options = 5;
  if (this->has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->options_);
  }

  // map<string, string> metadata = 4;
  total_size += 1 * this->metadata_size();
  {
    ::google::protobuf::scoped_ptr<State_MetadataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.State)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const State* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.State)
    MergeFrom(*source);
  }
}

void State::MergeFrom(const State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.State)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  metadata_.MergeFrom(from.metadata_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_value()) {
    mutable_value()->::google::protobuf::Any::MergeFrom(from.value());
  }
  if (from.etag().size() > 0) {

    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_options()) {
    mutable_options()->::dapr::StateOptions::MergeFrom(from.options());
  }
}

void State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void State::CopyFrom(const State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool State::IsInitialized() const {

  return true;
}

void State::Swap(State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void State::InternalSwap(State* other) {
  key_.Swap(&other->key_);
  std::swap(value_, other->value_);
  etag_.Swap(&other->etag_);
  metadata_.Swap(&other->metadata_);
  std::swap(options_, other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata State::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = State_descriptor_;
  metadata.reflection = State_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// State

// optional string key = 1;
void State::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& State::key() const {
  // @@protoc_insertion_point(field_get:dapr.State.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void State::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.State.key)
}
 void State::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.State.key)
}
 void State::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.State.key)
}
 ::std::string* State::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.State.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* State::release_key() {
  // @@protoc_insertion_point(field_release:dapr.State.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void State::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.State.key)
}

// optional .google.protobuf.Any value = 2;
bool State::has_value() const {
  return !_is_default_instance_ && value_ != NULL;
}
void State::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::google::protobuf::Any& State::value() const {
  // @@protoc_insertion_point(field_get:dapr.State.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
::google::protobuf::Any* State::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:dapr.State.value)
  return value_;
}
::google::protobuf::Any* State::release_value() {
  // @@protoc_insertion_point(field_release:dapr.State.value)
  
  ::google::protobuf::Any* temp = value_;
  value_ = NULL;
  return temp;
}
void State::set_allocated_value(::google::protobuf::Any* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.State.value)
}

// optional string etag = 3;
void State::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& State::etag() const {
  // @@protoc_insertion_point(field_get:dapr.State.etag)
  return etag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void State::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.State.etag)
}
 void State::set_etag(const char* value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.State.etag)
}
 void State::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.State.etag)
}
 ::std::string* State::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.State.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* State::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.State.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void State::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.State.etag)
}

// map<string, string> metadata = 4;
int State::metadata_size() const {
  return metadata_.size();
}
void State::clear_metadata() {
  metadata_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
State::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.State.metadata)
  return metadata_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
State::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.State.metadata)
  return metadata_.MutableMap();
}

// optional .dapr.StateOptions options = 5;
bool State::has_options() const {
  return !_is_default_instance_ && options_ != NULL;
}
void State::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
}
const ::dapr::StateOptions& State::options() const {
  // @@protoc_insertion_point(field_get:dapr.State.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
::dapr::StateOptions* State::mutable_options() {
  
  if (options_ == NULL) {
    options_ = new ::dapr::StateOptions;
  }
  // @@protoc_insertion_point(field_mutable:dapr.State.options)
  return options_;
}
::dapr::StateOptions* State::release_options() {
  // @@protoc_insertion_point(field_release:dapr.State.options)
  
  ::dapr::StateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
void State::set_allocated_options(::dapr::StateOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.State.options)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateOptions::kConcurrencyFieldNumber;
const int StateOptions::kConsistencyFieldNumber;
const int StateOptions::kRetryPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateOptions::StateOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.StateOptions)
}

void StateOptions::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retrypolicy_ = const_cast< ::dapr::RetryPolicy*>(&::dapr::RetryPolicy::default_instance());
}

StateOptions::StateOptions(const StateOptions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.StateOptions)
}

void StateOptions::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  concurrency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retrypolicy_ = NULL;
}

StateOptions::~StateOptions() {
  // @@protoc_insertion_point(destructor:dapr.StateOptions)
  SharedDtor();
}

void StateOptions::SharedDtor() {
  concurrency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete retrypolicy_;
  }
}

void StateOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StateOptions_descriptor_;
}

const StateOptions& StateOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

StateOptions* StateOptions::default_instance_ = NULL;

StateOptions* StateOptions::New(::google::protobuf::Arena* arena) const {
  StateOptions* n = new StateOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StateOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.StateOptions)
  concurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && retrypolicy_ != NULL) delete retrypolicy_;
  retrypolicy_ = NULL;
}

bool StateOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.StateOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string concurrency = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_concurrency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->concurrency().data(), this->concurrency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateOptions.concurrency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_consistency;
        break;
      }

      // optional string consistency = 2;
      case 2: {
        if (tag == 18) {
         parse_consistency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_consistency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->consistency().data(), this->consistency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateOptions.consistency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_retryPolicy;
        break;
      }

      // optional .dapr.RetryPolicy retryPolicy = 3;
      case 3: {
        if (tag == 26) {
         parse_retryPolicy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retrypolicy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.StateOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.StateOptions)
  return false;
#undef DO_
}

void StateOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.StateOptions)
  // optional string concurrency = 1;
  if (this->concurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concurrency().data(), this->concurrency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateOptions.concurrency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->concurrency(), output);
  }

  // optional string consistency = 2;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), this->consistency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateOptions.consistency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->consistency(), output);
  }

  // optional .dapr.RetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->retrypolicy_, output);
  }

  // @@protoc_insertion_point(serialize_end:dapr.StateOptions)
}

::google::protobuf::uint8* StateOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.StateOptions)
  // optional string concurrency = 1;
  if (this->concurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concurrency().data(), this->concurrency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateOptions.concurrency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->concurrency(), target);
  }

  // optional string consistency = 2;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), this->consistency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateOptions.consistency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->consistency(), target);
  }

  // optional .dapr.RetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->retrypolicy_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.StateOptions)
  return target;
}

int StateOptions::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.StateOptions)
  int total_size = 0;

  // optional string concurrency = 1;
  if (this->concurrency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->concurrency());
  }

  // optional string consistency = 2;
  if (this->consistency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->consistency());
  }

  // optional .dapr.RetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retrypolicy_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.StateOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StateOptions* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StateOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.StateOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.StateOptions)
    MergeFrom(*source);
  }
}

void StateOptions::MergeFrom(const StateOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.StateOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.concurrency().size() > 0) {

    concurrency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.concurrency_);
  }
  if (from.consistency().size() > 0) {

    consistency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consistency_);
  }
  if (from.has_retrypolicy()) {
    mutable_retrypolicy()->::dapr::RetryPolicy::MergeFrom(from.retrypolicy());
  }
}

void StateOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.StateOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateOptions::CopyFrom(const StateOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.StateOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateOptions::IsInitialized() const {

  return true;
}

void StateOptions::Swap(StateOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateOptions::InternalSwap(StateOptions* other) {
  concurrency_.Swap(&other->concurrency_);
  consistency_.Swap(&other->consistency_);
  std::swap(retrypolicy_, other->retrypolicy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StateOptions_descriptor_;
  metadata.reflection = StateOptions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StateOptions

// optional string concurrency = 1;
void StateOptions::clear_concurrency() {
  concurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StateOptions::concurrency() const {
  // @@protoc_insertion_point(field_get:dapr.StateOptions.concurrency)
  return concurrency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateOptions::set_concurrency(const ::std::string& value) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.StateOptions.concurrency)
}
 void StateOptions::set_concurrency(const char* value) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.StateOptions.concurrency)
}
 void StateOptions::set_concurrency(const char* value, size_t size) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.StateOptions.concurrency)
}
 ::std::string* StateOptions::mutable_concurrency() {
  
  // @@protoc_insertion_point(field_mutable:dapr.StateOptions.concurrency)
  return concurrency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StateOptions::release_concurrency() {
  // @@protoc_insertion_point(field_release:dapr.StateOptions.concurrency)
  
  return concurrency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateOptions::set_allocated_concurrency(::std::string* concurrency) {
  if (concurrency != NULL) {
    
  } else {
    
  }
  concurrency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), concurrency);
  // @@protoc_insertion_point(field_set_allocated:dapr.StateOptions.concurrency)
}

// optional string consistency = 2;
void StateOptions::clear_consistency() {
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StateOptions::consistency() const {
  // @@protoc_insertion_point(field_get:dapr.StateOptions.consistency)
  return consistency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateOptions::set_consistency(const ::std::string& value) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.StateOptions.consistency)
}
 void StateOptions::set_consistency(const char* value) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.StateOptions.consistency)
}
 void StateOptions::set_consistency(const char* value, size_t size) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.StateOptions.consistency)
}
 ::std::string* StateOptions::mutable_consistency() {
  
  // @@protoc_insertion_point(field_mutable:dapr.StateOptions.consistency)
  return consistency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StateOptions::release_consistency() {
  // @@protoc_insertion_point(field_release:dapr.StateOptions.consistency)
  
  return consistency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateOptions::set_allocated_consistency(::std::string* consistency) {
  if (consistency != NULL) {
    
  } else {
    
  }
  consistency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), consistency);
  // @@protoc_insertion_point(field_set_allocated:dapr.StateOptions.consistency)
}

// optional .dapr.RetryPolicy retryPolicy = 3;
bool StateOptions::has_retrypolicy() const {
  return !_is_default_instance_ && retrypolicy_ != NULL;
}
void StateOptions::clear_retrypolicy() {
  if (GetArenaNoVirtual() == NULL && retrypolicy_ != NULL) delete retrypolicy_;
  retrypolicy_ = NULL;
}
const ::dapr::RetryPolicy& StateOptions::retrypolicy() const {
  // @@protoc_insertion_point(field_get:dapr.StateOptions.retryPolicy)
  return retrypolicy_ != NULL ? *retrypolicy_ : *default_instance_->retrypolicy_;
}
::dapr::RetryPolicy* StateOptions::mutable_retrypolicy() {
  
  if (retrypolicy_ == NULL) {
    retrypolicy_ = new ::dapr::RetryPolicy;
  }
  // @@protoc_insertion_point(field_mutable:dapr.StateOptions.retryPolicy)
  return retrypolicy_;
}
::dapr::RetryPolicy* StateOptions::release_retrypolicy() {
  // @@protoc_insertion_point(field_release:dapr.StateOptions.retryPolicy)
  
  ::dapr::RetryPolicy* temp = retrypolicy_;
  retrypolicy_ = NULL;
  return temp;
}
void StateOptions::set_allocated_retrypolicy(::dapr::RetryPolicy* retrypolicy) {
  delete retrypolicy_;
  retrypolicy_ = retrypolicy;
  if (retrypolicy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.StateOptions.retryPolicy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetryPolicy::kThresholdFieldNumber;
const int RetryPolicy::kPatternFieldNumber;
const int RetryPolicy::kIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetryPolicy::RetryPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.RetryPolicy)
}

void RetryPolicy::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  interval_ = const_cast< ::google::protobuf::Duration*>(&::google::protobuf::Duration::default_instance());
}

RetryPolicy::RetryPolicy(const RetryPolicy& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.RetryPolicy)
}

void RetryPolicy::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  threshold_ = 0;
  pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interval_ = NULL;
}

RetryPolicy::~RetryPolicy() {
  // @@protoc_insertion_point(destructor:dapr.RetryPolicy)
  SharedDtor();
}

void RetryPolicy::SharedDtor() {
  pattern_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete interval_;
  }
}

void RetryPolicy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetryPolicy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetryPolicy_descriptor_;
}

const RetryPolicy& RetryPolicy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

RetryPolicy* RetryPolicy::default_instance_ = NULL;

RetryPolicy* RetryPolicy::New(::google::protobuf::Arena* arena) const {
  RetryPolicy* n = new RetryPolicy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetryPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.RetryPolicy)
  threshold_ = 0;
  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) delete interval_;
  interval_ = NULL;
}

bool RetryPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.RetryPolicy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 threshold = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pattern;
        break;
      }

      // optional string pattern = 2;
      case 2: {
        if (tag == 18) {
         parse_pattern:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pattern()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pattern().data(), this->pattern().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.RetryPolicy.pattern"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_interval;
        break;
      }

      // optional .google.protobuf.Duration interval = 3;
      case 3: {
        if (tag == 26) {
         parse_interval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.RetryPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.RetryPolicy)
  return false;
#undef DO_
}

void RetryPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.RetryPolicy)
  // optional int32 threshold = 1;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->threshold(), output);
  }

  // optional string pattern = 2;
  if (this->pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern().data(), this->pattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.RetryPolicy.pattern");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pattern(), output);
  }

  // optional .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->interval_, output);
  }

  // @@protoc_insertion_point(serialize_end:dapr.RetryPolicy)
}

::google::protobuf::uint8* RetryPolicy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.RetryPolicy)
  // optional int32 threshold = 1;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->threshold(), target);
  }

  // optional string pattern = 2;
  if (this->pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern().data(), this->pattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.RetryPolicy.pattern");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pattern(), target);
  }

  // optional .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->interval_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.RetryPolicy)
  return target;
}

int RetryPolicy::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.RetryPolicy)
  int total_size = 0;

  // optional int32 threshold = 1;
  if (this->threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->threshold());
  }

  // optional string pattern = 2;
  if (this->pattern().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pattern());
  }

  // optional .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->interval_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetryPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.RetryPolicy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RetryPolicy* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RetryPolicy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.RetryPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.RetryPolicy)
    MergeFrom(*source);
  }
}

void RetryPolicy::MergeFrom(const RetryPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.RetryPolicy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
  if (from.pattern().size() > 0) {

    pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pattern_);
  }
  if (from.has_interval()) {
    mutable_interval()->::google::protobuf::Duration::MergeFrom(from.interval());
  }
}

void RetryPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.RetryPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetryPolicy::CopyFrom(const RetryPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.RetryPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetryPolicy::IsInitialized() const {

  return true;
}

void RetryPolicy::Swap(RetryPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetryPolicy::InternalSwap(RetryPolicy* other) {
  std::swap(threshold_, other->threshold_);
  pattern_.Swap(&other->pattern_);
  std::swap(interval_, other->interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetryPolicy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetryPolicy_descriptor_;
  metadata.reflection = RetryPolicy_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RetryPolicy

// optional int32 threshold = 1;
void RetryPolicy::clear_threshold() {
  threshold_ = 0;
}
 ::google::protobuf::int32 RetryPolicy::threshold() const {
  // @@protoc_insertion_point(field_get:dapr.RetryPolicy.threshold)
  return threshold_;
}
 void RetryPolicy::set_threshold(::google::protobuf::int32 value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:dapr.RetryPolicy.threshold)
}

// optional string pattern = 2;
void RetryPolicy::clear_pattern() {
  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RetryPolicy::pattern() const {
  // @@protoc_insertion_point(field_get:dapr.RetryPolicy.pattern)
  return pattern_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RetryPolicy::set_pattern(const ::std::string& value) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.RetryPolicy.pattern)
}
 void RetryPolicy::set_pattern(const char* value) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.RetryPolicy.pattern)
}
 void RetryPolicy::set_pattern(const char* value, size_t size) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.RetryPolicy.pattern)
}
 ::std::string* RetryPolicy::mutable_pattern() {
  
  // @@protoc_insertion_point(field_mutable:dapr.RetryPolicy.pattern)
  return pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RetryPolicy::release_pattern() {
  // @@protoc_insertion_point(field_release:dapr.RetryPolicy.pattern)
  
  return pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RetryPolicy::set_allocated_pattern(::std::string* pattern) {
  if (pattern != NULL) {
    
  } else {
    
  }
  pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pattern);
  // @@protoc_insertion_point(field_set_allocated:dapr.RetryPolicy.pattern)
}

// optional .google.protobuf.Duration interval = 3;
bool RetryPolicy::has_interval() const {
  return !_is_default_instance_ && interval_ != NULL;
}
void RetryPolicy::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) delete interval_;
  interval_ = NULL;
}
const ::google::protobuf::Duration& RetryPolicy::interval() const {
  // @@protoc_insertion_point(field_get:dapr.RetryPolicy.interval)
  return interval_ != NULL ? *interval_ : *default_instance_->interval_;
}
::google::protobuf::Duration* RetryPolicy::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:dapr.RetryPolicy.interval)
  return interval_;
}
::google::protobuf::Duration* RetryPolicy::release_interval() {
  // @@protoc_insertion_point(field_release:dapr.RetryPolicy.interval)
  
  ::google::protobuf::Duration* temp = interval_;
  interval_ = NULL;
  return temp;
}
void RetryPolicy::set_allocated_interval(::google::protobuf::Duration* interval) {
  delete interval_;
  interval_ = interval;
  if (interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.RetryPolicy.interval)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateRequest::kKeyFieldNumber;
const int StateRequest::kValueFieldNumber;
const int StateRequest::kEtagFieldNumber;
const int StateRequest::kMetadataFieldNumber;
const int StateRequest::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateRequest::StateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.StateRequest)
}

void StateRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  value_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
  options_ = const_cast< ::dapr::StateRequestOptions*>(&::dapr::StateRequestOptions::default_instance());
}

StateRequest::StateRequest(const StateRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.StateRequest)
}

void StateRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
  etag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  metadata_.SetEntryDescriptor(
      &::dapr::StateRequest_MetadataEntry_descriptor_);
  options_ = NULL;
}

StateRequest::~StateRequest() {
  // @@protoc_insertion_point(destructor:dapr.StateRequest)
  SharedDtor();
}

void StateRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  etag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete value_;
    delete options_;
  }
}

void StateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StateRequest_descriptor_;
}

const StateRequest& StateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

StateRequest* StateRequest::default_instance_ = NULL;

StateRequest* StateRequest::New(::google::protobuf::Arena* arena) const {
  StateRequest* n = new StateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.StateRequest)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
  metadata_.Clear();
}

bool StateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.StateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRequest.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional .google.protobuf.Any value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_etag;
        break;
      }

      // optional string etag = 3;
      case 3: {
        if (tag == 26) {
         parse_etag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_etag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->etag().data(), this->etag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRequest.etag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_metadata;
        break;
      }

      // map<string, string> metadata = 4;
      case 4: {
        if (tag == 34) {
         parse_metadata:
          DO_(input->IncrementRecursionDepth());
         parse_loop_metadata:
          StateRequest_MetadataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRequest.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRequest.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_options;
        break;
      }

      // optional .dapr.StateRequestOptions options = 5;
      case 5: {
        if (tag == 42) {
         parse_options:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.StateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.StateRequest)
  return false;
#undef DO_
}

void StateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.StateRequest)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional .google.protobuf.Any value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  // optional string etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), this->etag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequest.etag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->etag(), output);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.StateRequest.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.StateRequest.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<StateRequest_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<StateRequest_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .dapr.StateRequestOptions options = 5;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->options_, output);
  }

  // @@protoc_insertion_point(serialize_end:dapr.StateRequest)
}

::google::protobuf::uint8* StateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.StateRequest)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional .google.protobuf.Any value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_, false, target);
  }

  // optional string etag = 3;
  if (this->etag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->etag().data(), this->etag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequest.etag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->etag(), target);
  }

  // map<string, string> metadata = 4;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.StateRequest.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "dapr.StateRequest.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<StateRequest_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<StateRequest_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional .dapr.StateRequestOptions options = 5;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->options_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.StateRequest)
  return target;
}

int StateRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.StateRequest)
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional .google.protobuf.Any value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  // optional string etag = 3;
  if (this->etag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->etag());
  }

  // optional .dapr.StateRequestOptions options = 5;
  if (this->has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->options_);
  }

  // map<string, string> metadata = 4;
  total_size += 1 * this->metadata_size();
  {
    ::google::protobuf::scoped_ptr<StateRequest_MetadataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.StateRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StateRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.StateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.StateRequest)
    MergeFrom(*source);
  }
}

void StateRequest::MergeFrom(const StateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.StateRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  metadata_.MergeFrom(from.metadata_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_value()) {
    mutable_value()->::google::protobuf::Any::MergeFrom(from.value());
  }
  if (from.etag().size() > 0) {

    etag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.etag_);
  }
  if (from.has_options()) {
    mutable_options()->::dapr::StateRequestOptions::MergeFrom(from.options());
  }
}

void StateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.StateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateRequest::CopyFrom(const StateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.StateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateRequest::IsInitialized() const {

  return true;
}

void StateRequest::Swap(StateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateRequest::InternalSwap(StateRequest* other) {
  key_.Swap(&other->key_);
  std::swap(value_, other->value_);
  etag_.Swap(&other->etag_);
  metadata_.Swap(&other->metadata_);
  std::swap(options_, other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StateRequest_descriptor_;
  metadata.reflection = StateRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StateRequest

// optional string key = 1;
void StateRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StateRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.StateRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.StateRequest.key)
}
 void StateRequest::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.StateRequest.key)
}
 void StateRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.StateRequest.key)
}
 ::std::string* StateRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.StateRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StateRequest::release_key() {
  // @@protoc_insertion_point(field_release:dapr.StateRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.StateRequest.key)
}

// optional .google.protobuf.Any value = 2;
bool StateRequest::has_value() const {
  return !_is_default_instance_ && value_ != NULL;
}
void StateRequest::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::google::protobuf::Any& StateRequest::value() const {
  // @@protoc_insertion_point(field_get:dapr.StateRequest.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
::google::protobuf::Any* StateRequest::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:dapr.StateRequest.value)
  return value_;
}
::google::protobuf::Any* StateRequest::release_value() {
  // @@protoc_insertion_point(field_release:dapr.StateRequest.value)
  
  ::google::protobuf::Any* temp = value_;
  value_ = NULL;
  return temp;
}
void StateRequest::set_allocated_value(::google::protobuf::Any* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.StateRequest.value)
}

// optional string etag = 3;
void StateRequest::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StateRequest::etag() const {
  // @@protoc_insertion_point(field_get:dapr.StateRequest.etag)
  return etag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateRequest::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.StateRequest.etag)
}
 void StateRequest::set_etag(const char* value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.StateRequest.etag)
}
 void StateRequest::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.StateRequest.etag)
}
 ::std::string* StateRequest::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.StateRequest.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StateRequest::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.StateRequest.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateRequest::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.StateRequest.etag)
}

// map<string, string> metadata = 4;
int StateRequest::metadata_size() const {
  return metadata_.size();
}
void StateRequest::clear_metadata() {
  metadata_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
StateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.StateRequest.metadata)
  return metadata_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
StateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.StateRequest.metadata)
  return metadata_.MutableMap();
}

// optional .dapr.StateRequestOptions options = 5;
bool StateRequest::has_options() const {
  return !_is_default_instance_ && options_ != NULL;
}
void StateRequest::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) delete options_;
  options_ = NULL;
}
const ::dapr::StateRequestOptions& StateRequest::options() const {
  // @@protoc_insertion_point(field_get:dapr.StateRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
::dapr::StateRequestOptions* StateRequest::mutable_options() {
  
  if (options_ == NULL) {
    options_ = new ::dapr::StateRequestOptions;
  }
  // @@protoc_insertion_point(field_mutable:dapr.StateRequest.options)
  return options_;
}
::dapr::StateRequestOptions* StateRequest::release_options() {
  // @@protoc_insertion_point(field_release:dapr.StateRequest.options)
  
  ::dapr::StateRequestOptions* temp = options_;
  options_ = NULL;
  return temp;
}
void StateRequest::set_allocated_options(::dapr::StateRequestOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.StateRequest.options)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateRequestOptions::kConcurrencyFieldNumber;
const int StateRequestOptions::kConsistencyFieldNumber;
const int StateRequestOptions::kRetryPolicyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateRequestOptions::StateRequestOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.StateRequestOptions)
}

void StateRequestOptions::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  retrypolicy_ = const_cast< ::dapr::StateRetryPolicy*>(&::dapr::StateRetryPolicy::default_instance());
}

StateRequestOptions::StateRequestOptions(const StateRequestOptions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.StateRequestOptions)
}

void StateRequestOptions::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  concurrency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retrypolicy_ = NULL;
}

StateRequestOptions::~StateRequestOptions() {
  // @@protoc_insertion_point(destructor:dapr.StateRequestOptions)
  SharedDtor();
}

void StateRequestOptions::SharedDtor() {
  concurrency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete retrypolicy_;
  }
}

void StateRequestOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateRequestOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StateRequestOptions_descriptor_;
}

const StateRequestOptions& StateRequestOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

StateRequestOptions* StateRequestOptions::default_instance_ = NULL;

StateRequestOptions* StateRequestOptions::New(::google::protobuf::Arena* arena) const {
  StateRequestOptions* n = new StateRequestOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StateRequestOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.StateRequestOptions)
  concurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && retrypolicy_ != NULL) delete retrypolicy_;
  retrypolicy_ = NULL;
}

bool StateRequestOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.StateRequestOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string concurrency = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_concurrency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->concurrency().data(), this->concurrency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRequestOptions.concurrency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_consistency;
        break;
      }

      // optional string consistency = 2;
      case 2: {
        if (tag == 18) {
         parse_consistency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_consistency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->consistency().data(), this->consistency().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRequestOptions.consistency"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_retryPolicy;
        break;
      }

      // optional .dapr.StateRetryPolicy retryPolicy = 3;
      case 3: {
        if (tag == 26) {
         parse_retryPolicy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_retrypolicy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.StateRequestOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.StateRequestOptions)
  return false;
#undef DO_
}

void StateRequestOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.StateRequestOptions)
  // optional string concurrency = 1;
  if (this->concurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concurrency().data(), this->concurrency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequestOptions.concurrency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->concurrency(), output);
  }

  // optional string consistency = 2;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), this->consistency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequestOptions.consistency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->consistency(), output);
  }

  // optional .dapr.StateRetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->retrypolicy_, output);
  }

  // @@protoc_insertion_point(serialize_end:dapr.StateRequestOptions)
}

::google::protobuf::uint8* StateRequestOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.StateRequestOptions)
  // optional string concurrency = 1;
  if (this->concurrency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->concurrency().data(), this->concurrency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequestOptions.concurrency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->concurrency(), target);
  }

  // optional string consistency = 2;
  if (this->consistency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consistency().data(), this->consistency().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRequestOptions.consistency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->consistency(), target);
  }

  // optional .dapr.StateRetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->retrypolicy_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.StateRequestOptions)
  return target;
}

int StateRequestOptions::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.StateRequestOptions)
  int total_size = 0;

  // optional string concurrency = 1;
  if (this->concurrency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->concurrency());
  }

  // optional string consistency = 2;
  if (this->consistency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->consistency());
  }

  // optional .dapr.StateRetryPolicy retryPolicy = 3;
  if (this->has_retrypolicy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->retrypolicy_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateRequestOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.StateRequestOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StateRequestOptions* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StateRequestOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.StateRequestOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.StateRequestOptions)
    MergeFrom(*source);
  }
}

void StateRequestOptions::MergeFrom(const StateRequestOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.StateRequestOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.concurrency().size() > 0) {

    concurrency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.concurrency_);
  }
  if (from.consistency().size() > 0) {

    consistency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consistency_);
  }
  if (from.has_retrypolicy()) {
    mutable_retrypolicy()->::dapr::StateRetryPolicy::MergeFrom(from.retrypolicy());
  }
}

void StateRequestOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.StateRequestOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateRequestOptions::CopyFrom(const StateRequestOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.StateRequestOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateRequestOptions::IsInitialized() const {

  return true;
}

void StateRequestOptions::Swap(StateRequestOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateRequestOptions::InternalSwap(StateRequestOptions* other) {
  concurrency_.Swap(&other->concurrency_);
  consistency_.Swap(&other->consistency_);
  std::swap(retrypolicy_, other->retrypolicy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateRequestOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StateRequestOptions_descriptor_;
  metadata.reflection = StateRequestOptions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StateRequestOptions

// optional string concurrency = 1;
void StateRequestOptions::clear_concurrency() {
  concurrency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StateRequestOptions::concurrency() const {
  // @@protoc_insertion_point(field_get:dapr.StateRequestOptions.concurrency)
  return concurrency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateRequestOptions::set_concurrency(const ::std::string& value) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.StateRequestOptions.concurrency)
}
 void StateRequestOptions::set_concurrency(const char* value) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.StateRequestOptions.concurrency)
}
 void StateRequestOptions::set_concurrency(const char* value, size_t size) {
  
  concurrency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.StateRequestOptions.concurrency)
}
 ::std::string* StateRequestOptions::mutable_concurrency() {
  
  // @@protoc_insertion_point(field_mutable:dapr.StateRequestOptions.concurrency)
  return concurrency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StateRequestOptions::release_concurrency() {
  // @@protoc_insertion_point(field_release:dapr.StateRequestOptions.concurrency)
  
  return concurrency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateRequestOptions::set_allocated_concurrency(::std::string* concurrency) {
  if (concurrency != NULL) {
    
  } else {
    
  }
  concurrency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), concurrency);
  // @@protoc_insertion_point(field_set_allocated:dapr.StateRequestOptions.concurrency)
}

// optional string consistency = 2;
void StateRequestOptions::clear_consistency() {
  consistency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StateRequestOptions::consistency() const {
  // @@protoc_insertion_point(field_get:dapr.StateRequestOptions.consistency)
  return consistency_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateRequestOptions::set_consistency(const ::std::string& value) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.StateRequestOptions.consistency)
}
 void StateRequestOptions::set_consistency(const char* value) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.StateRequestOptions.consistency)
}
 void StateRequestOptions::set_consistency(const char* value, size_t size) {
  
  consistency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.StateRequestOptions.consistency)
}
 ::std::string* StateRequestOptions::mutable_consistency() {
  
  // @@protoc_insertion_point(field_mutable:dapr.StateRequestOptions.consistency)
  return consistency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StateRequestOptions::release_consistency() {
  // @@protoc_insertion_point(field_release:dapr.StateRequestOptions.consistency)
  
  return consistency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateRequestOptions::set_allocated_consistency(::std::string* consistency) {
  if (consistency != NULL) {
    
  } else {
    
  }
  consistency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), consistency);
  // @@protoc_insertion_point(field_set_allocated:dapr.StateRequestOptions.consistency)
}

// optional .dapr.StateRetryPolicy retryPolicy = 3;
bool StateRequestOptions::has_retrypolicy() const {
  return !_is_default_instance_ && retrypolicy_ != NULL;
}
void StateRequestOptions::clear_retrypolicy() {
  if (GetArenaNoVirtual() == NULL && retrypolicy_ != NULL) delete retrypolicy_;
  retrypolicy_ = NULL;
}
const ::dapr::StateRetryPolicy& StateRequestOptions::retrypolicy() const {
  // @@protoc_insertion_point(field_get:dapr.StateRequestOptions.retryPolicy)
  return retrypolicy_ != NULL ? *retrypolicy_ : *default_instance_->retrypolicy_;
}
::dapr::StateRetryPolicy* StateRequestOptions::mutable_retrypolicy() {
  
  if (retrypolicy_ == NULL) {
    retrypolicy_ = new ::dapr::StateRetryPolicy;
  }
  // @@protoc_insertion_point(field_mutable:dapr.StateRequestOptions.retryPolicy)
  return retrypolicy_;
}
::dapr::StateRetryPolicy* StateRequestOptions::release_retrypolicy() {
  // @@protoc_insertion_point(field_release:dapr.StateRequestOptions.retryPolicy)
  
  ::dapr::StateRetryPolicy* temp = retrypolicy_;
  retrypolicy_ = NULL;
  return temp;
}
void StateRequestOptions::set_allocated_retrypolicy(::dapr::StateRetryPolicy* retrypolicy) {
  delete retrypolicy_;
  retrypolicy_ = retrypolicy;
  if (retrypolicy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.StateRequestOptions.retryPolicy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateRetryPolicy::kThresholdFieldNumber;
const int StateRetryPolicy::kPatternFieldNumber;
const int StateRetryPolicy::kIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateRetryPolicy::StateRetryPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapr.StateRetryPolicy)
}

void StateRetryPolicy::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  interval_ = const_cast< ::google::protobuf::Duration*>(&::google::protobuf::Duration::default_instance());
}

StateRetryPolicy::StateRetryPolicy(const StateRetryPolicy& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dapr.StateRetryPolicy)
}

void StateRetryPolicy::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  threshold_ = 0;
  pattern_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interval_ = NULL;
}

StateRetryPolicy::~StateRetryPolicy() {
  // @@protoc_insertion_point(destructor:dapr.StateRetryPolicy)
  SharedDtor();
}

void StateRetryPolicy::SharedDtor() {
  pattern_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete interval_;
  }
}

void StateRetryPolicy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateRetryPolicy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StateRetryPolicy_descriptor_;
}

const StateRetryPolicy& StateRetryPolicy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dapr_2eproto();
  return *default_instance_;
}

StateRetryPolicy* StateRetryPolicy::default_instance_ = NULL;

StateRetryPolicy* StateRetryPolicy::New(::google::protobuf::Arena* arena) const {
  StateRetryPolicy* n = new StateRetryPolicy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StateRetryPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:dapr.StateRetryPolicy)
  threshold_ = 0;
  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) delete interval_;
  interval_ = NULL;
}

bool StateRetryPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dapr.StateRetryPolicy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 threshold = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pattern;
        break;
      }

      // optional string pattern = 2;
      case 2: {
        if (tag == 18) {
         parse_pattern:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pattern()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pattern().data(), this->pattern().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapr.StateRetryPolicy.pattern"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_interval;
        break;
      }

      // optional .google.protobuf.Duration interval = 3;
      case 3: {
        if (tag == 26) {
         parse_interval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapr.StateRetryPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapr.StateRetryPolicy)
  return false;
#undef DO_
}

void StateRetryPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapr.StateRetryPolicy)
  // optional int32 threshold = 1;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->threshold(), output);
  }

  // optional string pattern = 2;
  if (this->pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern().data(), this->pattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRetryPolicy.pattern");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pattern(), output);
  }

  // optional .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->interval_, output);
  }

  // @@protoc_insertion_point(serialize_end:dapr.StateRetryPolicy)
}

::google::protobuf::uint8* StateRetryPolicy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dapr.StateRetryPolicy)
  // optional int32 threshold = 1;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->threshold(), target);
  }

  // optional string pattern = 2;
  if (this->pattern().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pattern().data(), this->pattern().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapr.StateRetryPolicy.pattern");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pattern(), target);
  }

  // optional .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->interval_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:dapr.StateRetryPolicy)
  return target;
}

int StateRetryPolicy::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dapr.StateRetryPolicy)
  int total_size = 0;

  // optional int32 threshold = 1;
  if (this->threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->threshold());
  }

  // optional string pattern = 2;
  if (this->pattern().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pattern());
  }

  // optional .google.protobuf.Duration interval = 3;
  if (this->has_interval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->interval_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateRetryPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dapr.StateRetryPolicy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StateRetryPolicy* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StateRetryPolicy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dapr.StateRetryPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dapr.StateRetryPolicy)
    MergeFrom(*source);
  }
}

void StateRetryPolicy::MergeFrom(const StateRetryPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapr.StateRetryPolicy)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
  if (from.pattern().size() > 0) {

    pattern_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pattern_);
  }
  if (from.has_interval()) {
    mutable_interval()->::google::protobuf::Duration::MergeFrom(from.interval());
  }
}

void StateRetryPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dapr.StateRetryPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateRetryPolicy::CopyFrom(const StateRetryPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapr.StateRetryPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateRetryPolicy::IsInitialized() const {

  return true;
}

void StateRetryPolicy::Swap(StateRetryPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateRetryPolicy::InternalSwap(StateRetryPolicy* other) {
  std::swap(threshold_, other->threshold_);
  pattern_.Swap(&other->pattern_);
  std::swap(interval_, other->interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateRetryPolicy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StateRetryPolicy_descriptor_;
  metadata.reflection = StateRetryPolicy_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StateRetryPolicy

<<<<<<< HEAD
// optional int32 threshold = 1;
void StateRetryPolicy::clear_threshold() {
  threshold_ = 0;
=======
// @@protoc_insertion_point(namespace_scope)
}  // namespace dapr
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::InvokeServiceResponseEnvelope_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::InvokeServiceResponseEnvelope* Arena::CreateMaybeMessage< ::dapr::InvokeServiceResponseEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::InvokeServiceResponseEnvelope >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::DeleteStateEnvelope* Arena::CreateMaybeMessage< ::dapr::DeleteStateEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::DeleteStateEnvelope >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::SaveStateEnvelope* Arena::CreateMaybeMessage< ::dapr::SaveStateEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::SaveStateEnvelope >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::GetStateEnvelope* Arena::CreateMaybeMessage< ::dapr::GetStateEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::GetStateEnvelope >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::GetStateResponseEnvelope* Arena::CreateMaybeMessage< ::dapr::GetStateResponseEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::GetStateResponseEnvelope >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::GetSecretEnvelope_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::GetSecretEnvelope_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::GetSecretEnvelope_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::GetSecretEnvelope* Arena::CreateMaybeMessage< ::dapr::GetSecretEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::GetSecretEnvelope >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::GetSecretResponseEnvelope_DataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::GetSecretResponseEnvelope_DataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::GetSecretResponseEnvelope_DataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::GetSecretResponseEnvelope* Arena::CreateMaybeMessage< ::dapr::GetSecretResponseEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::GetSecretResponseEnvelope >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::InvokeBindingEnvelope_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::InvokeBindingEnvelope* Arena::CreateMaybeMessage< ::dapr::InvokeBindingEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::InvokeBindingEnvelope >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::InvokeServiceEnvelope_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::InvokeServiceEnvelope* Arena::CreateMaybeMessage< ::dapr::InvokeServiceEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::InvokeServiceEnvelope >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::PublishEventEnvelope* Arena::CreateMaybeMessage< ::dapr::PublishEventEnvelope >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::PublishEventEnvelope >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::State_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::State_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::State_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::State* Arena::CreateMaybeMessage< ::dapr::State >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::State >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::StateOptions* Arena::CreateMaybeMessage< ::dapr::StateOptions >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::StateOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::RetryPolicy* Arena::CreateMaybeMessage< ::dapr::RetryPolicy >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::RetryPolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::dapr::StateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::dapr::StateRequest_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::dapr::StateRequest_MetadataEntry_DoNotUse >(arena);
>>>>>>> master
}
 ::google::protobuf::int32 StateRetryPolicy::threshold() const {
  // @@protoc_insertion_point(field_get:dapr.StateRetryPolicy.threshold)
  return threshold_;
}
 void StateRetryPolicy::set_threshold(::google::protobuf::int32 value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:dapr.StateRetryPolicy.threshold)
}

// optional string pattern = 2;
void StateRetryPolicy::clear_pattern() {
  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StateRetryPolicy::pattern() const {
  // @@protoc_insertion_point(field_get:dapr.StateRetryPolicy.pattern)
  return pattern_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateRetryPolicy::set_pattern(const ::std::string& value) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.StateRetryPolicy.pattern)
}
 void StateRetryPolicy::set_pattern(const char* value) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.StateRetryPolicy.pattern)
}
 void StateRetryPolicy::set_pattern(const char* value, size_t size) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.StateRetryPolicy.pattern)
}
 ::std::string* StateRetryPolicy::mutable_pattern() {
  
  // @@protoc_insertion_point(field_mutable:dapr.StateRetryPolicy.pattern)
  return pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StateRetryPolicy::release_pattern() {
  // @@protoc_insertion_point(field_release:dapr.StateRetryPolicy.pattern)
  
  return pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StateRetryPolicy::set_allocated_pattern(::std::string* pattern) {
  if (pattern != NULL) {
    
  } else {
    
  }
  pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pattern);
  // @@protoc_insertion_point(field_set_allocated:dapr.StateRetryPolicy.pattern)
}

// optional .google.protobuf.Duration interval = 3;
bool StateRetryPolicy::has_interval() const {
  return !_is_default_instance_ && interval_ != NULL;
}
void StateRetryPolicy::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) delete interval_;
  interval_ = NULL;
}
const ::google::protobuf::Duration& StateRetryPolicy::interval() const {
  // @@protoc_insertion_point(field_get:dapr.StateRetryPolicy.interval)
  return interval_ != NULL ? *interval_ : *default_instance_->interval_;
}
::google::protobuf::Duration* StateRetryPolicy::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:dapr.StateRetryPolicy.interval)
  return interval_;
}
::google::protobuf::Duration* StateRetryPolicy::release_interval() {
  // @@protoc_insertion_point(field_release:dapr.StateRetryPolicy.interval)
  
  ::google::protobuf::Duration* temp = interval_;
  interval_ = NULL;
  return temp;
}
void StateRetryPolicy::set_allocated_interval(::google::protobuf::Duration* interval) {
  delete interval_;
  interval_ = interval;
  if (interval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:dapr.StateRetryPolicy.interval)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dapr

// @@protoc_insertion_point(global_scope)
