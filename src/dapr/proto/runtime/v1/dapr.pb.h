// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dapr/proto/runtime/v1/dapr.proto

#ifndef PROTOBUF_INCLUDED_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto
#define PROTOBUF_INCLUDED_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include "dapr/proto/common/v1/common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto 

namespace protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[111];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto
namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {
class ActiveActorsCount;
class ActiveActorsCountDefaultTypeInternal;
extern ActiveActorsCountDefaultTypeInternal _ActiveActorsCount_default_instance_;
class BulkPublishRequest;
class BulkPublishRequestDefaultTypeInternal;
extern BulkPublishRequestDefaultTypeInternal _BulkPublishRequest_default_instance_;
class BulkPublishRequestEntry;
class BulkPublishRequestEntryDefaultTypeInternal;
extern BulkPublishRequestEntryDefaultTypeInternal _BulkPublishRequestEntry_default_instance_;
class BulkPublishRequestEntry_MetadataEntry_DoNotUse;
class BulkPublishRequestEntry_MetadataEntry_DoNotUseDefaultTypeInternal;
extern BulkPublishRequestEntry_MetadataEntry_DoNotUseDefaultTypeInternal _BulkPublishRequestEntry_MetadataEntry_DoNotUse_default_instance_;
class BulkPublishRequest_MetadataEntry_DoNotUse;
class BulkPublishRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern BulkPublishRequest_MetadataEntry_DoNotUseDefaultTypeInternal _BulkPublishRequest_MetadataEntry_DoNotUse_default_instance_;
class BulkPublishResponse;
class BulkPublishResponseDefaultTypeInternal;
extern BulkPublishResponseDefaultTypeInternal _BulkPublishResponse_default_instance_;
class BulkPublishResponseFailedEntry;
class BulkPublishResponseFailedEntryDefaultTypeInternal;
extern BulkPublishResponseFailedEntryDefaultTypeInternal _BulkPublishResponseFailedEntry_default_instance_;
class BulkStateItem;
class BulkStateItemDefaultTypeInternal;
extern BulkStateItemDefaultTypeInternal _BulkStateItem_default_instance_;
class BulkStateItem_MetadataEntry_DoNotUse;
class BulkStateItem_MetadataEntry_DoNotUseDefaultTypeInternal;
extern BulkStateItem_MetadataEntry_DoNotUseDefaultTypeInternal _BulkStateItem_MetadataEntry_DoNotUse_default_instance_;
class DecryptRequest;
class DecryptRequestDefaultTypeInternal;
extern DecryptRequestDefaultTypeInternal _DecryptRequest_default_instance_;
class DecryptRequestOptions;
class DecryptRequestOptionsDefaultTypeInternal;
extern DecryptRequestOptionsDefaultTypeInternal _DecryptRequestOptions_default_instance_;
class DecryptResponse;
class DecryptResponseDefaultTypeInternal;
extern DecryptResponseDefaultTypeInternal _DecryptResponse_default_instance_;
class DeleteBulkStateRequest;
class DeleteBulkStateRequestDefaultTypeInternal;
extern DeleteBulkStateRequestDefaultTypeInternal _DeleteBulkStateRequest_default_instance_;
class DeleteStateRequest;
class DeleteStateRequestDefaultTypeInternal;
extern DeleteStateRequestDefaultTypeInternal _DeleteStateRequest_default_instance_;
class DeleteStateRequest_MetadataEntry_DoNotUse;
class DeleteStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern DeleteStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _DeleteStateRequest_MetadataEntry_DoNotUse_default_instance_;
class EncryptRequest;
class EncryptRequestDefaultTypeInternal;
extern EncryptRequestDefaultTypeInternal _EncryptRequest_default_instance_;
class EncryptRequestOptions;
class EncryptRequestOptionsDefaultTypeInternal;
extern EncryptRequestOptionsDefaultTypeInternal _EncryptRequestOptions_default_instance_;
class EncryptResponse;
class EncryptResponseDefaultTypeInternal;
extern EncryptResponseDefaultTypeInternal _EncryptResponse_default_instance_;
class ExecuteActorStateTransactionRequest;
class ExecuteActorStateTransactionRequestDefaultTypeInternal;
extern ExecuteActorStateTransactionRequestDefaultTypeInternal _ExecuteActorStateTransactionRequest_default_instance_;
class ExecuteStateTransactionRequest;
class ExecuteStateTransactionRequestDefaultTypeInternal;
extern ExecuteStateTransactionRequestDefaultTypeInternal _ExecuteStateTransactionRequest_default_instance_;
class ExecuteStateTransactionRequest_MetadataEntry_DoNotUse;
class ExecuteStateTransactionRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern ExecuteStateTransactionRequest_MetadataEntry_DoNotUseDefaultTypeInternal _ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_default_instance_;
class GetActorStateRequest;
class GetActorStateRequestDefaultTypeInternal;
extern GetActorStateRequestDefaultTypeInternal _GetActorStateRequest_default_instance_;
class GetActorStateResponse;
class GetActorStateResponseDefaultTypeInternal;
extern GetActorStateResponseDefaultTypeInternal _GetActorStateResponse_default_instance_;
class GetBulkSecretRequest;
class GetBulkSecretRequestDefaultTypeInternal;
extern GetBulkSecretRequestDefaultTypeInternal _GetBulkSecretRequest_default_instance_;
class GetBulkSecretRequest_MetadataEntry_DoNotUse;
class GetBulkSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetBulkSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetBulkSecretRequest_MetadataEntry_DoNotUse_default_instance_;
class GetBulkSecretResponse;
class GetBulkSecretResponseDefaultTypeInternal;
extern GetBulkSecretResponseDefaultTypeInternal _GetBulkSecretResponse_default_instance_;
class GetBulkSecretResponse_DataEntry_DoNotUse;
class GetBulkSecretResponse_DataEntry_DoNotUseDefaultTypeInternal;
extern GetBulkSecretResponse_DataEntry_DoNotUseDefaultTypeInternal _GetBulkSecretResponse_DataEntry_DoNotUse_default_instance_;
class GetBulkStateRequest;
class GetBulkStateRequestDefaultTypeInternal;
extern GetBulkStateRequestDefaultTypeInternal _GetBulkStateRequest_default_instance_;
class GetBulkStateRequest_MetadataEntry_DoNotUse;
class GetBulkStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetBulkStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetBulkStateRequest_MetadataEntry_DoNotUse_default_instance_;
class GetBulkStateResponse;
class GetBulkStateResponseDefaultTypeInternal;
extern GetBulkStateResponseDefaultTypeInternal _GetBulkStateResponse_default_instance_;
class GetConfigurationRequest;
class GetConfigurationRequestDefaultTypeInternal;
extern GetConfigurationRequestDefaultTypeInternal _GetConfigurationRequest_default_instance_;
class GetConfigurationRequest_MetadataEntry_DoNotUse;
class GetConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetConfigurationRequest_MetadataEntry_DoNotUse_default_instance_;
class GetConfigurationResponse;
class GetConfigurationResponseDefaultTypeInternal;
extern GetConfigurationResponseDefaultTypeInternal _GetConfigurationResponse_default_instance_;
class GetConfigurationResponse_ItemsEntry_DoNotUse;
class GetConfigurationResponse_ItemsEntry_DoNotUseDefaultTypeInternal;
extern GetConfigurationResponse_ItemsEntry_DoNotUseDefaultTypeInternal _GetConfigurationResponse_ItemsEntry_DoNotUse_default_instance_;
class GetMetadataResponse;
class GetMetadataResponseDefaultTypeInternal;
extern GetMetadataResponseDefaultTypeInternal _GetMetadataResponse_default_instance_;
class GetMetadataResponse_ExtendedMetadataEntry_DoNotUse;
class GetMetadataResponse_ExtendedMetadataEntry_DoNotUseDefaultTypeInternal;
extern GetMetadataResponse_ExtendedMetadataEntry_DoNotUseDefaultTypeInternal _GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_default_instance_;
class GetSecretRequest;
class GetSecretRequestDefaultTypeInternal;
extern GetSecretRequestDefaultTypeInternal _GetSecretRequest_default_instance_;
class GetSecretRequest_MetadataEntry_DoNotUse;
class GetSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetSecretRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetSecretRequest_MetadataEntry_DoNotUse_default_instance_;
class GetSecretResponse;
class GetSecretResponseDefaultTypeInternal;
extern GetSecretResponseDefaultTypeInternal _GetSecretResponse_default_instance_;
class GetSecretResponse_DataEntry_DoNotUse;
class GetSecretResponse_DataEntry_DoNotUseDefaultTypeInternal;
extern GetSecretResponse_DataEntry_DoNotUseDefaultTypeInternal _GetSecretResponse_DataEntry_DoNotUse_default_instance_;
class GetStateRequest;
class GetStateRequestDefaultTypeInternal;
extern GetStateRequestDefaultTypeInternal _GetStateRequest_default_instance_;
class GetStateRequest_MetadataEntry_DoNotUse;
class GetStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _GetStateRequest_MetadataEntry_DoNotUse_default_instance_;
class GetStateResponse;
class GetStateResponseDefaultTypeInternal;
extern GetStateResponseDefaultTypeInternal _GetStateResponse_default_instance_;
class GetStateResponse_MetadataEntry_DoNotUse;
class GetStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal;
extern GetStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal _GetStateResponse_MetadataEntry_DoNotUse_default_instance_;
class GetWorkflowRequest;
class GetWorkflowRequestDefaultTypeInternal;
extern GetWorkflowRequestDefaultTypeInternal _GetWorkflowRequest_default_instance_;
class GetWorkflowResponse;
class GetWorkflowResponseDefaultTypeInternal;
extern GetWorkflowResponseDefaultTypeInternal _GetWorkflowResponse_default_instance_;
class GetWorkflowResponse_PropertiesEntry_DoNotUse;
class GetWorkflowResponse_PropertiesEntry_DoNotUseDefaultTypeInternal;
extern GetWorkflowResponse_PropertiesEntry_DoNotUseDefaultTypeInternal _GetWorkflowResponse_PropertiesEntry_DoNotUse_default_instance_;
class InvokeActorRequest;
class InvokeActorRequestDefaultTypeInternal;
extern InvokeActorRequestDefaultTypeInternal _InvokeActorRequest_default_instance_;
class InvokeActorRequest_MetadataEntry_DoNotUse;
class InvokeActorRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern InvokeActorRequest_MetadataEntry_DoNotUseDefaultTypeInternal _InvokeActorRequest_MetadataEntry_DoNotUse_default_instance_;
class InvokeActorResponse;
class InvokeActorResponseDefaultTypeInternal;
extern InvokeActorResponseDefaultTypeInternal _InvokeActorResponse_default_instance_;
class InvokeBindingRequest;
class InvokeBindingRequestDefaultTypeInternal;
extern InvokeBindingRequestDefaultTypeInternal _InvokeBindingRequest_default_instance_;
class InvokeBindingRequest_MetadataEntry_DoNotUse;
class InvokeBindingRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern InvokeBindingRequest_MetadataEntry_DoNotUseDefaultTypeInternal _InvokeBindingRequest_MetadataEntry_DoNotUse_default_instance_;
class InvokeBindingResponse;
class InvokeBindingResponseDefaultTypeInternal;
extern InvokeBindingResponseDefaultTypeInternal _InvokeBindingResponse_default_instance_;
class InvokeBindingResponse_MetadataEntry_DoNotUse;
class InvokeBindingResponse_MetadataEntry_DoNotUseDefaultTypeInternal;
extern InvokeBindingResponse_MetadataEntry_DoNotUseDefaultTypeInternal _InvokeBindingResponse_MetadataEntry_DoNotUse_default_instance_;
class InvokeServiceRequest;
class InvokeServiceRequestDefaultTypeInternal;
extern InvokeServiceRequestDefaultTypeInternal _InvokeServiceRequest_default_instance_;
class PauseWorkflowRequest;
class PauseWorkflowRequestDefaultTypeInternal;
extern PauseWorkflowRequestDefaultTypeInternal _PauseWorkflowRequest_default_instance_;
class PublishEventRequest;
class PublishEventRequestDefaultTypeInternal;
extern PublishEventRequestDefaultTypeInternal _PublishEventRequest_default_instance_;
class PublishEventRequest_MetadataEntry_DoNotUse;
class PublishEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern PublishEventRequest_MetadataEntry_DoNotUseDefaultTypeInternal _PublishEventRequest_MetadataEntry_DoNotUse_default_instance_;
class PubsubSubscription;
class PubsubSubscriptionDefaultTypeInternal;
extern PubsubSubscriptionDefaultTypeInternal _PubsubSubscription_default_instance_;
class PubsubSubscriptionRule;
class PubsubSubscriptionRuleDefaultTypeInternal;
extern PubsubSubscriptionRuleDefaultTypeInternal _PubsubSubscriptionRule_default_instance_;
class PubsubSubscriptionRules;
class PubsubSubscriptionRulesDefaultTypeInternal;
extern PubsubSubscriptionRulesDefaultTypeInternal _PubsubSubscriptionRules_default_instance_;
class PubsubSubscription_MetadataEntry_DoNotUse;
class PubsubSubscription_MetadataEntry_DoNotUseDefaultTypeInternal;
extern PubsubSubscription_MetadataEntry_DoNotUseDefaultTypeInternal _PubsubSubscription_MetadataEntry_DoNotUse_default_instance_;
class PurgeWorkflowRequest;
class PurgeWorkflowRequestDefaultTypeInternal;
extern PurgeWorkflowRequestDefaultTypeInternal _PurgeWorkflowRequest_default_instance_;
class QueryStateItem;
class QueryStateItemDefaultTypeInternal;
extern QueryStateItemDefaultTypeInternal _QueryStateItem_default_instance_;
class QueryStateRequest;
class QueryStateRequestDefaultTypeInternal;
extern QueryStateRequestDefaultTypeInternal _QueryStateRequest_default_instance_;
class QueryStateRequest_MetadataEntry_DoNotUse;
class QueryStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern QueryStateRequest_MetadataEntry_DoNotUseDefaultTypeInternal _QueryStateRequest_MetadataEntry_DoNotUse_default_instance_;
class QueryStateResponse;
class QueryStateResponseDefaultTypeInternal;
extern QueryStateResponseDefaultTypeInternal _QueryStateResponse_default_instance_;
class QueryStateResponse_MetadataEntry_DoNotUse;
class QueryStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal;
extern QueryStateResponse_MetadataEntry_DoNotUseDefaultTypeInternal _QueryStateResponse_MetadataEntry_DoNotUse_default_instance_;
class RaiseEventWorkflowRequest;
class RaiseEventWorkflowRequestDefaultTypeInternal;
extern RaiseEventWorkflowRequestDefaultTypeInternal _RaiseEventWorkflowRequest_default_instance_;
class RegisterActorReminderRequest;
class RegisterActorReminderRequestDefaultTypeInternal;
extern RegisterActorReminderRequestDefaultTypeInternal _RegisterActorReminderRequest_default_instance_;
class RegisterActorTimerRequest;
class RegisterActorTimerRequestDefaultTypeInternal;
extern RegisterActorTimerRequestDefaultTypeInternal _RegisterActorTimerRequest_default_instance_;
class RegisteredComponents;
class RegisteredComponentsDefaultTypeInternal;
extern RegisteredComponentsDefaultTypeInternal _RegisteredComponents_default_instance_;
class RenameActorReminderRequest;
class RenameActorReminderRequestDefaultTypeInternal;
extern RenameActorReminderRequestDefaultTypeInternal _RenameActorReminderRequest_default_instance_;
class ResumeWorkflowRequest;
class ResumeWorkflowRequestDefaultTypeInternal;
extern ResumeWorkflowRequestDefaultTypeInternal _ResumeWorkflowRequest_default_instance_;
class SaveStateRequest;
class SaveStateRequestDefaultTypeInternal;
extern SaveStateRequestDefaultTypeInternal _SaveStateRequest_default_instance_;
class SecretResponse;
class SecretResponseDefaultTypeInternal;
extern SecretResponseDefaultTypeInternal _SecretResponse_default_instance_;
class SecretResponse_SecretsEntry_DoNotUse;
class SecretResponse_SecretsEntry_DoNotUseDefaultTypeInternal;
extern SecretResponse_SecretsEntry_DoNotUseDefaultTypeInternal _SecretResponse_SecretsEntry_DoNotUse_default_instance_;
class SetMetadataRequest;
class SetMetadataRequestDefaultTypeInternal;
extern SetMetadataRequestDefaultTypeInternal _SetMetadataRequest_default_instance_;
class StartWorkflowRequest;
class StartWorkflowRequestDefaultTypeInternal;
extern StartWorkflowRequestDefaultTypeInternal _StartWorkflowRequest_default_instance_;
class StartWorkflowRequest_OptionsEntry_DoNotUse;
class StartWorkflowRequest_OptionsEntry_DoNotUseDefaultTypeInternal;
extern StartWorkflowRequest_OptionsEntry_DoNotUseDefaultTypeInternal _StartWorkflowRequest_OptionsEntry_DoNotUse_default_instance_;
class StartWorkflowResponse;
class StartWorkflowResponseDefaultTypeInternal;
extern StartWorkflowResponseDefaultTypeInternal _StartWorkflowResponse_default_instance_;
class SubscribeConfigurationRequest;
class SubscribeConfigurationRequestDefaultTypeInternal;
extern SubscribeConfigurationRequestDefaultTypeInternal _SubscribeConfigurationRequest_default_instance_;
class SubscribeConfigurationRequest_MetadataEntry_DoNotUse;
class SubscribeConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal;
extern SubscribeConfigurationRequest_MetadataEntry_DoNotUseDefaultTypeInternal _SubscribeConfigurationRequest_MetadataEntry_DoNotUse_default_instance_;
class SubscribeConfigurationResponse;
class SubscribeConfigurationResponseDefaultTypeInternal;
extern SubscribeConfigurationResponseDefaultTypeInternal _SubscribeConfigurationResponse_default_instance_;
class SubscribeConfigurationResponse_ItemsEntry_DoNotUse;
class SubscribeConfigurationResponse_ItemsEntry_DoNotUseDefaultTypeInternal;
extern SubscribeConfigurationResponse_ItemsEntry_DoNotUseDefaultTypeInternal _SubscribeConfigurationResponse_ItemsEntry_DoNotUse_default_instance_;
class SubtleDecryptRequest;
class SubtleDecryptRequestDefaultTypeInternal;
extern SubtleDecryptRequestDefaultTypeInternal _SubtleDecryptRequest_default_instance_;
class SubtleDecryptResponse;
class SubtleDecryptResponseDefaultTypeInternal;
extern SubtleDecryptResponseDefaultTypeInternal _SubtleDecryptResponse_default_instance_;
class SubtleEncryptRequest;
class SubtleEncryptRequestDefaultTypeInternal;
extern SubtleEncryptRequestDefaultTypeInternal _SubtleEncryptRequest_default_instance_;
class SubtleEncryptResponse;
class SubtleEncryptResponseDefaultTypeInternal;
extern SubtleEncryptResponseDefaultTypeInternal _SubtleEncryptResponse_default_instance_;
class SubtleGetKeyRequest;
class SubtleGetKeyRequestDefaultTypeInternal;
extern SubtleGetKeyRequestDefaultTypeInternal _SubtleGetKeyRequest_default_instance_;
class SubtleGetKeyResponse;
class SubtleGetKeyResponseDefaultTypeInternal;
extern SubtleGetKeyResponseDefaultTypeInternal _SubtleGetKeyResponse_default_instance_;
class SubtleSignRequest;
class SubtleSignRequestDefaultTypeInternal;
extern SubtleSignRequestDefaultTypeInternal _SubtleSignRequest_default_instance_;
class SubtleSignResponse;
class SubtleSignResponseDefaultTypeInternal;
extern SubtleSignResponseDefaultTypeInternal _SubtleSignResponse_default_instance_;
class SubtleUnwrapKeyRequest;
class SubtleUnwrapKeyRequestDefaultTypeInternal;
extern SubtleUnwrapKeyRequestDefaultTypeInternal _SubtleUnwrapKeyRequest_default_instance_;
class SubtleUnwrapKeyResponse;
class SubtleUnwrapKeyResponseDefaultTypeInternal;
extern SubtleUnwrapKeyResponseDefaultTypeInternal _SubtleUnwrapKeyResponse_default_instance_;
class SubtleVerifyRequest;
class SubtleVerifyRequestDefaultTypeInternal;
extern SubtleVerifyRequestDefaultTypeInternal _SubtleVerifyRequest_default_instance_;
class SubtleVerifyResponse;
class SubtleVerifyResponseDefaultTypeInternal;
extern SubtleVerifyResponseDefaultTypeInternal _SubtleVerifyResponse_default_instance_;
class SubtleWrapKeyRequest;
class SubtleWrapKeyRequestDefaultTypeInternal;
extern SubtleWrapKeyRequestDefaultTypeInternal _SubtleWrapKeyRequest_default_instance_;
class SubtleWrapKeyResponse;
class SubtleWrapKeyResponseDefaultTypeInternal;
extern SubtleWrapKeyResponseDefaultTypeInternal _SubtleWrapKeyResponse_default_instance_;
class TerminateWorkflowRequest;
class TerminateWorkflowRequestDefaultTypeInternal;
extern TerminateWorkflowRequestDefaultTypeInternal _TerminateWorkflowRequest_default_instance_;
class TransactionalActorStateOperation;
class TransactionalActorStateOperationDefaultTypeInternal;
extern TransactionalActorStateOperationDefaultTypeInternal _TransactionalActorStateOperation_default_instance_;
class TransactionalActorStateOperation_MetadataEntry_DoNotUse;
class TransactionalActorStateOperation_MetadataEntry_DoNotUseDefaultTypeInternal;
extern TransactionalActorStateOperation_MetadataEntry_DoNotUseDefaultTypeInternal _TransactionalActorStateOperation_MetadataEntry_DoNotUse_default_instance_;
class TransactionalStateOperation;
class TransactionalStateOperationDefaultTypeInternal;
extern TransactionalStateOperationDefaultTypeInternal _TransactionalStateOperation_default_instance_;
class TryLockRequest;
class TryLockRequestDefaultTypeInternal;
extern TryLockRequestDefaultTypeInternal _TryLockRequest_default_instance_;
class TryLockResponse;
class TryLockResponseDefaultTypeInternal;
extern TryLockResponseDefaultTypeInternal _TryLockResponse_default_instance_;
class UnlockRequest;
class UnlockRequestDefaultTypeInternal;
extern UnlockRequestDefaultTypeInternal _UnlockRequest_default_instance_;
class UnlockResponse;
class UnlockResponseDefaultTypeInternal;
extern UnlockResponseDefaultTypeInternal _UnlockResponse_default_instance_;
class UnregisterActorReminderRequest;
class UnregisterActorReminderRequestDefaultTypeInternal;
extern UnregisterActorReminderRequestDefaultTypeInternal _UnregisterActorReminderRequest_default_instance_;
class UnregisterActorTimerRequest;
class UnregisterActorTimerRequestDefaultTypeInternal;
extern UnregisterActorTimerRequestDefaultTypeInternal _UnregisterActorTimerRequest_default_instance_;
class UnsubscribeConfigurationRequest;
class UnsubscribeConfigurationRequestDefaultTypeInternal;
extern UnsubscribeConfigurationRequestDefaultTypeInternal _UnsubscribeConfigurationRequest_default_instance_;
class UnsubscribeConfigurationResponse;
class UnsubscribeConfigurationResponseDefaultTypeInternal;
extern UnsubscribeConfigurationResponseDefaultTypeInternal _UnsubscribeConfigurationResponse_default_instance_;
}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr
namespace google {
namespace protobuf {
template<> ::dapr::proto::runtime::v1::ActiveActorsCount* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::ActiveActorsCount>(Arena*);
template<> ::dapr::proto::runtime::v1::BulkPublishRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::BulkPublishRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::BulkPublishRequestEntry* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::BulkPublishRequestEntry>(Arena*);
template<> ::dapr::proto::runtime::v1::BulkPublishRequestEntry_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::BulkPublishRequestEntry_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::BulkPublishRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::BulkPublishRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::BulkPublishResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::BulkPublishResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry>(Arena*);
template<> ::dapr::proto::runtime::v1::BulkStateItem* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::BulkStateItem>(Arena*);
template<> ::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::BulkStateItem_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::DecryptRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::DecryptRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::DecryptRequestOptions* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::DecryptRequestOptions>(Arena*);
template<> ::dapr::proto::runtime::v1::DecryptResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::DecryptResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::DeleteBulkStateRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::DeleteBulkStateRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::DeleteStateRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::DeleteStateRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::DeleteStateRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::EncryptRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::EncryptRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::EncryptRequestOptions* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::EncryptRequestOptions>(Arena*);
template<> ::dapr::proto::runtime::v1::EncryptResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::EncryptResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::ExecuteActorStateTransactionRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::ExecuteStateTransactionRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::ExecuteStateTransactionRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetActorStateRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetActorStateRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::GetActorStateResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetActorStateResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkSecretRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkSecretRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkSecretRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkSecretResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkSecretResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkSecretResponse_DataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkStateRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkStateRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkStateRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetBulkStateResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetBulkStateResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetConfigurationRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetConfigurationRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetConfigurationRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetConfigurationResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetConfigurationResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetConfigurationResponse_ItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetConfigurationResponse_ItemsEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetMetadataResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetMetadataResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetMetadataResponse_ExtendedMetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetSecretRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetSecretRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetSecretRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetSecretResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetSecretResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetSecretResponse_DataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetStateRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetStateRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetStateRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetStateResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetStateResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetStateResponse_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetWorkflowRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetWorkflowRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::GetWorkflowResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetWorkflowResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::GetWorkflowResponse_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::GetWorkflowResponse_PropertiesEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeActorRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeActorRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeActorRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeActorRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeActorResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeActorResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeBindingRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeBindingRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeBindingRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeBindingResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeBindingResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeBindingResponse_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::InvokeServiceRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::InvokeServiceRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::PauseWorkflowRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::PauseWorkflowRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::PublishEventRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::PublishEventRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::PublishEventRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::PubsubSubscription* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::PubsubSubscription>(Arena*);
template<> ::dapr::proto::runtime::v1::PubsubSubscriptionRule* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::PubsubSubscriptionRule>(Arena*);
template<> ::dapr::proto::runtime::v1::PubsubSubscriptionRules* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::PubsubSubscriptionRules>(Arena*);
template<> ::dapr::proto::runtime::v1::PubsubSubscription_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::PubsubSubscription_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::PurgeWorkflowRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::PurgeWorkflowRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::QueryStateItem* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::QueryStateItem>(Arena*);
template<> ::dapr::proto::runtime::v1::QueryStateRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::QueryStateRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::QueryStateRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::QueryStateRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::QueryStateResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::QueryStateResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::QueryStateResponse_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::QueryStateResponse_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::RaiseEventWorkflowRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::RaiseEventWorkflowRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::RegisterActorReminderRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::RegisterActorReminderRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::RegisterActorTimerRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::RegisterActorTimerRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::RegisteredComponents* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::RegisteredComponents>(Arena*);
template<> ::dapr::proto::runtime::v1::RenameActorReminderRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::RenameActorReminderRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::ResumeWorkflowRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::ResumeWorkflowRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::SaveStateRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SaveStateRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::SecretResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SecretResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::SecretResponse_SecretsEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SecretResponse_SecretsEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::SetMetadataRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SetMetadataRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::StartWorkflowRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::StartWorkflowRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::StartWorkflowRequest_OptionsEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::StartWorkflowRequest_OptionsEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::StartWorkflowResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::StartWorkflowResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::SubscribeConfigurationRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubscribeConfigurationRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubscribeConfigurationRequest_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::SubscribeConfigurationResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubscribeConfigurationResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::SubscribeConfigurationResponse_ItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubscribeConfigurationResponse_ItemsEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleDecryptRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleDecryptRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleDecryptResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleDecryptResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleEncryptRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleEncryptRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleEncryptResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleEncryptResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleGetKeyRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleGetKeyRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleGetKeyResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleGetKeyResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleSignRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleSignRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleSignResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleSignResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleUnwrapKeyRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleUnwrapKeyResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleVerifyRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleVerifyRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleVerifyResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleVerifyResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleWrapKeyRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleWrapKeyRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::SubtleWrapKeyResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::SubtleWrapKeyResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::TerminateWorkflowRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::TerminateWorkflowRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::TransactionalActorStateOperation* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::TransactionalActorStateOperation>(Arena*);
template<> ::dapr::proto::runtime::v1::TransactionalActorStateOperation_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::TransactionalActorStateOperation_MetadataEntry_DoNotUse>(Arena*);
template<> ::dapr::proto::runtime::v1::TransactionalStateOperation* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::TransactionalStateOperation>(Arena*);
template<> ::dapr::proto::runtime::v1::TryLockRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::TryLockRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::TryLockResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::TryLockResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::UnlockRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::UnlockRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::UnlockResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::UnlockResponse>(Arena*);
template<> ::dapr::proto::runtime::v1::UnregisterActorReminderRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::UnregisterActorReminderRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::UnregisterActorTimerRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::UnregisterActorTimerRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::UnsubscribeConfigurationRequest>(Arena*);
template<> ::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse* Arena::CreateMaybeMessage<::dapr::proto::runtime::v1::UnsubscribeConfigurationResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dapr {
namespace proto {
namespace runtime {
namespace v1 {

enum UnlockResponse_Status {
  UnlockResponse_Status_SUCCESS = 0,
  UnlockResponse_Status_LOCK_DOES_NOT_EXIST = 1,
  UnlockResponse_Status_LOCK_BELONGS_TO_OTHERS = 2,
  UnlockResponse_Status_INTERNAL_ERROR = 3,
  UnlockResponse_Status_UnlockResponse_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UnlockResponse_Status_UnlockResponse_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UnlockResponse_Status_IsValid(int value);
const UnlockResponse_Status UnlockResponse_Status_Status_MIN = UnlockResponse_Status_SUCCESS;
const UnlockResponse_Status UnlockResponse_Status_Status_MAX = UnlockResponse_Status_INTERNAL_ERROR;
const int UnlockResponse_Status_Status_ARRAYSIZE = UnlockResponse_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnlockResponse_Status_descriptor();
inline const ::std::string& UnlockResponse_Status_Name(UnlockResponse_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnlockResponse_Status_descriptor(), value);
}
inline bool UnlockResponse_Status_Parse(
    const ::std::string& name, UnlockResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnlockResponse_Status>(
    UnlockResponse_Status_descriptor(), name, value);
}
enum SubtleGetKeyRequest_KeyFormat {
  SubtleGetKeyRequest_KeyFormat_PEM = 0,
  SubtleGetKeyRequest_KeyFormat_JSON = 1,
  SubtleGetKeyRequest_KeyFormat_SubtleGetKeyRequest_KeyFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SubtleGetKeyRequest_KeyFormat_SubtleGetKeyRequest_KeyFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SubtleGetKeyRequest_KeyFormat_IsValid(int value);
const SubtleGetKeyRequest_KeyFormat SubtleGetKeyRequest_KeyFormat_KeyFormat_MIN = SubtleGetKeyRequest_KeyFormat_PEM;
const SubtleGetKeyRequest_KeyFormat SubtleGetKeyRequest_KeyFormat_KeyFormat_MAX = SubtleGetKeyRequest_KeyFormat_JSON;
const int SubtleGetKeyRequest_KeyFormat_KeyFormat_ARRAYSIZE = SubtleGetKeyRequest_KeyFormat_KeyFormat_MAX + 1;

const ::google::protobuf::EnumDescriptor* SubtleGetKeyRequest_KeyFormat_descriptor();
inline const ::std::string& SubtleGetKeyRequest_KeyFormat_Name(SubtleGetKeyRequest_KeyFormat value) {
  return ::google::protobuf::internal::NameOfEnum(
    SubtleGetKeyRequest_KeyFormat_descriptor(), value);
}
inline bool SubtleGetKeyRequest_KeyFormat_Parse(
    const ::std::string& name, SubtleGetKeyRequest_KeyFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SubtleGetKeyRequest_KeyFormat>(
    SubtleGetKeyRequest_KeyFormat_descriptor(), name, value);
}
// ===================================================================

class InvokeServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeServiceRequest) */ {
 public:
  InvokeServiceRequest();
  virtual ~InvokeServiceRequest();

  InvokeServiceRequest(const InvokeServiceRequest& from);

  inline InvokeServiceRequest& operator=(const InvokeServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvokeServiceRequest(InvokeServiceRequest&& from) noexcept
    : InvokeServiceRequest() {
    *this = ::std::move(from);
  }

  inline InvokeServiceRequest& operator=(InvokeServiceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvokeServiceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvokeServiceRequest* internal_default_instance() {
    return reinterpret_cast<const InvokeServiceRequest*>(
               &_InvokeServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(InvokeServiceRequest* other);
  friend void swap(InvokeServiceRequest& a, InvokeServiceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvokeServiceRequest* New() const final {
    return CreateMaybeMessage<InvokeServiceRequest>(NULL);
  }

  InvokeServiceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvokeServiceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvokeServiceRequest& from);
  void MergeFrom(const InvokeServiceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeServiceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .dapr.proto.common.v1.InvokeRequest message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  private:
  const ::dapr::proto::common::v1::InvokeRequest& _internal_message() const;
  public:
  const ::dapr::proto::common::v1::InvokeRequest& message() const;
  ::dapr::proto::common::v1::InvokeRequest* release_message();
  ::dapr::proto::common::v1::InvokeRequest* mutable_message();
  void set_allocated_message(::dapr::proto::common::v1::InvokeRequest* message);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeServiceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::dapr::proto::common::v1::InvokeRequest* message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetStateRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetStateRequest_MetadataEntry_DoNotUse();
  GetStateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetStateRequest_MetadataEntry_DoNotUse& other);
  static const GetStateRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetStateRequest_MetadataEntry_DoNotUse*>(&_GetStateRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetStateRequest) */ {
 public:
  GetStateRequest();
  virtual ~GetStateRequest();

  GetStateRequest(const GetStateRequest& from);

  inline GetStateRequest& operator=(const GetStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetStateRequest(GetStateRequest&& from) noexcept
    : GetStateRequest() {
    *this = ::std::move(from);
  }

  inline GetStateRequest& operator=(GetStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetStateRequest*>(
               &_GetStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetStateRequest* other);
  friend void swap(GetStateRequest& a, GetStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetStateRequest* New() const final {
    return CreateMaybeMessage<GetStateRequest>(NULL);
  }

  GetStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetStateRequest& from);
  void MergeFrom(const GetStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 4;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // .dapr.proto.common.v1.StateOptions.StateConsistency consistency = 3;
  void clear_consistency();
  static const int kConsistencyFieldNumber = 3;
  ::dapr::proto::common::v1::StateOptions_StateConsistency consistency() const;
  void set_consistency(::dapr::proto::common::v1::StateOptions_StateConsistency value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetStateRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  int consistency_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBulkStateRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetBulkStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetBulkStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetBulkStateRequest_MetadataEntry_DoNotUse();
  GetBulkStateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetBulkStateRequest_MetadataEntry_DoNotUse& other);
  static const GetBulkStateRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetBulkStateRequest_MetadataEntry_DoNotUse*>(&_GetBulkStateRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetBulkStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetBulkStateRequest) */ {
 public:
  GetBulkStateRequest();
  virtual ~GetBulkStateRequest();

  GetBulkStateRequest(const GetBulkStateRequest& from);

  inline GetBulkStateRequest& operator=(const GetBulkStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBulkStateRequest(GetBulkStateRequest&& from) noexcept
    : GetBulkStateRequest() {
    *this = ::std::move(from);
  }

  inline GetBulkStateRequest& operator=(GetBulkStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBulkStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBulkStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetBulkStateRequest*>(
               &_GetBulkStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GetBulkStateRequest* other);
  friend void swap(GetBulkStateRequest& a, GetBulkStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBulkStateRequest* New() const final {
    return CreateMaybeMessage<GetBulkStateRequest>(NULL);
  }

  GetBulkStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetBulkStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetBulkStateRequest& from);
  void MergeFrom(const GetBulkStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBulkStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string keys = 2;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 2;
  const ::std::string& keys(int index) const;
  ::std::string* mutable_keys(int index);
  void set_keys(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_keys(int index, ::std::string&& value);
  #endif
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, size_t size);
  ::std::string* add_keys();
  void add_keys(const ::std::string& value);
  #if LANG_CXX11
  void add_keys(::std::string&& value);
  #endif
  void add_keys(const char* value);
  void add_keys(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

  // map<string, string> metadata = 4;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // int32 parallelism = 3;
  void clear_parallelism();
  static const int kParallelismFieldNumber = 3;
  ::google::protobuf::int32 parallelism() const;
  void set_parallelism(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetBulkStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;
  ::google::protobuf::internal::MapField<
      GetBulkStateRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::int32 parallelism_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBulkStateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetBulkStateResponse) */ {
 public:
  GetBulkStateResponse();
  virtual ~GetBulkStateResponse();

  GetBulkStateResponse(const GetBulkStateResponse& from);

  inline GetBulkStateResponse& operator=(const GetBulkStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBulkStateResponse(GetBulkStateResponse&& from) noexcept
    : GetBulkStateResponse() {
    *this = ::std::move(from);
  }

  inline GetBulkStateResponse& operator=(GetBulkStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBulkStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBulkStateResponse* internal_default_instance() {
    return reinterpret_cast<const GetBulkStateResponse*>(
               &_GetBulkStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GetBulkStateResponse* other);
  friend void swap(GetBulkStateResponse& a, GetBulkStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBulkStateResponse* New() const final {
    return CreateMaybeMessage<GetBulkStateResponse>(NULL);
  }

  GetBulkStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetBulkStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetBulkStateResponse& from);
  void MergeFrom(const GetBulkStateResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBulkStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dapr.proto.runtime.v1.BulkStateItem items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  ::dapr::proto::runtime::v1::BulkStateItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem >*
      mutable_items();
  const ::dapr::proto::runtime::v1::BulkStateItem& items(int index) const;
  ::dapr::proto::runtime::v1::BulkStateItem* add_items();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem >&
      items() const;

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetBulkStateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem > items_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkStateItem_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<BulkStateItem_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<BulkStateItem_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  BulkStateItem_MetadataEntry_DoNotUse();
  BulkStateItem_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const BulkStateItem_MetadataEntry_DoNotUse& other);
  static const BulkStateItem_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const BulkStateItem_MetadataEntry_DoNotUse*>(&_BulkStateItem_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class BulkStateItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.BulkStateItem) */ {
 public:
  BulkStateItem();
  virtual ~BulkStateItem();

  BulkStateItem(const BulkStateItem& from);

  inline BulkStateItem& operator=(const BulkStateItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkStateItem(BulkStateItem&& from) noexcept
    : BulkStateItem() {
    *this = ::std::move(from);
  }

  inline BulkStateItem& operator=(BulkStateItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkStateItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkStateItem* internal_default_instance() {
    return reinterpret_cast<const BulkStateItem*>(
               &_BulkStateItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(BulkStateItem* other);
  friend void swap(BulkStateItem& a, BulkStateItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkStateItem* New() const final {
    return CreateMaybeMessage<BulkStateItem>(NULL);
  }

  BulkStateItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkStateItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkStateItem& from);
  void MergeFrom(const BulkStateItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkStateItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 5;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string etag = 3;
  void clear_etag();
  static const int kEtagFieldNumber = 3;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // string error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.BulkStateItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      BulkStateItem_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetStateResponse_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetStateResponse_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetStateResponse_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetStateResponse_MetadataEntry_DoNotUse();
  GetStateResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetStateResponse_MetadataEntry_DoNotUse& other);
  static const GetStateResponse_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetStateResponse_MetadataEntry_DoNotUse*>(&_GetStateResponse_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetStateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetStateResponse) */ {
 public:
  GetStateResponse();
  virtual ~GetStateResponse();

  GetStateResponse(const GetStateResponse& from);

  inline GetStateResponse& operator=(const GetStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetStateResponse(GetStateResponse&& from) noexcept
    : GetStateResponse() {
    *this = ::std::move(from);
  }

  inline GetStateResponse& operator=(GetStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetStateResponse* internal_default_instance() {
    return reinterpret_cast<const GetStateResponse*>(
               &_GetStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(GetStateResponse* other);
  friend void swap(GetStateResponse& a, GetStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetStateResponse* New() const final {
    return CreateMaybeMessage<GetStateResponse>(NULL);
  }

  GetStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetStateResponse& from);
  void MergeFrom(const GetStateResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string etag = 2;
  void clear_etag();
  static const int kEtagFieldNumber = 2;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetStateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetStateResponse_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteStateRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<DeleteStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<DeleteStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  DeleteStateRequest_MetadataEntry_DoNotUse();
  DeleteStateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const DeleteStateRequest_MetadataEntry_DoNotUse& other);
  static const DeleteStateRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const DeleteStateRequest_MetadataEntry_DoNotUse*>(&_DeleteStateRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class DeleteStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.DeleteStateRequest) */ {
 public:
  DeleteStateRequest();
  virtual ~DeleteStateRequest();

  DeleteStateRequest(const DeleteStateRequest& from);

  inline DeleteStateRequest& operator=(const DeleteStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteStateRequest(DeleteStateRequest&& from) noexcept
    : DeleteStateRequest() {
    *this = ::std::move(from);
  }

  inline DeleteStateRequest& operator=(DeleteStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteStateRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteStateRequest*>(
               &_DeleteStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(DeleteStateRequest* other);
  friend void swap(DeleteStateRequest& a, DeleteStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteStateRequest* New() const final {
    return CreateMaybeMessage<DeleteStateRequest>(NULL);
  }

  DeleteStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteStateRequest& from);
  void MergeFrom(const DeleteStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 5;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // .dapr.proto.common.v1.Etag etag = 3;
  bool has_etag() const;
  void clear_etag();
  static const int kEtagFieldNumber = 3;
  private:
  const ::dapr::proto::common::v1::Etag& _internal_etag() const;
  public:
  const ::dapr::proto::common::v1::Etag& etag() const;
  ::dapr::proto::common::v1::Etag* release_etag();
  ::dapr::proto::common::v1::Etag* mutable_etag();
  void set_allocated_etag(::dapr::proto::common::v1::Etag* etag);

  // .dapr.proto.common.v1.StateOptions options = 4;
  bool has_options() const;
  void clear_options();
  static const int kOptionsFieldNumber = 4;
  private:
  const ::dapr::proto::common::v1::StateOptions& _internal_options() const;
  public:
  const ::dapr::proto::common::v1::StateOptions& options() const;
  ::dapr::proto::common::v1::StateOptions* release_options();
  ::dapr::proto::common::v1::StateOptions* mutable_options();
  void set_allocated_options(::dapr::proto::common::v1::StateOptions* options);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.DeleteStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      DeleteStateRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::dapr::proto::common::v1::Etag* etag_;
  ::dapr::proto::common::v1::StateOptions* options_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteBulkStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.DeleteBulkStateRequest) */ {
 public:
  DeleteBulkStateRequest();
  virtual ~DeleteBulkStateRequest();

  DeleteBulkStateRequest(const DeleteBulkStateRequest& from);

  inline DeleteBulkStateRequest& operator=(const DeleteBulkStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteBulkStateRequest(DeleteBulkStateRequest&& from) noexcept
    : DeleteBulkStateRequest() {
    *this = ::std::move(from);
  }

  inline DeleteBulkStateRequest& operator=(DeleteBulkStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteBulkStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteBulkStateRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteBulkStateRequest*>(
               &_DeleteBulkStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(DeleteBulkStateRequest* other);
  friend void swap(DeleteBulkStateRequest& a, DeleteBulkStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteBulkStateRequest* New() const final {
    return CreateMaybeMessage<DeleteBulkStateRequest>(NULL);
  }

  DeleteBulkStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteBulkStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteBulkStateRequest& from);
  void MergeFrom(const DeleteBulkStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteBulkStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dapr.proto.common.v1.StateItem states = 2;
  int states_size() const;
  void clear_states();
  static const int kStatesFieldNumber = 2;
  ::dapr::proto::common::v1::StateItem* mutable_states(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >*
      mutable_states();
  const ::dapr::proto::common::v1::StateItem& states(int index) const;
  ::dapr::proto::common::v1::StateItem* add_states();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >&
      states() const;

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.DeleteBulkStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem > states_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SaveStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SaveStateRequest) */ {
 public:
  SaveStateRequest();
  virtual ~SaveStateRequest();

  SaveStateRequest(const SaveStateRequest& from);

  inline SaveStateRequest& operator=(const SaveStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SaveStateRequest(SaveStateRequest&& from) noexcept
    : SaveStateRequest() {
    *this = ::std::move(from);
  }

  inline SaveStateRequest& operator=(SaveStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SaveStateRequest* internal_default_instance() {
    return reinterpret_cast<const SaveStateRequest*>(
               &_SaveStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(SaveStateRequest* other);
  friend void swap(SaveStateRequest& a, SaveStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SaveStateRequest* New() const final {
    return CreateMaybeMessage<SaveStateRequest>(NULL);
  }

  SaveStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SaveStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SaveStateRequest& from);
  void MergeFrom(const SaveStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SaveStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dapr.proto.common.v1.StateItem states = 2;
  int states_size() const;
  void clear_states();
  static const int kStatesFieldNumber = 2;
  ::dapr::proto::common::v1::StateItem* mutable_states(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >*
      mutable_states();
  const ::dapr::proto::common::v1::StateItem& states(int index) const;
  ::dapr::proto::common::v1::StateItem* add_states();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >&
      states() const;

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SaveStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem > states_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryStateRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<QueryStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<QueryStateRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  QueryStateRequest_MetadataEntry_DoNotUse();
  QueryStateRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const QueryStateRequest_MetadataEntry_DoNotUse& other);
  static const QueryStateRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const QueryStateRequest_MetadataEntry_DoNotUse*>(&_QueryStateRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class QueryStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.QueryStateRequest) */ {
 public:
  QueryStateRequest();
  virtual ~QueryStateRequest();

  QueryStateRequest(const QueryStateRequest& from);

  inline QueryStateRequest& operator=(const QueryStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryStateRequest(QueryStateRequest&& from) noexcept
    : QueryStateRequest() {
    *this = ::std::move(from);
  }

  inline QueryStateRequest& operator=(QueryStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryStateRequest* internal_default_instance() {
    return reinterpret_cast<const QueryStateRequest*>(
               &_QueryStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(QueryStateRequest* other);
  friend void swap(QueryStateRequest& a, QueryStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryStateRequest* New() const final {
    return CreateMaybeMessage<QueryStateRequest>(NULL);
  }

  QueryStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QueryStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QueryStateRequest& from);
  void MergeFrom(const QueryStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1[json_name = "storeName"];
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string query = 2;
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.QueryStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      QueryStateRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryStateItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.QueryStateItem) */ {
 public:
  QueryStateItem();
  virtual ~QueryStateItem();

  QueryStateItem(const QueryStateItem& from);

  inline QueryStateItem& operator=(const QueryStateItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryStateItem(QueryStateItem&& from) noexcept
    : QueryStateItem() {
    *this = ::std::move(from);
  }

  inline QueryStateItem& operator=(QueryStateItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryStateItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryStateItem* internal_default_instance() {
    return reinterpret_cast<const QueryStateItem*>(
               &_QueryStateItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(QueryStateItem* other);
  friend void swap(QueryStateItem& a, QueryStateItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryStateItem* New() const final {
    return CreateMaybeMessage<QueryStateItem>(NULL);
  }

  QueryStateItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QueryStateItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QueryStateItem& from);
  void MergeFrom(const QueryStateItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryStateItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string etag = 3;
  void clear_etag();
  static const int kEtagFieldNumber = 3;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // string error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.QueryStateItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryStateResponse_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<QueryStateResponse_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<QueryStateResponse_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  QueryStateResponse_MetadataEntry_DoNotUse();
  QueryStateResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const QueryStateResponse_MetadataEntry_DoNotUse& other);
  static const QueryStateResponse_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const QueryStateResponse_MetadataEntry_DoNotUse*>(&_QueryStateResponse_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class QueryStateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.QueryStateResponse) */ {
 public:
  QueryStateResponse();
  virtual ~QueryStateResponse();

  QueryStateResponse(const QueryStateResponse& from);

  inline QueryStateResponse& operator=(const QueryStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryStateResponse(QueryStateResponse&& from) noexcept
    : QueryStateResponse() {
    *this = ::std::move(from);
  }

  inline QueryStateResponse& operator=(QueryStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryStateResponse* internal_default_instance() {
    return reinterpret_cast<const QueryStateResponse*>(
               &_QueryStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(QueryStateResponse* other);
  friend void swap(QueryStateResponse& a, QueryStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryStateResponse* New() const final {
    return CreateMaybeMessage<QueryStateResponse>(NULL);
  }

  QueryStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QueryStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QueryStateResponse& from);
  void MergeFrom(const QueryStateResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .dapr.proto.runtime.v1.QueryStateItem results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  ::dapr::proto::runtime::v1::QueryStateItem* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::QueryStateItem >*
      mutable_results();
  const ::dapr::proto::runtime::v1::QueryStateItem& results(int index) const;
  ::dapr::proto::runtime::v1::QueryStateItem* add_results();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::QueryStateItem >&
      results() const;

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.QueryStateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::QueryStateItem > results_;
  ::google::protobuf::internal::MapField<
      QueryStateResponse_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PublishEventRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PublishEventRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PublishEventRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  PublishEventRequest_MetadataEntry_DoNotUse();
  PublishEventRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PublishEventRequest_MetadataEntry_DoNotUse& other);
  static const PublishEventRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PublishEventRequest_MetadataEntry_DoNotUse*>(&_PublishEventRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PublishEventRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PublishEventRequest) */ {
 public:
  PublishEventRequest();
  virtual ~PublishEventRequest();

  PublishEventRequest(const PublishEventRequest& from);

  inline PublishEventRequest& operator=(const PublishEventRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublishEventRequest(PublishEventRequest&& from) noexcept
    : PublishEventRequest() {
    *this = ::std::move(from);
  }

  inline PublishEventRequest& operator=(PublishEventRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishEventRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublishEventRequest* internal_default_instance() {
    return reinterpret_cast<const PublishEventRequest*>(
               &_PublishEventRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(PublishEventRequest* other);
  friend void swap(PublishEventRequest& a, PublishEventRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublishEventRequest* New() const final {
    return CreateMaybeMessage<PublishEventRequest>(NULL);
  }

  PublishEventRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PublishEventRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PublishEventRequest& from);
  void MergeFrom(const PublishEventRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PublishEventRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 5;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string pubsub_name = 1;
  void clear_pubsub_name();
  static const int kPubsubNameFieldNumber = 1;
  const ::std::string& pubsub_name() const;
  void set_pubsub_name(const ::std::string& value);
  #if LANG_CXX11
  void set_pubsub_name(::std::string&& value);
  #endif
  void set_pubsub_name(const char* value);
  void set_pubsub_name(const char* value, size_t size);
  ::std::string* mutable_pubsub_name();
  ::std::string* release_pubsub_name();
  void set_allocated_pubsub_name(::std::string* pubsub_name);

  // string topic = 2;
  void clear_topic();
  static const int kTopicFieldNumber = 2;
  const ::std::string& topic() const;
  void set_topic(const ::std::string& value);
  #if LANG_CXX11
  void set_topic(::std::string&& value);
  #endif
  void set_topic(const char* value);
  void set_topic(const char* value, size_t size);
  ::std::string* mutable_topic();
  ::std::string* release_topic();
  void set_allocated_topic(::std::string* topic);

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string data_content_type = 4;
  void clear_data_content_type();
  static const int kDataContentTypeFieldNumber = 4;
  const ::std::string& data_content_type() const;
  void set_data_content_type(const ::std::string& value);
  #if LANG_CXX11
  void set_data_content_type(::std::string&& value);
  #endif
  void set_data_content_type(const char* value);
  void set_data_content_type(const char* value, size_t size);
  ::std::string* mutable_data_content_type();
  ::std::string* release_data_content_type();
  void set_allocated_data_content_type(::std::string* data_content_type);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PublishEventRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PublishEventRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr pubsub_name_;
  ::google::protobuf::internal::ArenaStringPtr topic_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr data_content_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkPublishRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<BulkPublishRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<BulkPublishRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  BulkPublishRequest_MetadataEntry_DoNotUse();
  BulkPublishRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const BulkPublishRequest_MetadataEntry_DoNotUse& other);
  static const BulkPublishRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const BulkPublishRequest_MetadataEntry_DoNotUse*>(&_BulkPublishRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class BulkPublishRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.BulkPublishRequest) */ {
 public:
  BulkPublishRequest();
  virtual ~BulkPublishRequest();

  BulkPublishRequest(const BulkPublishRequest& from);

  inline BulkPublishRequest& operator=(const BulkPublishRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkPublishRequest(BulkPublishRequest&& from) noexcept
    : BulkPublishRequest() {
    *this = ::std::move(from);
  }

  inline BulkPublishRequest& operator=(BulkPublishRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkPublishRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkPublishRequest* internal_default_instance() {
    return reinterpret_cast<const BulkPublishRequest*>(
               &_BulkPublishRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(BulkPublishRequest* other);
  friend void swap(BulkPublishRequest& a, BulkPublishRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkPublishRequest* New() const final {
    return CreateMaybeMessage<BulkPublishRequest>(NULL);
  }

  BulkPublishRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkPublishRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkPublishRequest& from);
  void MergeFrom(const BulkPublishRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkPublishRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .dapr.proto.runtime.v1.BulkPublishRequestEntry entries = 3;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 3;
  ::dapr::proto::runtime::v1::BulkPublishRequestEntry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishRequestEntry >*
      mutable_entries();
  const ::dapr::proto::runtime::v1::BulkPublishRequestEntry& entries(int index) const;
  ::dapr::proto::runtime::v1::BulkPublishRequestEntry* add_entries();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishRequestEntry >&
      entries() const;

  // map<string, string> metadata = 4;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string pubsub_name = 1;
  void clear_pubsub_name();
  static const int kPubsubNameFieldNumber = 1;
  const ::std::string& pubsub_name() const;
  void set_pubsub_name(const ::std::string& value);
  #if LANG_CXX11
  void set_pubsub_name(::std::string&& value);
  #endif
  void set_pubsub_name(const char* value);
  void set_pubsub_name(const char* value, size_t size);
  ::std::string* mutable_pubsub_name();
  ::std::string* release_pubsub_name();
  void set_allocated_pubsub_name(::std::string* pubsub_name);

  // string topic = 2;
  void clear_topic();
  static const int kTopicFieldNumber = 2;
  const ::std::string& topic() const;
  void set_topic(const ::std::string& value);
  #if LANG_CXX11
  void set_topic(::std::string&& value);
  #endif
  void set_topic(const char* value);
  void set_topic(const char* value, size_t size);
  ::std::string* mutable_topic();
  ::std::string* release_topic();
  void set_allocated_topic(::std::string* topic);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.BulkPublishRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishRequestEntry > entries_;
  ::google::protobuf::internal::MapField<
      BulkPublishRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr pubsub_name_;
  ::google::protobuf::internal::ArenaStringPtr topic_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkPublishRequestEntry_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<BulkPublishRequestEntry_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<BulkPublishRequestEntry_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  BulkPublishRequestEntry_MetadataEntry_DoNotUse();
  BulkPublishRequestEntry_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const BulkPublishRequestEntry_MetadataEntry_DoNotUse& other);
  static const BulkPublishRequestEntry_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const BulkPublishRequestEntry_MetadataEntry_DoNotUse*>(&_BulkPublishRequestEntry_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class BulkPublishRequestEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.BulkPublishRequestEntry) */ {
 public:
  BulkPublishRequestEntry();
  virtual ~BulkPublishRequestEntry();

  BulkPublishRequestEntry(const BulkPublishRequestEntry& from);

  inline BulkPublishRequestEntry& operator=(const BulkPublishRequestEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkPublishRequestEntry(BulkPublishRequestEntry&& from) noexcept
    : BulkPublishRequestEntry() {
    *this = ::std::move(from);
  }

  inline BulkPublishRequestEntry& operator=(BulkPublishRequestEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkPublishRequestEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkPublishRequestEntry* internal_default_instance() {
    return reinterpret_cast<const BulkPublishRequestEntry*>(
               &_BulkPublishRequestEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(BulkPublishRequestEntry* other);
  friend void swap(BulkPublishRequestEntry& a, BulkPublishRequestEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkPublishRequestEntry* New() const final {
    return CreateMaybeMessage<BulkPublishRequestEntry>(NULL);
  }

  BulkPublishRequestEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkPublishRequestEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkPublishRequestEntry& from);
  void MergeFrom(const BulkPublishRequestEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkPublishRequestEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 4;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string entry_id = 1;
  void clear_entry_id();
  static const int kEntryIdFieldNumber = 1;
  const ::std::string& entry_id() const;
  void set_entry_id(const ::std::string& value);
  #if LANG_CXX11
  void set_entry_id(::std::string&& value);
  #endif
  void set_entry_id(const char* value);
  void set_entry_id(const char* value, size_t size);
  ::std::string* mutable_entry_id();
  ::std::string* release_entry_id();
  void set_allocated_entry_id(::std::string* entry_id);

  // bytes event = 2;
  void clear_event();
  static const int kEventFieldNumber = 2;
  const ::std::string& event() const;
  void set_event(const ::std::string& value);
  #if LANG_CXX11
  void set_event(::std::string&& value);
  #endif
  void set_event(const char* value);
  void set_event(const void* value, size_t size);
  ::std::string* mutable_event();
  ::std::string* release_event();
  void set_allocated_event(::std::string* event);

  // string content_type = 3;
  void clear_content_type();
  static const int kContentTypeFieldNumber = 3;
  const ::std::string& content_type() const;
  void set_content_type(const ::std::string& value);
  #if LANG_CXX11
  void set_content_type(::std::string&& value);
  #endif
  void set_content_type(const char* value);
  void set_content_type(const char* value, size_t size);
  ::std::string* mutable_content_type();
  ::std::string* release_content_type();
  void set_allocated_content_type(::std::string* content_type);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.BulkPublishRequestEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      BulkPublishRequestEntry_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr entry_id_;
  ::google::protobuf::internal::ArenaStringPtr event_;
  ::google::protobuf::internal::ArenaStringPtr content_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkPublishResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.BulkPublishResponse) */ {
 public:
  BulkPublishResponse();
  virtual ~BulkPublishResponse();

  BulkPublishResponse(const BulkPublishResponse& from);

  inline BulkPublishResponse& operator=(const BulkPublishResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkPublishResponse(BulkPublishResponse&& from) noexcept
    : BulkPublishResponse() {
    *this = ::std::move(from);
  }

  inline BulkPublishResponse& operator=(BulkPublishResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkPublishResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkPublishResponse* internal_default_instance() {
    return reinterpret_cast<const BulkPublishResponse*>(
               &_BulkPublishResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(BulkPublishResponse* other);
  friend void swap(BulkPublishResponse& a, BulkPublishResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkPublishResponse* New() const final {
    return CreateMaybeMessage<BulkPublishResponse>(NULL);
  }

  BulkPublishResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkPublishResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkPublishResponse& from);
  void MergeFrom(const BulkPublishResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkPublishResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dapr.proto.runtime.v1.BulkPublishResponseFailedEntry failedEntries = 1;
  int failedentries_size() const;
  void clear_failedentries();
  static const int kFailedEntriesFieldNumber = 1;
  ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry* mutable_failedentries(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry >*
      mutable_failedentries();
  const ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry& failedentries(int index) const;
  ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry* add_failedentries();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry >&
      failedentries() const;

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.BulkPublishResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry > failedentries_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BulkPublishResponseFailedEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry) */ {
 public:
  BulkPublishResponseFailedEntry();
  virtual ~BulkPublishResponseFailedEntry();

  BulkPublishResponseFailedEntry(const BulkPublishResponseFailedEntry& from);

  inline BulkPublishResponseFailedEntry& operator=(const BulkPublishResponseFailedEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulkPublishResponseFailedEntry(BulkPublishResponseFailedEntry&& from) noexcept
    : BulkPublishResponseFailedEntry() {
    *this = ::std::move(from);
  }

  inline BulkPublishResponseFailedEntry& operator=(BulkPublishResponseFailedEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BulkPublishResponseFailedEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulkPublishResponseFailedEntry* internal_default_instance() {
    return reinterpret_cast<const BulkPublishResponseFailedEntry*>(
               &_BulkPublishResponseFailedEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(BulkPublishResponseFailedEntry* other);
  friend void swap(BulkPublishResponseFailedEntry& a, BulkPublishResponseFailedEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulkPublishResponseFailedEntry* New() const final {
    return CreateMaybeMessage<BulkPublishResponseFailedEntry>(NULL);
  }

  BulkPublishResponseFailedEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulkPublishResponseFailedEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulkPublishResponseFailedEntry& from);
  void MergeFrom(const BulkPublishResponseFailedEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulkPublishResponseFailedEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string entry_id = 1;
  void clear_entry_id();
  static const int kEntryIdFieldNumber = 1;
  const ::std::string& entry_id() const;
  void set_entry_id(const ::std::string& value);
  #if LANG_CXX11
  void set_entry_id(::std::string&& value);
  #endif
  void set_entry_id(const char* value);
  void set_entry_id(const char* value, size_t size);
  ::std::string* mutable_entry_id();
  ::std::string* release_entry_id();
  void set_allocated_entry_id(::std::string* entry_id);

  // string error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr entry_id_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvokeBindingRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<InvokeBindingRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<InvokeBindingRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  InvokeBindingRequest_MetadataEntry_DoNotUse();
  InvokeBindingRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const InvokeBindingRequest_MetadataEntry_DoNotUse& other);
  static const InvokeBindingRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const InvokeBindingRequest_MetadataEntry_DoNotUse*>(&_InvokeBindingRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class InvokeBindingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeBindingRequest) */ {
 public:
  InvokeBindingRequest();
  virtual ~InvokeBindingRequest();

  InvokeBindingRequest(const InvokeBindingRequest& from);

  inline InvokeBindingRequest& operator=(const InvokeBindingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvokeBindingRequest(InvokeBindingRequest&& from) noexcept
    : InvokeBindingRequest() {
    *this = ::std::move(from);
  }

  inline InvokeBindingRequest& operator=(InvokeBindingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvokeBindingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvokeBindingRequest* internal_default_instance() {
    return reinterpret_cast<const InvokeBindingRequest*>(
               &_InvokeBindingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(InvokeBindingRequest* other);
  friend void swap(InvokeBindingRequest& a, InvokeBindingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvokeBindingRequest* New() const final {
    return CreateMaybeMessage<InvokeBindingRequest>(NULL);
  }

  InvokeBindingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvokeBindingRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvokeBindingRequest& from);
  void MergeFrom(const InvokeBindingRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeBindingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string operation = 4;
  void clear_operation();
  static const int kOperationFieldNumber = 4;
  const ::std::string& operation() const;
  void set_operation(const ::std::string& value);
  #if LANG_CXX11
  void set_operation(::std::string&& value);
  #endif
  void set_operation(const char* value);
  void set_operation(const char* value, size_t size);
  ::std::string* mutable_operation();
  ::std::string* release_operation();
  void set_allocated_operation(::std::string* operation);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeBindingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      InvokeBindingRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr operation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvokeBindingResponse_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<InvokeBindingResponse_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<InvokeBindingResponse_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  InvokeBindingResponse_MetadataEntry_DoNotUse();
  InvokeBindingResponse_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const InvokeBindingResponse_MetadataEntry_DoNotUse& other);
  static const InvokeBindingResponse_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const InvokeBindingResponse_MetadataEntry_DoNotUse*>(&_InvokeBindingResponse_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class InvokeBindingResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeBindingResponse) */ {
 public:
  InvokeBindingResponse();
  virtual ~InvokeBindingResponse();

  InvokeBindingResponse(const InvokeBindingResponse& from);

  inline InvokeBindingResponse& operator=(const InvokeBindingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvokeBindingResponse(InvokeBindingResponse&& from) noexcept
    : InvokeBindingResponse() {
    *this = ::std::move(from);
  }

  inline InvokeBindingResponse& operator=(InvokeBindingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvokeBindingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvokeBindingResponse* internal_default_instance() {
    return reinterpret_cast<const InvokeBindingResponse*>(
               &_InvokeBindingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(InvokeBindingResponse* other);
  friend void swap(InvokeBindingResponse& a, InvokeBindingResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvokeBindingResponse* New() const final {
    return CreateMaybeMessage<InvokeBindingResponse>(NULL);
  }

  InvokeBindingResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvokeBindingResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvokeBindingResponse& from);
  void MergeFrom(const InvokeBindingResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeBindingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 2;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeBindingResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      InvokeBindingResponse_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSecretRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetSecretRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetSecretRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetSecretRequest_MetadataEntry_DoNotUse();
  GetSecretRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetSecretRequest_MetadataEntry_DoNotUse& other);
  static const GetSecretRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetSecretRequest_MetadataEntry_DoNotUse*>(&_GetSecretRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetSecretRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetSecretRequest) */ {
 public:
  GetSecretRequest();
  virtual ~GetSecretRequest();

  GetSecretRequest(const GetSecretRequest& from);

  inline GetSecretRequest& operator=(const GetSecretRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSecretRequest(GetSecretRequest&& from) noexcept
    : GetSecretRequest() {
    *this = ::std::move(from);
  }

  inline GetSecretRequest& operator=(GetSecretRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSecretRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSecretRequest* internal_default_instance() {
    return reinterpret_cast<const GetSecretRequest*>(
               &_GetSecretRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(GetSecretRequest* other);
  friend void swap(GetSecretRequest& a, GetSecretRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSecretRequest* New() const final {
    return CreateMaybeMessage<GetSecretRequest>(NULL);
  }

  GetSecretRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSecretRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetSecretRequest& from);
  void MergeFrom(const GetSecretRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSecretRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1[json_name = "storeName"];
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetSecretRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetSecretRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSecretResponse_DataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetSecretResponse_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetSecretResponse_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetSecretResponse_DataEntry_DoNotUse();
  GetSecretResponse_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetSecretResponse_DataEntry_DoNotUse& other);
  static const GetSecretResponse_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetSecretResponse_DataEntry_DoNotUse*>(&_GetSecretResponse_DataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetSecretResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetSecretResponse) */ {
 public:
  GetSecretResponse();
  virtual ~GetSecretResponse();

  GetSecretResponse(const GetSecretResponse& from);

  inline GetSecretResponse& operator=(const GetSecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSecretResponse(GetSecretResponse&& from) noexcept
    : GetSecretResponse() {
    *this = ::std::move(from);
  }

  inline GetSecretResponse& operator=(GetSecretResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSecretResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSecretResponse* internal_default_instance() {
    return reinterpret_cast<const GetSecretResponse*>(
               &_GetSecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(GetSecretResponse* other);
  friend void swap(GetSecretResponse& a, GetSecretResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSecretResponse* New() const final {
    return CreateMaybeMessage<GetSecretResponse>(NULL);
  }

  GetSecretResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSecretResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetSecretResponse& from);
  void MergeFrom(const GetSecretResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSecretResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      data() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetSecretResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetSecretResponse_DataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBulkSecretRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetBulkSecretRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetBulkSecretRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetBulkSecretRequest_MetadataEntry_DoNotUse();
  GetBulkSecretRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetBulkSecretRequest_MetadataEntry_DoNotUse& other);
  static const GetBulkSecretRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetBulkSecretRequest_MetadataEntry_DoNotUse*>(&_GetBulkSecretRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetBulkSecretRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetBulkSecretRequest) */ {
 public:
  GetBulkSecretRequest();
  virtual ~GetBulkSecretRequest();

  GetBulkSecretRequest(const GetBulkSecretRequest& from);

  inline GetBulkSecretRequest& operator=(const GetBulkSecretRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBulkSecretRequest(GetBulkSecretRequest&& from) noexcept
    : GetBulkSecretRequest() {
    *this = ::std::move(from);
  }

  inline GetBulkSecretRequest& operator=(GetBulkSecretRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBulkSecretRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBulkSecretRequest* internal_default_instance() {
    return reinterpret_cast<const GetBulkSecretRequest*>(
               &_GetBulkSecretRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(GetBulkSecretRequest* other);
  friend void swap(GetBulkSecretRequest& a, GetBulkSecretRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBulkSecretRequest* New() const final {
    return CreateMaybeMessage<GetBulkSecretRequest>(NULL);
  }

  GetBulkSecretRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetBulkSecretRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetBulkSecretRequest& from);
  void MergeFrom(const GetBulkSecretRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBulkSecretRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 2;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1[json_name = "storeName"];
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetBulkSecretRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetBulkSecretRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SecretResponse_SecretsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SecretResponse_SecretsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SecretResponse_SecretsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  SecretResponse_SecretsEntry_DoNotUse();
  SecretResponse_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SecretResponse_SecretsEntry_DoNotUse& other);
  static const SecretResponse_SecretsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SecretResponse_SecretsEntry_DoNotUse*>(&_SecretResponse_SecretsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SecretResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SecretResponse) */ {
 public:
  SecretResponse();
  virtual ~SecretResponse();

  SecretResponse(const SecretResponse& from);

  inline SecretResponse& operator=(const SecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SecretResponse(SecretResponse&& from) noexcept
    : SecretResponse() {
    *this = ::std::move(from);
  }

  inline SecretResponse& operator=(SecretResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SecretResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SecretResponse* internal_default_instance() {
    return reinterpret_cast<const SecretResponse*>(
               &_SecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(SecretResponse* other);
  friend void swap(SecretResponse& a, SecretResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SecretResponse* New() const final {
    return CreateMaybeMessage<SecretResponse>(NULL);
  }

  SecretResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SecretResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SecretResponse& from);
  void MergeFrom(const SecretResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SecretResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> secrets = 1;
  int secrets_size() const;
  void clear_secrets();
  static const int kSecretsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      secrets() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_secrets();

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SecretResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SecretResponse_SecretsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > secrets_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBulkSecretResponse_DataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetBulkSecretResponse_DataEntry_DoNotUse, 
    ::std::string, ::dapr::proto::runtime::v1::SecretResponse,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetBulkSecretResponse_DataEntry_DoNotUse, 
    ::std::string, ::dapr::proto::runtime::v1::SecretResponse,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GetBulkSecretResponse_DataEntry_DoNotUse();
  GetBulkSecretResponse_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetBulkSecretResponse_DataEntry_DoNotUse& other);
  static const GetBulkSecretResponse_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetBulkSecretResponse_DataEntry_DoNotUse*>(&_GetBulkSecretResponse_DataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetBulkSecretResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetBulkSecretResponse) */ {
 public:
  GetBulkSecretResponse();
  virtual ~GetBulkSecretResponse();

  GetBulkSecretResponse(const GetBulkSecretResponse& from);

  inline GetBulkSecretResponse& operator=(const GetBulkSecretResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBulkSecretResponse(GetBulkSecretResponse&& from) noexcept
    : GetBulkSecretResponse() {
    *this = ::std::move(from);
  }

  inline GetBulkSecretResponse& operator=(GetBulkSecretResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBulkSecretResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBulkSecretResponse* internal_default_instance() {
    return reinterpret_cast<const GetBulkSecretResponse*>(
               &_GetBulkSecretResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(GetBulkSecretResponse* other);
  friend void swap(GetBulkSecretResponse& a, GetBulkSecretResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBulkSecretResponse* New() const final {
    return CreateMaybeMessage<GetBulkSecretResponse>(NULL);
  }

  GetBulkSecretResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetBulkSecretResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetBulkSecretResponse& from);
  void MergeFrom(const GetBulkSecretResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBulkSecretResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .dapr.proto.runtime.v1.SecretResponse> data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::dapr::proto::runtime::v1::SecretResponse >&
      data() const;
  ::google::protobuf::Map< ::std::string, ::dapr::proto::runtime::v1::SecretResponse >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetBulkSecretResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetBulkSecretResponse_DataEntry_DoNotUse,
      ::std::string, ::dapr::proto::runtime::v1::SecretResponse,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransactionalStateOperation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.TransactionalStateOperation) */ {
 public:
  TransactionalStateOperation();
  virtual ~TransactionalStateOperation();

  TransactionalStateOperation(const TransactionalStateOperation& from);

  inline TransactionalStateOperation& operator=(const TransactionalStateOperation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransactionalStateOperation(TransactionalStateOperation&& from) noexcept
    : TransactionalStateOperation() {
    *this = ::std::move(from);
  }

  inline TransactionalStateOperation& operator=(TransactionalStateOperation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionalStateOperation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransactionalStateOperation* internal_default_instance() {
    return reinterpret_cast<const TransactionalStateOperation*>(
               &_TransactionalStateOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(TransactionalStateOperation* other);
  friend void swap(TransactionalStateOperation& a, TransactionalStateOperation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransactionalStateOperation* New() const final {
    return CreateMaybeMessage<TransactionalStateOperation>(NULL);
  }

  TransactionalStateOperation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransactionalStateOperation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransactionalStateOperation& from);
  void MergeFrom(const TransactionalStateOperation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransactionalStateOperation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string operationType = 1;
  void clear_operationtype();
  static const int kOperationTypeFieldNumber = 1;
  const ::std::string& operationtype() const;
  void set_operationtype(const ::std::string& value);
  #if LANG_CXX11
  void set_operationtype(::std::string&& value);
  #endif
  void set_operationtype(const char* value);
  void set_operationtype(const char* value, size_t size);
  ::std::string* mutable_operationtype();
  ::std::string* release_operationtype();
  void set_allocated_operationtype(::std::string* operationtype);

  // .dapr.proto.common.v1.StateItem request = 2;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 2;
  private:
  const ::dapr::proto::common::v1::StateItem& _internal_request() const;
  public:
  const ::dapr::proto::common::v1::StateItem& request() const;
  ::dapr::proto::common::v1::StateItem* release_request();
  ::dapr::proto::common::v1::StateItem* mutable_request();
  void set_allocated_request(::dapr::proto::common::v1::StateItem* request);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.TransactionalStateOperation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr operationtype_;
  ::dapr::proto::common::v1::StateItem* request_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteStateTransactionRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ExecuteStateTransactionRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ExecuteStateTransactionRequest_MetadataEntry_DoNotUse();
  ExecuteStateTransactionRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ExecuteStateTransactionRequest_MetadataEntry_DoNotUse& other);
  static const ExecuteStateTransactionRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ExecuteStateTransactionRequest_MetadataEntry_DoNotUse*>(&_ExecuteStateTransactionRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ExecuteStateTransactionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.ExecuteStateTransactionRequest) */ {
 public:
  ExecuteStateTransactionRequest();
  virtual ~ExecuteStateTransactionRequest();

  ExecuteStateTransactionRequest(const ExecuteStateTransactionRequest& from);

  inline ExecuteStateTransactionRequest& operator=(const ExecuteStateTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteStateTransactionRequest(ExecuteStateTransactionRequest&& from) noexcept
    : ExecuteStateTransactionRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteStateTransactionRequest& operator=(ExecuteStateTransactionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteStateTransactionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteStateTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteStateTransactionRequest*>(
               &_ExecuteStateTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(ExecuteStateTransactionRequest* other);
  friend void swap(ExecuteStateTransactionRequest& a, ExecuteStateTransactionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteStateTransactionRequest* New() const final {
    return CreateMaybeMessage<ExecuteStateTransactionRequest>(NULL);
  }

  ExecuteStateTransactionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExecuteStateTransactionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExecuteStateTransactionRequest& from);
  void MergeFrom(const ExecuteStateTransactionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecuteStateTransactionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .dapr.proto.runtime.v1.TransactionalStateOperation operations = 2;
  int operations_size() const;
  void clear_operations();
  static const int kOperationsFieldNumber = 2;
  ::dapr::proto::runtime::v1::TransactionalStateOperation* mutable_operations(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation >*
      mutable_operations();
  const ::dapr::proto::runtime::v1::TransactionalStateOperation& operations(int index) const;
  ::dapr::proto::runtime::v1::TransactionalStateOperation* add_operations();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation >&
      operations() const;

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string storeName = 1;
  void clear_storename();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& storename() const;
  void set_storename(const ::std::string& value);
  #if LANG_CXX11
  void set_storename(::std::string&& value);
  #endif
  void set_storename(const char* value);
  void set_storename(const char* value, size_t size);
  ::std::string* mutable_storename();
  ::std::string* release_storename();
  void set_allocated_storename(::std::string* storename);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.ExecuteStateTransactionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation > operations_;
  ::google::protobuf::internal::MapField<
      ExecuteStateTransactionRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr storename_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterActorTimerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.RegisterActorTimerRequest) */ {
 public:
  RegisterActorTimerRequest();
  virtual ~RegisterActorTimerRequest();

  RegisterActorTimerRequest(const RegisterActorTimerRequest& from);

  inline RegisterActorTimerRequest& operator=(const RegisterActorTimerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterActorTimerRequest(RegisterActorTimerRequest&& from) noexcept
    : RegisterActorTimerRequest() {
    *this = ::std::move(from);
  }

  inline RegisterActorTimerRequest& operator=(RegisterActorTimerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterActorTimerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterActorTimerRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterActorTimerRequest*>(
               &_RegisterActorTimerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(RegisterActorTimerRequest* other);
  friend void swap(RegisterActorTimerRequest& a, RegisterActorTimerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterActorTimerRequest* New() const final {
    return CreateMaybeMessage<RegisterActorTimerRequest>(NULL);
  }

  RegisterActorTimerRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisterActorTimerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisterActorTimerRequest& from);
  void MergeFrom(const RegisterActorTimerRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterActorTimerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string due_time = 4;
  void clear_due_time();
  static const int kDueTimeFieldNumber = 4;
  const ::std::string& due_time() const;
  void set_due_time(const ::std::string& value);
  #if LANG_CXX11
  void set_due_time(::std::string&& value);
  #endif
  void set_due_time(const char* value);
  void set_due_time(const char* value, size_t size);
  ::std::string* mutable_due_time();
  ::std::string* release_due_time();
  void set_allocated_due_time(::std::string* due_time);

  // string period = 5;
  void clear_period();
  static const int kPeriodFieldNumber = 5;
  const ::std::string& period() const;
  void set_period(const ::std::string& value);
  #if LANG_CXX11
  void set_period(::std::string&& value);
  #endif
  void set_period(const char* value);
  void set_period(const char* value, size_t size);
  ::std::string* mutable_period();
  ::std::string* release_period();
  void set_allocated_period(::std::string* period);

  // string callback = 6;
  void clear_callback();
  static const int kCallbackFieldNumber = 6;
  const ::std::string& callback() const;
  void set_callback(const ::std::string& value);
  #if LANG_CXX11
  void set_callback(::std::string&& value);
  #endif
  void set_callback(const char* value);
  void set_callback(const char* value, size_t size);
  ::std::string* mutable_callback();
  ::std::string* release_callback();
  void set_allocated_callback(::std::string* callback);

  // bytes data = 7;
  void clear_data();
  static const int kDataFieldNumber = 7;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string ttl = 8;
  void clear_ttl();
  static const int kTtlFieldNumber = 8;
  const ::std::string& ttl() const;
  void set_ttl(const ::std::string& value);
  #if LANG_CXX11
  void set_ttl(::std::string&& value);
  #endif
  void set_ttl(const char* value);
  void set_ttl(const char* value, size_t size);
  ::std::string* mutable_ttl();
  ::std::string* release_ttl();
  void set_allocated_ttl(::std::string* ttl);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.RegisterActorTimerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr due_time_;
  ::google::protobuf::internal::ArenaStringPtr period_;
  ::google::protobuf::internal::ArenaStringPtr callback_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr ttl_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnregisterActorTimerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnregisterActorTimerRequest) */ {
 public:
  UnregisterActorTimerRequest();
  virtual ~UnregisterActorTimerRequest();

  UnregisterActorTimerRequest(const UnregisterActorTimerRequest& from);

  inline UnregisterActorTimerRequest& operator=(const UnregisterActorTimerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnregisterActorTimerRequest(UnregisterActorTimerRequest&& from) noexcept
    : UnregisterActorTimerRequest() {
    *this = ::std::move(from);
  }

  inline UnregisterActorTimerRequest& operator=(UnregisterActorTimerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnregisterActorTimerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnregisterActorTimerRequest* internal_default_instance() {
    return reinterpret_cast<const UnregisterActorTimerRequest*>(
               &_UnregisterActorTimerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(UnregisterActorTimerRequest* other);
  friend void swap(UnregisterActorTimerRequest& a, UnregisterActorTimerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnregisterActorTimerRequest* New() const final {
    return CreateMaybeMessage<UnregisterActorTimerRequest>(NULL);
  }

  UnregisterActorTimerRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnregisterActorTimerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnregisterActorTimerRequest& from);
  void MergeFrom(const UnregisterActorTimerRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnregisterActorTimerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnregisterActorTimerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterActorReminderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.RegisterActorReminderRequest) */ {
 public:
  RegisterActorReminderRequest();
  virtual ~RegisterActorReminderRequest();

  RegisterActorReminderRequest(const RegisterActorReminderRequest& from);

  inline RegisterActorReminderRequest& operator=(const RegisterActorReminderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterActorReminderRequest(RegisterActorReminderRequest&& from) noexcept
    : RegisterActorReminderRequest() {
    *this = ::std::move(from);
  }

  inline RegisterActorReminderRequest& operator=(RegisterActorReminderRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterActorReminderRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterActorReminderRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterActorReminderRequest*>(
               &_RegisterActorReminderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(RegisterActorReminderRequest* other);
  friend void swap(RegisterActorReminderRequest& a, RegisterActorReminderRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterActorReminderRequest* New() const final {
    return CreateMaybeMessage<RegisterActorReminderRequest>(NULL);
  }

  RegisterActorReminderRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisterActorReminderRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisterActorReminderRequest& from);
  void MergeFrom(const RegisterActorReminderRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterActorReminderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string due_time = 4;
  void clear_due_time();
  static const int kDueTimeFieldNumber = 4;
  const ::std::string& due_time() const;
  void set_due_time(const ::std::string& value);
  #if LANG_CXX11
  void set_due_time(::std::string&& value);
  #endif
  void set_due_time(const char* value);
  void set_due_time(const char* value, size_t size);
  ::std::string* mutable_due_time();
  ::std::string* release_due_time();
  void set_allocated_due_time(::std::string* due_time);

  // string period = 5;
  void clear_period();
  static const int kPeriodFieldNumber = 5;
  const ::std::string& period() const;
  void set_period(const ::std::string& value);
  #if LANG_CXX11
  void set_period(::std::string&& value);
  #endif
  void set_period(const char* value);
  void set_period(const char* value, size_t size);
  ::std::string* mutable_period();
  ::std::string* release_period();
  void set_allocated_period(::std::string* period);

  // bytes data = 6;
  void clear_data();
  static const int kDataFieldNumber = 6;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string ttl = 7;
  void clear_ttl();
  static const int kTtlFieldNumber = 7;
  const ::std::string& ttl() const;
  void set_ttl(const ::std::string& value);
  #if LANG_CXX11
  void set_ttl(::std::string&& value);
  #endif
  void set_ttl(const char* value);
  void set_ttl(const char* value, size_t size);
  ::std::string* mutable_ttl();
  ::std::string* release_ttl();
  void set_allocated_ttl(::std::string* ttl);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.RegisterActorReminderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr due_time_;
  ::google::protobuf::internal::ArenaStringPtr period_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr ttl_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnregisterActorReminderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnregisterActorReminderRequest) */ {
 public:
  UnregisterActorReminderRequest();
  virtual ~UnregisterActorReminderRequest();

  UnregisterActorReminderRequest(const UnregisterActorReminderRequest& from);

  inline UnregisterActorReminderRequest& operator=(const UnregisterActorReminderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnregisterActorReminderRequest(UnregisterActorReminderRequest&& from) noexcept
    : UnregisterActorReminderRequest() {
    *this = ::std::move(from);
  }

  inline UnregisterActorReminderRequest& operator=(UnregisterActorReminderRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnregisterActorReminderRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnregisterActorReminderRequest* internal_default_instance() {
    return reinterpret_cast<const UnregisterActorReminderRequest*>(
               &_UnregisterActorReminderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(UnregisterActorReminderRequest* other);
  friend void swap(UnregisterActorReminderRequest& a, UnregisterActorReminderRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnregisterActorReminderRequest* New() const final {
    return CreateMaybeMessage<UnregisterActorReminderRequest>(NULL);
  }

  UnregisterActorReminderRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnregisterActorReminderRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnregisterActorReminderRequest& from);
  void MergeFrom(const UnregisterActorReminderRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnregisterActorReminderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnregisterActorReminderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RenameActorReminderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.RenameActorReminderRequest) */ {
 public:
  RenameActorReminderRequest();
  virtual ~RenameActorReminderRequest();

  RenameActorReminderRequest(const RenameActorReminderRequest& from);

  inline RenameActorReminderRequest& operator=(const RenameActorReminderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RenameActorReminderRequest(RenameActorReminderRequest&& from) noexcept
    : RenameActorReminderRequest() {
    *this = ::std::move(from);
  }

  inline RenameActorReminderRequest& operator=(RenameActorReminderRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameActorReminderRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RenameActorReminderRequest* internal_default_instance() {
    return reinterpret_cast<const RenameActorReminderRequest*>(
               &_RenameActorReminderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(RenameActorReminderRequest* other);
  friend void swap(RenameActorReminderRequest& a, RenameActorReminderRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RenameActorReminderRequest* New() const final {
    return CreateMaybeMessage<RenameActorReminderRequest>(NULL);
  }

  RenameActorReminderRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RenameActorReminderRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RenameActorReminderRequest& from);
  void MergeFrom(const RenameActorReminderRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RenameActorReminderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string old_name = 3;
  void clear_old_name();
  static const int kOldNameFieldNumber = 3;
  const ::std::string& old_name() const;
  void set_old_name(const ::std::string& value);
  #if LANG_CXX11
  void set_old_name(::std::string&& value);
  #endif
  void set_old_name(const char* value);
  void set_old_name(const char* value, size_t size);
  ::std::string* mutable_old_name();
  ::std::string* release_old_name();
  void set_allocated_old_name(::std::string* old_name);

  // string new_name = 4;
  void clear_new_name();
  static const int kNewNameFieldNumber = 4;
  const ::std::string& new_name() const;
  void set_new_name(const ::std::string& value);
  #if LANG_CXX11
  void set_new_name(::std::string&& value);
  #endif
  void set_new_name(const char* value);
  void set_new_name(const char* value, size_t size);
  ::std::string* mutable_new_name();
  ::std::string* release_new_name();
  void set_allocated_new_name(::std::string* new_name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.RenameActorReminderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr old_name_;
  ::google::protobuf::internal::ArenaStringPtr new_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetActorStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetActorStateRequest) */ {
 public:
  GetActorStateRequest();
  virtual ~GetActorStateRequest();

  GetActorStateRequest(const GetActorStateRequest& from);

  inline GetActorStateRequest& operator=(const GetActorStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetActorStateRequest(GetActorStateRequest&& from) noexcept
    : GetActorStateRequest() {
    *this = ::std::move(from);
  }

  inline GetActorStateRequest& operator=(GetActorStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetActorStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetActorStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetActorStateRequest*>(
               &_GetActorStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(GetActorStateRequest* other);
  friend void swap(GetActorStateRequest& a, GetActorStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetActorStateRequest* New() const final {
    return CreateMaybeMessage<GetActorStateRequest>(NULL);
  }

  GetActorStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetActorStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetActorStateRequest& from);
  void MergeFrom(const GetActorStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetActorStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetActorStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetActorStateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetActorStateResponse) */ {
 public:
  GetActorStateResponse();
  virtual ~GetActorStateResponse();

  GetActorStateResponse(const GetActorStateResponse& from);

  inline GetActorStateResponse& operator=(const GetActorStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetActorStateResponse(GetActorStateResponse&& from) noexcept
    : GetActorStateResponse() {
    *this = ::std::move(from);
  }

  inline GetActorStateResponse& operator=(GetActorStateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetActorStateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetActorStateResponse* internal_default_instance() {
    return reinterpret_cast<const GetActorStateResponse*>(
               &_GetActorStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(GetActorStateResponse* other);
  friend void swap(GetActorStateResponse& a, GetActorStateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetActorStateResponse* New() const final {
    return CreateMaybeMessage<GetActorStateResponse>(NULL);
  }

  GetActorStateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetActorStateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetActorStateResponse& from);
  void MergeFrom(const GetActorStateResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetActorStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetActorStateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteActorStateTransactionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest) */ {
 public:
  ExecuteActorStateTransactionRequest();
  virtual ~ExecuteActorStateTransactionRequest();

  ExecuteActorStateTransactionRequest(const ExecuteActorStateTransactionRequest& from);

  inline ExecuteActorStateTransactionRequest& operator=(const ExecuteActorStateTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteActorStateTransactionRequest(ExecuteActorStateTransactionRequest&& from) noexcept
    : ExecuteActorStateTransactionRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteActorStateTransactionRequest& operator=(ExecuteActorStateTransactionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteActorStateTransactionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteActorStateTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteActorStateTransactionRequest*>(
               &_ExecuteActorStateTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(ExecuteActorStateTransactionRequest* other);
  friend void swap(ExecuteActorStateTransactionRequest& a, ExecuteActorStateTransactionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteActorStateTransactionRequest* New() const final {
    return CreateMaybeMessage<ExecuteActorStateTransactionRequest>(NULL);
  }

  ExecuteActorStateTransactionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExecuteActorStateTransactionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExecuteActorStateTransactionRequest& from);
  void MergeFrom(const ExecuteActorStateTransactionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecuteActorStateTransactionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dapr.proto.runtime.v1.TransactionalActorStateOperation operations = 3;
  int operations_size() const;
  void clear_operations();
  static const int kOperationsFieldNumber = 3;
  ::dapr::proto::runtime::v1::TransactionalActorStateOperation* mutable_operations(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >*
      mutable_operations();
  const ::dapr::proto::runtime::v1::TransactionalActorStateOperation& operations(int index) const;
  ::dapr::proto::runtime::v1::TransactionalActorStateOperation* add_operations();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >&
      operations() const;

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation > operations_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransactionalActorStateOperation_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TransactionalActorStateOperation_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<TransactionalActorStateOperation_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  TransactionalActorStateOperation_MetadataEntry_DoNotUse();
  TransactionalActorStateOperation_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TransactionalActorStateOperation_MetadataEntry_DoNotUse& other);
  static const TransactionalActorStateOperation_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TransactionalActorStateOperation_MetadataEntry_DoNotUse*>(&_TransactionalActorStateOperation_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class TransactionalActorStateOperation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.TransactionalActorStateOperation) */ {
 public:
  TransactionalActorStateOperation();
  virtual ~TransactionalActorStateOperation();

  TransactionalActorStateOperation(const TransactionalActorStateOperation& from);

  inline TransactionalActorStateOperation& operator=(const TransactionalActorStateOperation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransactionalActorStateOperation(TransactionalActorStateOperation&& from) noexcept
    : TransactionalActorStateOperation() {
    *this = ::std::move(from);
  }

  inline TransactionalActorStateOperation& operator=(TransactionalActorStateOperation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransactionalActorStateOperation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransactionalActorStateOperation* internal_default_instance() {
    return reinterpret_cast<const TransactionalActorStateOperation*>(
               &_TransactionalActorStateOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(TransactionalActorStateOperation* other);
  friend void swap(TransactionalActorStateOperation& a, TransactionalActorStateOperation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransactionalActorStateOperation* New() const final {
    return CreateMaybeMessage<TransactionalActorStateOperation>(NULL);
  }

  TransactionalActorStateOperation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransactionalActorStateOperation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransactionalActorStateOperation& from);
  void MergeFrom(const TransactionalActorStateOperation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransactionalActorStateOperation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 4;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string operationType = 1;
  void clear_operationtype();
  static const int kOperationTypeFieldNumber = 1;
  const ::std::string& operationtype() const;
  void set_operationtype(const ::std::string& value);
  #if LANG_CXX11
  void set_operationtype(::std::string&& value);
  #endif
  void set_operationtype(const char* value);
  void set_operationtype(const char* value, size_t size);
  ::std::string* mutable_operationtype();
  ::std::string* release_operationtype();
  void set_allocated_operationtype(::std::string* operationtype);

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // .google.protobuf.Any value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  private:
  const ::google::protobuf::Any& _internal_value() const;
  public:
  const ::google::protobuf::Any& value() const;
  ::google::protobuf::Any* release_value();
  ::google::protobuf::Any* mutable_value();
  void set_allocated_value(::google::protobuf::Any* value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.TransactionalActorStateOperation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      TransactionalActorStateOperation_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr operationtype_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::Any* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvokeActorRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<InvokeActorRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<InvokeActorRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  InvokeActorRequest_MetadataEntry_DoNotUse();
  InvokeActorRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const InvokeActorRequest_MetadataEntry_DoNotUse& other);
  static const InvokeActorRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const InvokeActorRequest_MetadataEntry_DoNotUse*>(&_InvokeActorRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class InvokeActorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeActorRequest) */ {
 public:
  InvokeActorRequest();
  virtual ~InvokeActorRequest();

  InvokeActorRequest(const InvokeActorRequest& from);

  inline InvokeActorRequest& operator=(const InvokeActorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvokeActorRequest(InvokeActorRequest&& from) noexcept
    : InvokeActorRequest() {
    *this = ::std::move(from);
  }

  inline InvokeActorRequest& operator=(InvokeActorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvokeActorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvokeActorRequest* internal_default_instance() {
    return reinterpret_cast<const InvokeActorRequest*>(
               &_InvokeActorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(InvokeActorRequest* other);
  friend void swap(InvokeActorRequest& a, InvokeActorRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvokeActorRequest* New() const final {
    return CreateMaybeMessage<InvokeActorRequest>(NULL);
  }

  InvokeActorRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvokeActorRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvokeActorRequest& from);
  void MergeFrom(const InvokeActorRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeActorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 5;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string actor_type = 1;
  void clear_actor_type();
  static const int kActorTypeFieldNumber = 1;
  const ::std::string& actor_type() const;
  void set_actor_type(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_type(::std::string&& value);
  #endif
  void set_actor_type(const char* value);
  void set_actor_type(const char* value, size_t size);
  ::std::string* mutable_actor_type();
  ::std::string* release_actor_type();
  void set_allocated_actor_type(::std::string* actor_type);

  // string actor_id = 2;
  void clear_actor_id();
  static const int kActorIdFieldNumber = 2;
  const ::std::string& actor_id() const;
  void set_actor_id(const ::std::string& value);
  #if LANG_CXX11
  void set_actor_id(::std::string&& value);
  #endif
  void set_actor_id(const char* value);
  void set_actor_id(const char* value, size_t size);
  ::std::string* mutable_actor_id();
  ::std::string* release_actor_id();
  void set_allocated_actor_id(::std::string* actor_id);

  // string method = 3;
  void clear_method();
  static const int kMethodFieldNumber = 3;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // bytes data = 4;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeActorRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      InvokeActorRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr actor_type_;
  ::google::protobuf::internal::ArenaStringPtr actor_id_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvokeActorResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.InvokeActorResponse) */ {
 public:
  InvokeActorResponse();
  virtual ~InvokeActorResponse();

  InvokeActorResponse(const InvokeActorResponse& from);

  inline InvokeActorResponse& operator=(const InvokeActorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvokeActorResponse(InvokeActorResponse&& from) noexcept
    : InvokeActorResponse() {
    *this = ::std::move(from);
  }

  inline InvokeActorResponse& operator=(InvokeActorResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvokeActorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvokeActorResponse* internal_default_instance() {
    return reinterpret_cast<const InvokeActorResponse*>(
               &_InvokeActorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(InvokeActorResponse* other);
  friend void swap(InvokeActorResponse& a, InvokeActorResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvokeActorResponse* New() const final {
    return CreateMaybeMessage<InvokeActorResponse>(NULL);
  }

  InvokeActorResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InvokeActorResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InvokeActorResponse& from);
  void MergeFrom(const InvokeActorResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvokeActorResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.InvokeActorResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMetadataResponse_ExtendedMetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetMetadataResponse_ExtendedMetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetMetadataResponse_ExtendedMetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetMetadataResponse_ExtendedMetadataEntry_DoNotUse();
  GetMetadataResponse_ExtendedMetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetMetadataResponse_ExtendedMetadataEntry_DoNotUse& other);
  static const GetMetadataResponse_ExtendedMetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetMetadataResponse_ExtendedMetadataEntry_DoNotUse*>(&_GetMetadataResponse_ExtendedMetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetMetadataResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetMetadataResponse) */ {
 public:
  GetMetadataResponse();
  virtual ~GetMetadataResponse();

  GetMetadataResponse(const GetMetadataResponse& from);

  inline GetMetadataResponse& operator=(const GetMetadataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMetadataResponse(GetMetadataResponse&& from) noexcept
    : GetMetadataResponse() {
    *this = ::std::move(from);
  }

  inline GetMetadataResponse& operator=(GetMetadataResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMetadataResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMetadataResponse* internal_default_instance() {
    return reinterpret_cast<const GetMetadataResponse*>(
               &_GetMetadataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(GetMetadataResponse* other);
  friend void swap(GetMetadataResponse& a, GetMetadataResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMetadataResponse* New() const final {
    return CreateMaybeMessage<GetMetadataResponse>(NULL);
  }

  GetMetadataResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMetadataResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMetadataResponse& from);
  void MergeFrom(const GetMetadataResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMetadataResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .dapr.proto.runtime.v1.ActiveActorsCount active_actors_count = 2;
  int active_actors_count_size() const;
  void clear_active_actors_count();
  static const int kActiveActorsCountFieldNumber = 2;
  ::dapr::proto::runtime::v1::ActiveActorsCount* mutable_active_actors_count(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount >*
      mutable_active_actors_count();
  const ::dapr::proto::runtime::v1::ActiveActorsCount& active_actors_count(int index) const;
  ::dapr::proto::runtime::v1::ActiveActorsCount* add_active_actors_count();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount >&
      active_actors_count() const;

  // repeated .dapr.proto.runtime.v1.RegisteredComponents registered_components = 3;
  int registered_components_size() const;
  void clear_registered_components();
  static const int kRegisteredComponentsFieldNumber = 3;
  ::dapr::proto::runtime::v1::RegisteredComponents* mutable_registered_components(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::RegisteredComponents >*
      mutable_registered_components();
  const ::dapr::proto::runtime::v1::RegisteredComponents& registered_components(int index) const;
  ::dapr::proto::runtime::v1::RegisteredComponents* add_registered_components();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::RegisteredComponents >&
      registered_components() const;

  // map<string, string> extended_metadata = 4;
  int extended_metadata_size() const;
  void clear_extended_metadata();
  static const int kExtendedMetadataFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      extended_metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_extended_metadata();

  // repeated .dapr.proto.runtime.v1.PubsubSubscription subscriptions = 5;
  int subscriptions_size() const;
  void clear_subscriptions();
  static const int kSubscriptionsFieldNumber = 5;
  ::dapr::proto::runtime::v1::PubsubSubscription* mutable_subscriptions(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscription >*
      mutable_subscriptions();
  const ::dapr::proto::runtime::v1::PubsubSubscription& subscriptions(int index) const;
  ::dapr::proto::runtime::v1::PubsubSubscription* add_subscriptions();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscription >&
      subscriptions() const;

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetMetadataResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount > active_actors_count_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::RegisteredComponents > registered_components_;
  ::google::protobuf::internal::MapField<
      GetMetadataResponse_ExtendedMetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > extended_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscription > subscriptions_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActiveActorsCount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.ActiveActorsCount) */ {
 public:
  ActiveActorsCount();
  virtual ~ActiveActorsCount();

  ActiveActorsCount(const ActiveActorsCount& from);

  inline ActiveActorsCount& operator=(const ActiveActorsCount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActiveActorsCount(ActiveActorsCount&& from) noexcept
    : ActiveActorsCount() {
    *this = ::std::move(from);
  }

  inline ActiveActorsCount& operator=(ActiveActorsCount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveActorsCount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActiveActorsCount* internal_default_instance() {
    return reinterpret_cast<const ActiveActorsCount*>(
               &_ActiveActorsCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(ActiveActorsCount* other);
  friend void swap(ActiveActorsCount& a, ActiveActorsCount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActiveActorsCount* New() const final {
    return CreateMaybeMessage<ActiveActorsCount>(NULL);
  }

  ActiveActorsCount* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActiveActorsCount>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActiveActorsCount& from);
  void MergeFrom(const ActiveActorsCount& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActiveActorsCount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // int32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.ActiveActorsCount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::int32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisteredComponents : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.RegisteredComponents) */ {
 public:
  RegisteredComponents();
  virtual ~RegisteredComponents();

  RegisteredComponents(const RegisteredComponents& from);

  inline RegisteredComponents& operator=(const RegisteredComponents& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisteredComponents(RegisteredComponents&& from) noexcept
    : RegisteredComponents() {
    *this = ::std::move(from);
  }

  inline RegisteredComponents& operator=(RegisteredComponents&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisteredComponents& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisteredComponents* internal_default_instance() {
    return reinterpret_cast<const RegisteredComponents*>(
               &_RegisteredComponents_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(RegisteredComponents* other);
  friend void swap(RegisteredComponents& a, RegisteredComponents& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisteredComponents* New() const final {
    return CreateMaybeMessage<RegisteredComponents>(NULL);
  }

  RegisteredComponents* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisteredComponents>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisteredComponents& from);
  void MergeFrom(const RegisteredComponents& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisteredComponents* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string capabilities = 4;
  int capabilities_size() const;
  void clear_capabilities();
  static const int kCapabilitiesFieldNumber = 4;
  const ::std::string& capabilities(int index) const;
  ::std::string* mutable_capabilities(int index);
  void set_capabilities(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_capabilities(int index, ::std::string&& value);
  #endif
  void set_capabilities(int index, const char* value);
  void set_capabilities(int index, const char* value, size_t size);
  ::std::string* add_capabilities();
  void add_capabilities(const ::std::string& value);
  #if LANG_CXX11
  void add_capabilities(::std::string&& value);
  #endif
  void add_capabilities(const char* value);
  void add_capabilities(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& capabilities() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_capabilities();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.RegisteredComponents)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> capabilities_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PubsubSubscription_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PubsubSubscription_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PubsubSubscription_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  PubsubSubscription_MetadataEntry_DoNotUse();
  PubsubSubscription_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PubsubSubscription_MetadataEntry_DoNotUse& other);
  static const PubsubSubscription_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PubsubSubscription_MetadataEntry_DoNotUse*>(&_PubsubSubscription_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PubsubSubscription : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PubsubSubscription) */ {
 public:
  PubsubSubscription();
  virtual ~PubsubSubscription();

  PubsubSubscription(const PubsubSubscription& from);

  inline PubsubSubscription& operator=(const PubsubSubscription& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PubsubSubscription(PubsubSubscription&& from) noexcept
    : PubsubSubscription() {
    *this = ::std::move(from);
  }

  inline PubsubSubscription& operator=(PubsubSubscription&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PubsubSubscription& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PubsubSubscription* internal_default_instance() {
    return reinterpret_cast<const PubsubSubscription*>(
               &_PubsubSubscription_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(PubsubSubscription* other);
  friend void swap(PubsubSubscription& a, PubsubSubscription& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PubsubSubscription* New() const final {
    return CreateMaybeMessage<PubsubSubscription>(NULL);
  }

  PubsubSubscription* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PubsubSubscription>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PubsubSubscription& from);
  void MergeFrom(const PubsubSubscription& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PubsubSubscription* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string pubsub_name = 1;
  void clear_pubsub_name();
  static const int kPubsubNameFieldNumber = 1;
  const ::std::string& pubsub_name() const;
  void set_pubsub_name(const ::std::string& value);
  #if LANG_CXX11
  void set_pubsub_name(::std::string&& value);
  #endif
  void set_pubsub_name(const char* value);
  void set_pubsub_name(const char* value, size_t size);
  ::std::string* mutable_pubsub_name();
  ::std::string* release_pubsub_name();
  void set_allocated_pubsub_name(::std::string* pubsub_name);

  // string topic = 2;
  void clear_topic();
  static const int kTopicFieldNumber = 2;
  const ::std::string& topic() const;
  void set_topic(const ::std::string& value);
  #if LANG_CXX11
  void set_topic(::std::string&& value);
  #endif
  void set_topic(const char* value);
  void set_topic(const char* value, size_t size);
  ::std::string* mutable_topic();
  ::std::string* release_topic();
  void set_allocated_topic(::std::string* topic);

  // string dead_letter_topic = 5;
  void clear_dead_letter_topic();
  static const int kDeadLetterTopicFieldNumber = 5;
  const ::std::string& dead_letter_topic() const;
  void set_dead_letter_topic(const ::std::string& value);
  #if LANG_CXX11
  void set_dead_letter_topic(::std::string&& value);
  #endif
  void set_dead_letter_topic(const char* value);
  void set_dead_letter_topic(const char* value, size_t size);
  ::std::string* mutable_dead_letter_topic();
  ::std::string* release_dead_letter_topic();
  void set_allocated_dead_letter_topic(::std::string* dead_letter_topic);

  // .dapr.proto.runtime.v1.PubsubSubscriptionRules rules = 4;
  bool has_rules() const;
  void clear_rules();
  static const int kRulesFieldNumber = 4;
  private:
  const ::dapr::proto::runtime::v1::PubsubSubscriptionRules& _internal_rules() const;
  public:
  const ::dapr::proto::runtime::v1::PubsubSubscriptionRules& rules() const;
  ::dapr::proto::runtime::v1::PubsubSubscriptionRules* release_rules();
  ::dapr::proto::runtime::v1::PubsubSubscriptionRules* mutable_rules();
  void set_allocated_rules(::dapr::proto::runtime::v1::PubsubSubscriptionRules* rules);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PubsubSubscription)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PubsubSubscription_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr pubsub_name_;
  ::google::protobuf::internal::ArenaStringPtr topic_;
  ::google::protobuf::internal::ArenaStringPtr dead_letter_topic_;
  ::dapr::proto::runtime::v1::PubsubSubscriptionRules* rules_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PubsubSubscriptionRules : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PubsubSubscriptionRules) */ {
 public:
  PubsubSubscriptionRules();
  virtual ~PubsubSubscriptionRules();

  PubsubSubscriptionRules(const PubsubSubscriptionRules& from);

  inline PubsubSubscriptionRules& operator=(const PubsubSubscriptionRules& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PubsubSubscriptionRules(PubsubSubscriptionRules&& from) noexcept
    : PubsubSubscriptionRules() {
    *this = ::std::move(from);
  }

  inline PubsubSubscriptionRules& operator=(PubsubSubscriptionRules&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PubsubSubscriptionRules& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PubsubSubscriptionRules* internal_default_instance() {
    return reinterpret_cast<const PubsubSubscriptionRules*>(
               &_PubsubSubscriptionRules_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(PubsubSubscriptionRules* other);
  friend void swap(PubsubSubscriptionRules& a, PubsubSubscriptionRules& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PubsubSubscriptionRules* New() const final {
    return CreateMaybeMessage<PubsubSubscriptionRules>(NULL);
  }

  PubsubSubscriptionRules* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PubsubSubscriptionRules>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PubsubSubscriptionRules& from);
  void MergeFrom(const PubsubSubscriptionRules& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PubsubSubscriptionRules* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dapr.proto.runtime.v1.PubsubSubscriptionRule rules = 1;
  int rules_size() const;
  void clear_rules();
  static const int kRulesFieldNumber = 1;
  ::dapr::proto::runtime::v1::PubsubSubscriptionRule* mutable_rules(int index);
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscriptionRule >*
      mutable_rules();
  const ::dapr::proto::runtime::v1::PubsubSubscriptionRule& rules(int index) const;
  ::dapr::proto::runtime::v1::PubsubSubscriptionRule* add_rules();
  const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscriptionRule >&
      rules() const;

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PubsubSubscriptionRules)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscriptionRule > rules_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PubsubSubscriptionRule : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PubsubSubscriptionRule) */ {
 public:
  PubsubSubscriptionRule();
  virtual ~PubsubSubscriptionRule();

  PubsubSubscriptionRule(const PubsubSubscriptionRule& from);

  inline PubsubSubscriptionRule& operator=(const PubsubSubscriptionRule& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PubsubSubscriptionRule(PubsubSubscriptionRule&& from) noexcept
    : PubsubSubscriptionRule() {
    *this = ::std::move(from);
  }

  inline PubsubSubscriptionRule& operator=(PubsubSubscriptionRule&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PubsubSubscriptionRule& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PubsubSubscriptionRule* internal_default_instance() {
    return reinterpret_cast<const PubsubSubscriptionRule*>(
               &_PubsubSubscriptionRule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(PubsubSubscriptionRule* other);
  friend void swap(PubsubSubscriptionRule& a, PubsubSubscriptionRule& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PubsubSubscriptionRule* New() const final {
    return CreateMaybeMessage<PubsubSubscriptionRule>(NULL);
  }

  PubsubSubscriptionRule* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PubsubSubscriptionRule>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PubsubSubscriptionRule& from);
  void MergeFrom(const PubsubSubscriptionRule& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PubsubSubscriptionRule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string match = 1;
  void clear_match();
  static const int kMatchFieldNumber = 1;
  const ::std::string& match() const;
  void set_match(const ::std::string& value);
  #if LANG_CXX11
  void set_match(::std::string&& value);
  #endif
  void set_match(const char* value);
  void set_match(const char* value, size_t size);
  ::std::string* mutable_match();
  ::std::string* release_match();
  void set_allocated_match(::std::string* match);

  // string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PubsubSubscriptionRule)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr match_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetMetadataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SetMetadataRequest) */ {
 public:
  SetMetadataRequest();
  virtual ~SetMetadataRequest();

  SetMetadataRequest(const SetMetadataRequest& from);

  inline SetMetadataRequest& operator=(const SetMetadataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetMetadataRequest(SetMetadataRequest&& from) noexcept
    : SetMetadataRequest() {
    *this = ::std::move(from);
  }

  inline SetMetadataRequest& operator=(SetMetadataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetMetadataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetMetadataRequest* internal_default_instance() {
    return reinterpret_cast<const SetMetadataRequest*>(
               &_SetMetadataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(SetMetadataRequest* other);
  friend void swap(SetMetadataRequest& a, SetMetadataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetMetadataRequest* New() const final {
    return CreateMaybeMessage<SetMetadataRequest>(NULL);
  }

  SetMetadataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetMetadataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetMetadataRequest& from);
  void MergeFrom(const SetMetadataRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMetadataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SetMetadataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetConfigurationRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetConfigurationRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetConfigurationRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetConfigurationRequest_MetadataEntry_DoNotUse();
  GetConfigurationRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetConfigurationRequest_MetadataEntry_DoNotUse& other);
  static const GetConfigurationRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetConfigurationRequest_MetadataEntry_DoNotUse*>(&_GetConfigurationRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetConfigurationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetConfigurationRequest) */ {
 public:
  GetConfigurationRequest();
  virtual ~GetConfigurationRequest();

  GetConfigurationRequest(const GetConfigurationRequest& from);

  inline GetConfigurationRequest& operator=(const GetConfigurationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetConfigurationRequest(GetConfigurationRequest&& from) noexcept
    : GetConfigurationRequest() {
    *this = ::std::move(from);
  }

  inline GetConfigurationRequest& operator=(GetConfigurationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetConfigurationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetConfigurationRequest* internal_default_instance() {
    return reinterpret_cast<const GetConfigurationRequest*>(
               &_GetConfigurationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(GetConfigurationRequest* other);
  friend void swap(GetConfigurationRequest& a, GetConfigurationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetConfigurationRequest* New() const final {
    return CreateMaybeMessage<GetConfigurationRequest>(NULL);
  }

  GetConfigurationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetConfigurationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetConfigurationRequest& from);
  void MergeFrom(const GetConfigurationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetConfigurationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string keys = 2;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 2;
  const ::std::string& keys(int index) const;
  ::std::string* mutable_keys(int index);
  void set_keys(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_keys(int index, ::std::string&& value);
  #endif
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, size_t size);
  ::std::string* add_keys();
  void add_keys(const ::std::string& value);
  #if LANG_CXX11
  void add_keys(::std::string&& value);
  #endif
  void add_keys(const char* value);
  void add_keys(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetConfigurationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;
  ::google::protobuf::internal::MapField<
      GetConfigurationRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetConfigurationResponse_ItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetConfigurationResponse_ItemsEntry_DoNotUse, 
    ::std::string, ::dapr::proto::common::v1::ConfigurationItem,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetConfigurationResponse_ItemsEntry_DoNotUse, 
    ::std::string, ::dapr::proto::common::v1::ConfigurationItem,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GetConfigurationResponse_ItemsEntry_DoNotUse();
  GetConfigurationResponse_ItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetConfigurationResponse_ItemsEntry_DoNotUse& other);
  static const GetConfigurationResponse_ItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetConfigurationResponse_ItemsEntry_DoNotUse*>(&_GetConfigurationResponse_ItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetConfigurationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetConfigurationResponse) */ {
 public:
  GetConfigurationResponse();
  virtual ~GetConfigurationResponse();

  GetConfigurationResponse(const GetConfigurationResponse& from);

  inline GetConfigurationResponse& operator=(const GetConfigurationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetConfigurationResponse(GetConfigurationResponse&& from) noexcept
    : GetConfigurationResponse() {
    *this = ::std::move(from);
  }

  inline GetConfigurationResponse& operator=(GetConfigurationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetConfigurationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetConfigurationResponse* internal_default_instance() {
    return reinterpret_cast<const GetConfigurationResponse*>(
               &_GetConfigurationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(GetConfigurationResponse* other);
  friend void swap(GetConfigurationResponse& a, GetConfigurationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetConfigurationResponse* New() const final {
    return CreateMaybeMessage<GetConfigurationResponse>(NULL);
  }

  GetConfigurationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetConfigurationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetConfigurationResponse& from);
  void MergeFrom(const GetConfigurationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetConfigurationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .dapr.proto.common.v1.ConfigurationItem> items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::dapr::proto::common::v1::ConfigurationItem >&
      items() const;
  ::google::protobuf::Map< ::std::string, ::dapr::proto::common::v1::ConfigurationItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetConfigurationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetConfigurationResponse_ItemsEntry_DoNotUse,
      ::std::string, ::dapr::proto::common::v1::ConfigurationItem,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > items_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubscribeConfigurationRequest_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SubscribeConfigurationRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SubscribeConfigurationRequest_MetadataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  SubscribeConfigurationRequest_MetadataEntry_DoNotUse();
  SubscribeConfigurationRequest_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SubscribeConfigurationRequest_MetadataEntry_DoNotUse& other);
  static const SubscribeConfigurationRequest_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SubscribeConfigurationRequest_MetadataEntry_DoNotUse*>(&_SubscribeConfigurationRequest_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SubscribeConfigurationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubscribeConfigurationRequest) */ {
 public:
  SubscribeConfigurationRequest();
  virtual ~SubscribeConfigurationRequest();

  SubscribeConfigurationRequest(const SubscribeConfigurationRequest& from);

  inline SubscribeConfigurationRequest& operator=(const SubscribeConfigurationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubscribeConfigurationRequest(SubscribeConfigurationRequest&& from) noexcept
    : SubscribeConfigurationRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeConfigurationRequest& operator=(SubscribeConfigurationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeConfigurationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscribeConfigurationRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeConfigurationRequest*>(
               &_SubscribeConfigurationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(SubscribeConfigurationRequest* other);
  friend void swap(SubscribeConfigurationRequest& a, SubscribeConfigurationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubscribeConfigurationRequest* New() const final {
    return CreateMaybeMessage<SubscribeConfigurationRequest>(NULL);
  }

  SubscribeConfigurationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubscribeConfigurationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubscribeConfigurationRequest& from);
  void MergeFrom(const SubscribeConfigurationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribeConfigurationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string keys = 2;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 2;
  const ::std::string& keys(int index) const;
  ::std::string* mutable_keys(int index);
  void set_keys(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_keys(int index, ::std::string&& value);
  #endif
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, size_t size);
  ::std::string* add_keys();
  void add_keys(const ::std::string& value);
  #if LANG_CXX11
  void add_keys(::std::string&& value);
  #endif
  void add_keys(const char* value);
  void add_keys(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

  // map<string, string> metadata = 3;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_metadata();

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubscribeConfigurationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;
  ::google::protobuf::internal::MapField<
      SubscribeConfigurationRequest_MetadataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnsubscribeConfigurationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest) */ {
 public:
  UnsubscribeConfigurationRequest();
  virtual ~UnsubscribeConfigurationRequest();

  UnsubscribeConfigurationRequest(const UnsubscribeConfigurationRequest& from);

  inline UnsubscribeConfigurationRequest& operator=(const UnsubscribeConfigurationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnsubscribeConfigurationRequest(UnsubscribeConfigurationRequest&& from) noexcept
    : UnsubscribeConfigurationRequest() {
    *this = ::std::move(from);
  }

  inline UnsubscribeConfigurationRequest& operator=(UnsubscribeConfigurationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsubscribeConfigurationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsubscribeConfigurationRequest* internal_default_instance() {
    return reinterpret_cast<const UnsubscribeConfigurationRequest*>(
               &_UnsubscribeConfigurationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(UnsubscribeConfigurationRequest* other);
  friend void swap(UnsubscribeConfigurationRequest& a, UnsubscribeConfigurationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnsubscribeConfigurationRequest* New() const final {
    return CreateMaybeMessage<UnsubscribeConfigurationRequest>(NULL);
  }

  UnsubscribeConfigurationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnsubscribeConfigurationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnsubscribeConfigurationRequest& from);
  void MergeFrom(const UnsubscribeConfigurationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsubscribeConfigurationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string store_name = 1;
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubscribeConfigurationResponse_ItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SubscribeConfigurationResponse_ItemsEntry_DoNotUse, 
    ::std::string, ::dapr::proto::common::v1::ConfigurationItem,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SubscribeConfigurationResponse_ItemsEntry_DoNotUse, 
    ::std::string, ::dapr::proto::common::v1::ConfigurationItem,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SubscribeConfigurationResponse_ItemsEntry_DoNotUse();
  SubscribeConfigurationResponse_ItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SubscribeConfigurationResponse_ItemsEntry_DoNotUse& other);
  static const SubscribeConfigurationResponse_ItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SubscribeConfigurationResponse_ItemsEntry_DoNotUse*>(&_SubscribeConfigurationResponse_ItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SubscribeConfigurationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubscribeConfigurationResponse) */ {
 public:
  SubscribeConfigurationResponse();
  virtual ~SubscribeConfigurationResponse();

  SubscribeConfigurationResponse(const SubscribeConfigurationResponse& from);

  inline SubscribeConfigurationResponse& operator=(const SubscribeConfigurationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubscribeConfigurationResponse(SubscribeConfigurationResponse&& from) noexcept
    : SubscribeConfigurationResponse() {
    *this = ::std::move(from);
  }

  inline SubscribeConfigurationResponse& operator=(SubscribeConfigurationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeConfigurationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubscribeConfigurationResponse* internal_default_instance() {
    return reinterpret_cast<const SubscribeConfigurationResponse*>(
               &_SubscribeConfigurationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(SubscribeConfigurationResponse* other);
  friend void swap(SubscribeConfigurationResponse& a, SubscribeConfigurationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubscribeConfigurationResponse* New() const final {
    return CreateMaybeMessage<SubscribeConfigurationResponse>(NULL);
  }

  SubscribeConfigurationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubscribeConfigurationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubscribeConfigurationResponse& from);
  void MergeFrom(const SubscribeConfigurationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubscribeConfigurationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .dapr.proto.common.v1.ConfigurationItem> items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::dapr::proto::common::v1::ConfigurationItem >&
      items() const;
  ::google::protobuf::Map< ::std::string, ::dapr::proto::common::v1::ConfigurationItem >*
      mutable_items();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubscribeConfigurationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SubscribeConfigurationResponse_ItemsEntry_DoNotUse,
      ::std::string, ::dapr::proto::common::v1::ConfigurationItem,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > items_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnsubscribeConfigurationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse) */ {
 public:
  UnsubscribeConfigurationResponse();
  virtual ~UnsubscribeConfigurationResponse();

  UnsubscribeConfigurationResponse(const UnsubscribeConfigurationResponse& from);

  inline UnsubscribeConfigurationResponse& operator=(const UnsubscribeConfigurationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnsubscribeConfigurationResponse(UnsubscribeConfigurationResponse&& from) noexcept
    : UnsubscribeConfigurationResponse() {
    *this = ::std::move(from);
  }

  inline UnsubscribeConfigurationResponse& operator=(UnsubscribeConfigurationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsubscribeConfigurationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsubscribeConfigurationResponse* internal_default_instance() {
    return reinterpret_cast<const UnsubscribeConfigurationResponse*>(
               &_UnsubscribeConfigurationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(UnsubscribeConfigurationResponse* other);
  friend void swap(UnsubscribeConfigurationResponse& a, UnsubscribeConfigurationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnsubscribeConfigurationResponse* New() const final {
    return CreateMaybeMessage<UnsubscribeConfigurationResponse>(NULL);
  }

  UnsubscribeConfigurationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnsubscribeConfigurationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnsubscribeConfigurationResponse& from);
  void MergeFrom(const UnsubscribeConfigurationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnsubscribeConfigurationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // bool ok = 1;
  void clear_ok();
  static const int kOkFieldNumber = 1;
  bool ok() const;
  void set_ok(bool value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  bool ok_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TryLockRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.TryLockRequest) */ {
 public:
  TryLockRequest();
  virtual ~TryLockRequest();

  TryLockRequest(const TryLockRequest& from);

  inline TryLockRequest& operator=(const TryLockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TryLockRequest(TryLockRequest&& from) noexcept
    : TryLockRequest() {
    *this = ::std::move(from);
  }

  inline TryLockRequest& operator=(TryLockRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TryLockRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TryLockRequest* internal_default_instance() {
    return reinterpret_cast<const TryLockRequest*>(
               &_TryLockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(TryLockRequest* other);
  friend void swap(TryLockRequest& a, TryLockRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TryLockRequest* New() const final {
    return CreateMaybeMessage<TryLockRequest>(NULL);
  }

  TryLockRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TryLockRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TryLockRequest& from);
  void MergeFrom(const TryLockRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TryLockRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string store_name = 1[json_name = "storeName"];
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string resource_id = 2[json_name = "resourceId"];
  void clear_resource_id();
  static const int kResourceIdFieldNumber = 2;
  const ::std::string& resource_id() const;
  void set_resource_id(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_id(::std::string&& value);
  #endif
  void set_resource_id(const char* value);
  void set_resource_id(const char* value, size_t size);
  ::std::string* mutable_resource_id();
  ::std::string* release_resource_id();
  void set_allocated_resource_id(::std::string* resource_id);

  // string lock_owner = 3[json_name = "lockOwner"];
  void clear_lock_owner();
  static const int kLockOwnerFieldNumber = 3;
  const ::std::string& lock_owner() const;
  void set_lock_owner(const ::std::string& value);
  #if LANG_CXX11
  void set_lock_owner(::std::string&& value);
  #endif
  void set_lock_owner(const char* value);
  void set_lock_owner(const char* value, size_t size);
  ::std::string* mutable_lock_owner();
  ::std::string* release_lock_owner();
  void set_allocated_lock_owner(::std::string* lock_owner);

  // int32 expiry_in_seconds = 4[json_name = "expiryInSeconds"];
  void clear_expiry_in_seconds();
  static const int kExpiryInSecondsFieldNumber = 4;
  ::google::protobuf::int32 expiry_in_seconds() const;
  void set_expiry_in_seconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.TryLockRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr resource_id_;
  ::google::protobuf::internal::ArenaStringPtr lock_owner_;
  ::google::protobuf::int32 expiry_in_seconds_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TryLockResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.TryLockResponse) */ {
 public:
  TryLockResponse();
  virtual ~TryLockResponse();

  TryLockResponse(const TryLockResponse& from);

  inline TryLockResponse& operator=(const TryLockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TryLockResponse(TryLockResponse&& from) noexcept
    : TryLockResponse() {
    *this = ::std::move(from);
  }

  inline TryLockResponse& operator=(TryLockResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TryLockResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TryLockResponse* internal_default_instance() {
    return reinterpret_cast<const TryLockResponse*>(
               &_TryLockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(TryLockResponse* other);
  friend void swap(TryLockResponse& a, TryLockResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TryLockResponse* New() const final {
    return CreateMaybeMessage<TryLockResponse>(NULL);
  }

  TryLockResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TryLockResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TryLockResponse& from);
  void MergeFrom(const TryLockResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TryLockResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.TryLockResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnlockRequest) */ {
 public:
  UnlockRequest();
  virtual ~UnlockRequest();

  UnlockRequest(const UnlockRequest& from);

  inline UnlockRequest& operator=(const UnlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlockRequest(UnlockRequest&& from) noexcept
    : UnlockRequest() {
    *this = ::std::move(from);
  }

  inline UnlockRequest& operator=(UnlockRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnlockRequest* internal_default_instance() {
    return reinterpret_cast<const UnlockRequest*>(
               &_UnlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(UnlockRequest* other);
  friend void swap(UnlockRequest& a, UnlockRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlockRequest* New() const final {
    return CreateMaybeMessage<UnlockRequest>(NULL);
  }

  UnlockRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnlockRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnlockRequest& from);
  void MergeFrom(const UnlockRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnlockRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string store_name = 1[json_name = "storeName"];
  void clear_store_name();
  static const int kStoreNameFieldNumber = 1;
  const ::std::string& store_name() const;
  void set_store_name(const ::std::string& value);
  #if LANG_CXX11
  void set_store_name(::std::string&& value);
  #endif
  void set_store_name(const char* value);
  void set_store_name(const char* value, size_t size);
  ::std::string* mutable_store_name();
  ::std::string* release_store_name();
  void set_allocated_store_name(::std::string* store_name);

  // string resource_id = 2[json_name = "resourceId"];
  void clear_resource_id();
  static const int kResourceIdFieldNumber = 2;
  const ::std::string& resource_id() const;
  void set_resource_id(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_id(::std::string&& value);
  #endif
  void set_resource_id(const char* value);
  void set_resource_id(const char* value, size_t size);
  ::std::string* mutable_resource_id();
  ::std::string* release_resource_id();
  void set_allocated_resource_id(::std::string* resource_id);

  // string lock_owner = 3[json_name = "lockOwner"];
  void clear_lock_owner();
  static const int kLockOwnerFieldNumber = 3;
  const ::std::string& lock_owner() const;
  void set_lock_owner(const ::std::string& value);
  #if LANG_CXX11
  void set_lock_owner(::std::string&& value);
  #endif
  void set_lock_owner(const char* value);
  void set_lock_owner(const char* value, size_t size);
  ::std::string* mutable_lock_owner();
  ::std::string* release_lock_owner();
  void set_allocated_lock_owner(::std::string* lock_owner);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnlockRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr store_name_;
  ::google::protobuf::internal::ArenaStringPtr resource_id_;
  ::google::protobuf::internal::ArenaStringPtr lock_owner_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.UnlockResponse) */ {
 public:
  UnlockResponse();
  virtual ~UnlockResponse();

  UnlockResponse(const UnlockResponse& from);

  inline UnlockResponse& operator=(const UnlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlockResponse(UnlockResponse&& from) noexcept
    : UnlockResponse() {
    *this = ::std::move(from);
  }

  inline UnlockResponse& operator=(UnlockResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnlockResponse* internal_default_instance() {
    return reinterpret_cast<const UnlockResponse*>(
               &_UnlockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(UnlockResponse* other);
  friend void swap(UnlockResponse& a, UnlockResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlockResponse* New() const final {
    return CreateMaybeMessage<UnlockResponse>(NULL);
  }

  UnlockResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UnlockResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UnlockResponse& from);
  void MergeFrom(const UnlockResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnlockResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UnlockResponse_Status Status;
  static const Status SUCCESS =
    UnlockResponse_Status_SUCCESS;
  static const Status LOCK_DOES_NOT_EXIST =
    UnlockResponse_Status_LOCK_DOES_NOT_EXIST;
  static const Status LOCK_BELONGS_TO_OTHERS =
    UnlockResponse_Status_LOCK_BELONGS_TO_OTHERS;
  static const Status INTERNAL_ERROR =
    UnlockResponse_Status_INTERNAL_ERROR;
  static inline bool Status_IsValid(int value) {
    return UnlockResponse_Status_IsValid(value);
  }
  static const Status Status_MIN =
    UnlockResponse_Status_Status_MIN;
  static const Status Status_MAX =
    UnlockResponse_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    UnlockResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return UnlockResponse_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return UnlockResponse_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return UnlockResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .dapr.proto.runtime.v1.UnlockResponse.Status status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::dapr::proto::runtime::v1::UnlockResponse_Status status() const;
  void set_status(::dapr::proto::runtime::v1::UnlockResponse_Status value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.UnlockResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleGetKeyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleGetKeyRequest) */ {
 public:
  SubtleGetKeyRequest();
  virtual ~SubtleGetKeyRequest();

  SubtleGetKeyRequest(const SubtleGetKeyRequest& from);

  inline SubtleGetKeyRequest& operator=(const SubtleGetKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleGetKeyRequest(SubtleGetKeyRequest&& from) noexcept
    : SubtleGetKeyRequest() {
    *this = ::std::move(from);
  }

  inline SubtleGetKeyRequest& operator=(SubtleGetKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleGetKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleGetKeyRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleGetKeyRequest*>(
               &_SubtleGetKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(SubtleGetKeyRequest* other);
  friend void swap(SubtleGetKeyRequest& a, SubtleGetKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleGetKeyRequest* New() const final {
    return CreateMaybeMessage<SubtleGetKeyRequest>(NULL);
  }

  SubtleGetKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleGetKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleGetKeyRequest& from);
  void MergeFrom(const SubtleGetKeyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleGetKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SubtleGetKeyRequest_KeyFormat KeyFormat;
  static const KeyFormat PEM =
    SubtleGetKeyRequest_KeyFormat_PEM;
  static const KeyFormat JSON =
    SubtleGetKeyRequest_KeyFormat_JSON;
  static inline bool KeyFormat_IsValid(int value) {
    return SubtleGetKeyRequest_KeyFormat_IsValid(value);
  }
  static const KeyFormat KeyFormat_MIN =
    SubtleGetKeyRequest_KeyFormat_KeyFormat_MIN;
  static const KeyFormat KeyFormat_MAX =
    SubtleGetKeyRequest_KeyFormat_KeyFormat_MAX;
  static const int KeyFormat_ARRAYSIZE =
    SubtleGetKeyRequest_KeyFormat_KeyFormat_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  KeyFormat_descriptor() {
    return SubtleGetKeyRequest_KeyFormat_descriptor();
  }
  static inline const ::std::string& KeyFormat_Name(KeyFormat value) {
    return SubtleGetKeyRequest_KeyFormat_Name(value);
  }
  static inline bool KeyFormat_Parse(const ::std::string& name,
      KeyFormat* value) {
    return SubtleGetKeyRequest_KeyFormat_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string component_name = 1[json_name = "componentName"];
  void clear_component_name();
  static const int kComponentNameFieldNumber = 1;
  const ::std::string& component_name() const;
  void set_component_name(const ::std::string& value);
  #if LANG_CXX11
  void set_component_name(::std::string&& value);
  #endif
  void set_component_name(const char* value);
  void set_component_name(const char* value, size_t size);
  ::std::string* mutable_component_name();
  ::std::string* release_component_name();
  void set_allocated_component_name(::std::string* component_name);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .dapr.proto.runtime.v1.SubtleGetKeyRequest.KeyFormat format = 3;
  void clear_format();
  static const int kFormatFieldNumber = 3;
  ::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat format() const;
  void set_format(::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleGetKeyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr component_name_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int format_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleGetKeyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleGetKeyResponse) */ {
 public:
  SubtleGetKeyResponse();
  virtual ~SubtleGetKeyResponse();

  SubtleGetKeyResponse(const SubtleGetKeyResponse& from);

  inline SubtleGetKeyResponse& operator=(const SubtleGetKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleGetKeyResponse(SubtleGetKeyResponse&& from) noexcept
    : SubtleGetKeyResponse() {
    *this = ::std::move(from);
  }

  inline SubtleGetKeyResponse& operator=(SubtleGetKeyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleGetKeyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleGetKeyResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleGetKeyResponse*>(
               &_SubtleGetKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(SubtleGetKeyResponse* other);
  friend void swap(SubtleGetKeyResponse& a, SubtleGetKeyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleGetKeyResponse* New() const final {
    return CreateMaybeMessage<SubtleGetKeyResponse>(NULL);
  }

  SubtleGetKeyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleGetKeyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleGetKeyResponse& from);
  void MergeFrom(const SubtleGetKeyResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleGetKeyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string public_key = 2[json_name = "publicKey"];
  void clear_public_key();
  static const int kPublicKeyFieldNumber = 2;
  const ::std::string& public_key() const;
  void set_public_key(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key(::std::string&& value);
  #endif
  void set_public_key(const char* value);
  void set_public_key(const char* value, size_t size);
  ::std::string* mutable_public_key();
  ::std::string* release_public_key();
  void set_allocated_public_key(::std::string* public_key);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleGetKeyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr public_key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleEncryptRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleEncryptRequest) */ {
 public:
  SubtleEncryptRequest();
  virtual ~SubtleEncryptRequest();

  SubtleEncryptRequest(const SubtleEncryptRequest& from);

  inline SubtleEncryptRequest& operator=(const SubtleEncryptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleEncryptRequest(SubtleEncryptRequest&& from) noexcept
    : SubtleEncryptRequest() {
    *this = ::std::move(from);
  }

  inline SubtleEncryptRequest& operator=(SubtleEncryptRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleEncryptRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleEncryptRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleEncryptRequest*>(
               &_SubtleEncryptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(SubtleEncryptRequest* other);
  friend void swap(SubtleEncryptRequest& a, SubtleEncryptRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleEncryptRequest* New() const final {
    return CreateMaybeMessage<SubtleEncryptRequest>(NULL);
  }

  SubtleEncryptRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleEncryptRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleEncryptRequest& from);
  void MergeFrom(const SubtleEncryptRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleEncryptRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string component_name = 1[json_name = "componentName"];
  void clear_component_name();
  static const int kComponentNameFieldNumber = 1;
  const ::std::string& component_name() const;
  void set_component_name(const ::std::string& value);
  #if LANG_CXX11
  void set_component_name(::std::string&& value);
  #endif
  void set_component_name(const char* value);
  void set_component_name(const char* value, size_t size);
  ::std::string* mutable_component_name();
  ::std::string* release_component_name();
  void set_allocated_component_name(::std::string* component_name);

  // bytes plaintext = 2;
  void clear_plaintext();
  static const int kPlaintextFieldNumber = 2;
  const ::std::string& plaintext() const;
  void set_plaintext(const ::std::string& value);
  #if LANG_CXX11
  void set_plaintext(::std::string&& value);
  #endif
  void set_plaintext(const char* value);
  void set_plaintext(const void* value, size_t size);
  ::std::string* mutable_plaintext();
  ::std::string* release_plaintext();
  void set_allocated_plaintext(::std::string* plaintext);

  // string algorithm = 3;
  void clear_algorithm();
  static const int kAlgorithmFieldNumber = 3;
  const ::std::string& algorithm() const;
  void set_algorithm(const ::std::string& value);
  #if LANG_CXX11
  void set_algorithm(::std::string&& value);
  #endif
  void set_algorithm(const char* value);
  void set_algorithm(const char* value, size_t size);
  ::std::string* mutable_algorithm();
  ::std::string* release_algorithm();
  void set_allocated_algorithm(::std::string* algorithm);

  // string key_name = 4[json_name = "keyName"];
  void clear_key_name();
  static const int kKeyNameFieldNumber = 4;
  const ::std::string& key_name() const;
  void set_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_key_name(::std::string&& value);
  #endif
  void set_key_name(const char* value);
  void set_key_name(const char* value, size_t size);
  ::std::string* mutable_key_name();
  ::std::string* release_key_name();
  void set_allocated_key_name(::std::string* key_name);

  // bytes nonce = 5;
  void clear_nonce();
  static const int kNonceFieldNumber = 5;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // bytes associated_data = 6[json_name = "associatedData"];
  void clear_associated_data();
  static const int kAssociatedDataFieldNumber = 6;
  const ::std::string& associated_data() const;
  void set_associated_data(const ::std::string& value);
  #if LANG_CXX11
  void set_associated_data(::std::string&& value);
  #endif
  void set_associated_data(const char* value);
  void set_associated_data(const void* value, size_t size);
  ::std::string* mutable_associated_data();
  ::std::string* release_associated_data();
  void set_allocated_associated_data(::std::string* associated_data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleEncryptRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr component_name_;
  ::google::protobuf::internal::ArenaStringPtr plaintext_;
  ::google::protobuf::internal::ArenaStringPtr algorithm_;
  ::google::protobuf::internal::ArenaStringPtr key_name_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr associated_data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleEncryptResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleEncryptResponse) */ {
 public:
  SubtleEncryptResponse();
  virtual ~SubtleEncryptResponse();

  SubtleEncryptResponse(const SubtleEncryptResponse& from);

  inline SubtleEncryptResponse& operator=(const SubtleEncryptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleEncryptResponse(SubtleEncryptResponse&& from) noexcept
    : SubtleEncryptResponse() {
    *this = ::std::move(from);
  }

  inline SubtleEncryptResponse& operator=(SubtleEncryptResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleEncryptResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleEncryptResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleEncryptResponse*>(
               &_SubtleEncryptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  void Swap(SubtleEncryptResponse* other);
  friend void swap(SubtleEncryptResponse& a, SubtleEncryptResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleEncryptResponse* New() const final {
    return CreateMaybeMessage<SubtleEncryptResponse>(NULL);
  }

  SubtleEncryptResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleEncryptResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleEncryptResponse& from);
  void MergeFrom(const SubtleEncryptResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleEncryptResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ciphertext = 1;
  void clear_ciphertext();
  static const int kCiphertextFieldNumber = 1;
  const ::std::string& ciphertext() const;
  void set_ciphertext(const ::std::string& value);
  #if LANG_CXX11
  void set_ciphertext(::std::string&& value);
  #endif
  void set_ciphertext(const char* value);
  void set_ciphertext(const void* value, size_t size);
  ::std::string* mutable_ciphertext();
  ::std::string* release_ciphertext();
  void set_allocated_ciphertext(::std::string* ciphertext);

  // bytes tag = 2;
  void clear_tag();
  static const int kTagFieldNumber = 2;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const void* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleEncryptResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ciphertext_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleDecryptRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleDecryptRequest) */ {
 public:
  SubtleDecryptRequest();
  virtual ~SubtleDecryptRequest();

  SubtleDecryptRequest(const SubtleDecryptRequest& from);

  inline SubtleDecryptRequest& operator=(const SubtleDecryptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleDecryptRequest(SubtleDecryptRequest&& from) noexcept
    : SubtleDecryptRequest() {
    *this = ::std::move(from);
  }

  inline SubtleDecryptRequest& operator=(SubtleDecryptRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleDecryptRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleDecryptRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleDecryptRequest*>(
               &_SubtleDecryptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(SubtleDecryptRequest* other);
  friend void swap(SubtleDecryptRequest& a, SubtleDecryptRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleDecryptRequest* New() const final {
    return CreateMaybeMessage<SubtleDecryptRequest>(NULL);
  }

  SubtleDecryptRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleDecryptRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleDecryptRequest& from);
  void MergeFrom(const SubtleDecryptRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleDecryptRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string component_name = 1[json_name = "componentName"];
  void clear_component_name();
  static const int kComponentNameFieldNumber = 1;
  const ::std::string& component_name() const;
  void set_component_name(const ::std::string& value);
  #if LANG_CXX11
  void set_component_name(::std::string&& value);
  #endif
  void set_component_name(const char* value);
  void set_component_name(const char* value, size_t size);
  ::std::string* mutable_component_name();
  ::std::string* release_component_name();
  void set_allocated_component_name(::std::string* component_name);

  // bytes ciphertext = 2;
  void clear_ciphertext();
  static const int kCiphertextFieldNumber = 2;
  const ::std::string& ciphertext() const;
  void set_ciphertext(const ::std::string& value);
  #if LANG_CXX11
  void set_ciphertext(::std::string&& value);
  #endif
  void set_ciphertext(const char* value);
  void set_ciphertext(const void* value, size_t size);
  ::std::string* mutable_ciphertext();
  ::std::string* release_ciphertext();
  void set_allocated_ciphertext(::std::string* ciphertext);

  // string algorithm = 3;
  void clear_algorithm();
  static const int kAlgorithmFieldNumber = 3;
  const ::std::string& algorithm() const;
  void set_algorithm(const ::std::string& value);
  #if LANG_CXX11
  void set_algorithm(::std::string&& value);
  #endif
  void set_algorithm(const char* value);
  void set_algorithm(const char* value, size_t size);
  ::std::string* mutable_algorithm();
  ::std::string* release_algorithm();
  void set_allocated_algorithm(::std::string* algorithm);

  // string key_name = 4[json_name = "keyName"];
  void clear_key_name();
  static const int kKeyNameFieldNumber = 4;
  const ::std::string& key_name() const;
  void set_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_key_name(::std::string&& value);
  #endif
  void set_key_name(const char* value);
  void set_key_name(const char* value, size_t size);
  ::std::string* mutable_key_name();
  ::std::string* release_key_name();
  void set_allocated_key_name(::std::string* key_name);

  // bytes nonce = 5;
  void clear_nonce();
  static const int kNonceFieldNumber = 5;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // bytes tag = 6;
  void clear_tag();
  static const int kTagFieldNumber = 6;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const void* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // bytes associated_data = 7[json_name = "associatedData"];
  void clear_associated_data();
  static const int kAssociatedDataFieldNumber = 7;
  const ::std::string& associated_data() const;
  void set_associated_data(const ::std::string& value);
  #if LANG_CXX11
  void set_associated_data(::std::string&& value);
  #endif
  void set_associated_data(const char* value);
  void set_associated_data(const void* value, size_t size);
  ::std::string* mutable_associated_data();
  ::std::string* release_associated_data();
  void set_allocated_associated_data(::std::string* associated_data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleDecryptRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr component_name_;
  ::google::protobuf::internal::ArenaStringPtr ciphertext_;
  ::google::protobuf::internal::ArenaStringPtr algorithm_;
  ::google::protobuf::internal::ArenaStringPtr key_name_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::internal::ArenaStringPtr associated_data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleDecryptResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleDecryptResponse) */ {
 public:
  SubtleDecryptResponse();
  virtual ~SubtleDecryptResponse();

  SubtleDecryptResponse(const SubtleDecryptResponse& from);

  inline SubtleDecryptResponse& operator=(const SubtleDecryptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleDecryptResponse(SubtleDecryptResponse&& from) noexcept
    : SubtleDecryptResponse() {
    *this = ::std::move(from);
  }

  inline SubtleDecryptResponse& operator=(SubtleDecryptResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleDecryptResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleDecryptResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleDecryptResponse*>(
               &_SubtleDecryptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  void Swap(SubtleDecryptResponse* other);
  friend void swap(SubtleDecryptResponse& a, SubtleDecryptResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleDecryptResponse* New() const final {
    return CreateMaybeMessage<SubtleDecryptResponse>(NULL);
  }

  SubtleDecryptResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleDecryptResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleDecryptResponse& from);
  void MergeFrom(const SubtleDecryptResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleDecryptResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes plaintext = 1;
  void clear_plaintext();
  static const int kPlaintextFieldNumber = 1;
  const ::std::string& plaintext() const;
  void set_plaintext(const ::std::string& value);
  #if LANG_CXX11
  void set_plaintext(::std::string&& value);
  #endif
  void set_plaintext(const char* value);
  void set_plaintext(const void* value, size_t size);
  ::std::string* mutable_plaintext();
  ::std::string* release_plaintext();
  void set_allocated_plaintext(::std::string* plaintext);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleDecryptResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr plaintext_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleWrapKeyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleWrapKeyRequest) */ {
 public:
  SubtleWrapKeyRequest();
  virtual ~SubtleWrapKeyRequest();

  SubtleWrapKeyRequest(const SubtleWrapKeyRequest& from);

  inline SubtleWrapKeyRequest& operator=(const SubtleWrapKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleWrapKeyRequest(SubtleWrapKeyRequest&& from) noexcept
    : SubtleWrapKeyRequest() {
    *this = ::std::move(from);
  }

  inline SubtleWrapKeyRequest& operator=(SubtleWrapKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleWrapKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleWrapKeyRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleWrapKeyRequest*>(
               &_SubtleWrapKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(SubtleWrapKeyRequest* other);
  friend void swap(SubtleWrapKeyRequest& a, SubtleWrapKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleWrapKeyRequest* New() const final {
    return CreateMaybeMessage<SubtleWrapKeyRequest>(NULL);
  }

  SubtleWrapKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleWrapKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleWrapKeyRequest& from);
  void MergeFrom(const SubtleWrapKeyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleWrapKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string component_name = 1[json_name = "componentName"];
  void clear_component_name();
  static const int kComponentNameFieldNumber = 1;
  const ::std::string& component_name() const;
  void set_component_name(const ::std::string& value);
  #if LANG_CXX11
  void set_component_name(::std::string&& value);
  #endif
  void set_component_name(const char* value);
  void set_component_name(const char* value, size_t size);
  ::std::string* mutable_component_name();
  ::std::string* release_component_name();
  void set_allocated_component_name(::std::string* component_name);

  // bytes plaintext_key = 2[json_name = "plaintextKey"];
  void clear_plaintext_key();
  static const int kPlaintextKeyFieldNumber = 2;
  const ::std::string& plaintext_key() const;
  void set_plaintext_key(const ::std::string& value);
  #if LANG_CXX11
  void set_plaintext_key(::std::string&& value);
  #endif
  void set_plaintext_key(const char* value);
  void set_plaintext_key(const void* value, size_t size);
  ::std::string* mutable_plaintext_key();
  ::std::string* release_plaintext_key();
  void set_allocated_plaintext_key(::std::string* plaintext_key);

  // string algorithm = 3;
  void clear_algorithm();
  static const int kAlgorithmFieldNumber = 3;
  const ::std::string& algorithm() const;
  void set_algorithm(const ::std::string& value);
  #if LANG_CXX11
  void set_algorithm(::std::string&& value);
  #endif
  void set_algorithm(const char* value);
  void set_algorithm(const char* value, size_t size);
  ::std::string* mutable_algorithm();
  ::std::string* release_algorithm();
  void set_allocated_algorithm(::std::string* algorithm);

  // string key_name = 4[json_name = "keyName"];
  void clear_key_name();
  static const int kKeyNameFieldNumber = 4;
  const ::std::string& key_name() const;
  void set_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_key_name(::std::string&& value);
  #endif
  void set_key_name(const char* value);
  void set_key_name(const char* value, size_t size);
  ::std::string* mutable_key_name();
  ::std::string* release_key_name();
  void set_allocated_key_name(::std::string* key_name);

  // bytes nonce = 5;
  void clear_nonce();
  static const int kNonceFieldNumber = 5;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // bytes associated_data = 6[json_name = "associatedData"];
  void clear_associated_data();
  static const int kAssociatedDataFieldNumber = 6;
  const ::std::string& associated_data() const;
  void set_associated_data(const ::std::string& value);
  #if LANG_CXX11
  void set_associated_data(::std::string&& value);
  #endif
  void set_associated_data(const char* value);
  void set_associated_data(const void* value, size_t size);
  ::std::string* mutable_associated_data();
  ::std::string* release_associated_data();
  void set_allocated_associated_data(::std::string* associated_data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleWrapKeyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr component_name_;
  ::google::protobuf::internal::ArenaStringPtr plaintext_key_;
  ::google::protobuf::internal::ArenaStringPtr algorithm_;
  ::google::protobuf::internal::ArenaStringPtr key_name_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr associated_data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleWrapKeyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleWrapKeyResponse) */ {
 public:
  SubtleWrapKeyResponse();
  virtual ~SubtleWrapKeyResponse();

  SubtleWrapKeyResponse(const SubtleWrapKeyResponse& from);

  inline SubtleWrapKeyResponse& operator=(const SubtleWrapKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleWrapKeyResponse(SubtleWrapKeyResponse&& from) noexcept
    : SubtleWrapKeyResponse() {
    *this = ::std::move(from);
  }

  inline SubtleWrapKeyResponse& operator=(SubtleWrapKeyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleWrapKeyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleWrapKeyResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleWrapKeyResponse*>(
               &_SubtleWrapKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  void Swap(SubtleWrapKeyResponse* other);
  friend void swap(SubtleWrapKeyResponse& a, SubtleWrapKeyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleWrapKeyResponse* New() const final {
    return CreateMaybeMessage<SubtleWrapKeyResponse>(NULL);
  }

  SubtleWrapKeyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleWrapKeyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleWrapKeyResponse& from);
  void MergeFrom(const SubtleWrapKeyResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleWrapKeyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes wrapped_key = 1[json_name = "wrappedKey"];
  void clear_wrapped_key();
  static const int kWrappedKeyFieldNumber = 1;
  const ::std::string& wrapped_key() const;
  void set_wrapped_key(const ::std::string& value);
  #if LANG_CXX11
  void set_wrapped_key(::std::string&& value);
  #endif
  void set_wrapped_key(const char* value);
  void set_wrapped_key(const void* value, size_t size);
  ::std::string* mutable_wrapped_key();
  ::std::string* release_wrapped_key();
  void set_allocated_wrapped_key(::std::string* wrapped_key);

  // bytes tag = 2;
  void clear_tag();
  static const int kTagFieldNumber = 2;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const void* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleWrapKeyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr wrapped_key_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleUnwrapKeyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest) */ {
 public:
  SubtleUnwrapKeyRequest();
  virtual ~SubtleUnwrapKeyRequest();

  SubtleUnwrapKeyRequest(const SubtleUnwrapKeyRequest& from);

  inline SubtleUnwrapKeyRequest& operator=(const SubtleUnwrapKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleUnwrapKeyRequest(SubtleUnwrapKeyRequest&& from) noexcept
    : SubtleUnwrapKeyRequest() {
    *this = ::std::move(from);
  }

  inline SubtleUnwrapKeyRequest& operator=(SubtleUnwrapKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleUnwrapKeyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleUnwrapKeyRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleUnwrapKeyRequest*>(
               &_SubtleUnwrapKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  void Swap(SubtleUnwrapKeyRequest* other);
  friend void swap(SubtleUnwrapKeyRequest& a, SubtleUnwrapKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleUnwrapKeyRequest* New() const final {
    return CreateMaybeMessage<SubtleUnwrapKeyRequest>(NULL);
  }

  SubtleUnwrapKeyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleUnwrapKeyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleUnwrapKeyRequest& from);
  void MergeFrom(const SubtleUnwrapKeyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleUnwrapKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string component_name = 1[json_name = "componentName"];
  void clear_component_name();
  static const int kComponentNameFieldNumber = 1;
  const ::std::string& component_name() const;
  void set_component_name(const ::std::string& value);
  #if LANG_CXX11
  void set_component_name(::std::string&& value);
  #endif
  void set_component_name(const char* value);
  void set_component_name(const char* value, size_t size);
  ::std::string* mutable_component_name();
  ::std::string* release_component_name();
  void set_allocated_component_name(::std::string* component_name);

  // bytes wrapped_key = 2[json_name = "wrappedKey"];
  void clear_wrapped_key();
  static const int kWrappedKeyFieldNumber = 2;
  const ::std::string& wrapped_key() const;
  void set_wrapped_key(const ::std::string& value);
  #if LANG_CXX11
  void set_wrapped_key(::std::string&& value);
  #endif
  void set_wrapped_key(const char* value);
  void set_wrapped_key(const void* value, size_t size);
  ::std::string* mutable_wrapped_key();
  ::std::string* release_wrapped_key();
  void set_allocated_wrapped_key(::std::string* wrapped_key);

  // string algorithm = 3;
  void clear_algorithm();
  static const int kAlgorithmFieldNumber = 3;
  const ::std::string& algorithm() const;
  void set_algorithm(const ::std::string& value);
  #if LANG_CXX11
  void set_algorithm(::std::string&& value);
  #endif
  void set_algorithm(const char* value);
  void set_algorithm(const char* value, size_t size);
  ::std::string* mutable_algorithm();
  ::std::string* release_algorithm();
  void set_allocated_algorithm(::std::string* algorithm);

  // string key_name = 4[json_name = "keyName"];
  void clear_key_name();
  static const int kKeyNameFieldNumber = 4;
  const ::std::string& key_name() const;
  void set_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_key_name(::std::string&& value);
  #endif
  void set_key_name(const char* value);
  void set_key_name(const char* value, size_t size);
  ::std::string* mutable_key_name();
  ::std::string* release_key_name();
  void set_allocated_key_name(::std::string* key_name);

  // bytes nonce = 5;
  void clear_nonce();
  static const int kNonceFieldNumber = 5;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // bytes tag = 6;
  void clear_tag();
  static const int kTagFieldNumber = 6;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const void* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // bytes associated_data = 7[json_name = "associatedData"];
  void clear_associated_data();
  static const int kAssociatedDataFieldNumber = 7;
  const ::std::string& associated_data() const;
  void set_associated_data(const ::std::string& value);
  #if LANG_CXX11
  void set_associated_data(::std::string&& value);
  #endif
  void set_associated_data(const char* value);
  void set_associated_data(const void* value, size_t size);
  ::std::string* mutable_associated_data();
  ::std::string* release_associated_data();
  void set_allocated_associated_data(::std::string* associated_data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr component_name_;
  ::google::protobuf::internal::ArenaStringPtr wrapped_key_;
  ::google::protobuf::internal::ArenaStringPtr algorithm_;
  ::google::protobuf::internal::ArenaStringPtr key_name_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::internal::ArenaStringPtr associated_data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleUnwrapKeyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse) */ {
 public:
  SubtleUnwrapKeyResponse();
  virtual ~SubtleUnwrapKeyResponse();

  SubtleUnwrapKeyResponse(const SubtleUnwrapKeyResponse& from);

  inline SubtleUnwrapKeyResponse& operator=(const SubtleUnwrapKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleUnwrapKeyResponse(SubtleUnwrapKeyResponse&& from) noexcept
    : SubtleUnwrapKeyResponse() {
    *this = ::std::move(from);
  }

  inline SubtleUnwrapKeyResponse& operator=(SubtleUnwrapKeyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleUnwrapKeyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleUnwrapKeyResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleUnwrapKeyResponse*>(
               &_SubtleUnwrapKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  void Swap(SubtleUnwrapKeyResponse* other);
  friend void swap(SubtleUnwrapKeyResponse& a, SubtleUnwrapKeyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleUnwrapKeyResponse* New() const final {
    return CreateMaybeMessage<SubtleUnwrapKeyResponse>(NULL);
  }

  SubtleUnwrapKeyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleUnwrapKeyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleUnwrapKeyResponse& from);
  void MergeFrom(const SubtleUnwrapKeyResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleUnwrapKeyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes plaintext_key = 1[json_name = "plaintextKey"];
  void clear_plaintext_key();
  static const int kPlaintextKeyFieldNumber = 1;
  const ::std::string& plaintext_key() const;
  void set_plaintext_key(const ::std::string& value);
  #if LANG_CXX11
  void set_plaintext_key(::std::string&& value);
  #endif
  void set_plaintext_key(const char* value);
  void set_plaintext_key(const void* value, size_t size);
  ::std::string* mutable_plaintext_key();
  ::std::string* release_plaintext_key();
  void set_allocated_plaintext_key(::std::string* plaintext_key);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr plaintext_key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleSignRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleSignRequest) */ {
 public:
  SubtleSignRequest();
  virtual ~SubtleSignRequest();

  SubtleSignRequest(const SubtleSignRequest& from);

  inline SubtleSignRequest& operator=(const SubtleSignRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleSignRequest(SubtleSignRequest&& from) noexcept
    : SubtleSignRequest() {
    *this = ::std::move(from);
  }

  inline SubtleSignRequest& operator=(SubtleSignRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleSignRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleSignRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleSignRequest*>(
               &_SubtleSignRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  void Swap(SubtleSignRequest* other);
  friend void swap(SubtleSignRequest& a, SubtleSignRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleSignRequest* New() const final {
    return CreateMaybeMessage<SubtleSignRequest>(NULL);
  }

  SubtleSignRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleSignRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleSignRequest& from);
  void MergeFrom(const SubtleSignRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleSignRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string component_name = 1[json_name = "componentName"];
  void clear_component_name();
  static const int kComponentNameFieldNumber = 1;
  const ::std::string& component_name() const;
  void set_component_name(const ::std::string& value);
  #if LANG_CXX11
  void set_component_name(::std::string&& value);
  #endif
  void set_component_name(const char* value);
  void set_component_name(const char* value, size_t size);
  ::std::string* mutable_component_name();
  ::std::string* release_component_name();
  void set_allocated_component_name(::std::string* component_name);

  // bytes digest = 2;
  void clear_digest();
  static const int kDigestFieldNumber = 2;
  const ::std::string& digest() const;
  void set_digest(const ::std::string& value);
  #if LANG_CXX11
  void set_digest(::std::string&& value);
  #endif
  void set_digest(const char* value);
  void set_digest(const void* value, size_t size);
  ::std::string* mutable_digest();
  ::std::string* release_digest();
  void set_allocated_digest(::std::string* digest);

  // string algorithm = 3;
  void clear_algorithm();
  static const int kAlgorithmFieldNumber = 3;
  const ::std::string& algorithm() const;
  void set_algorithm(const ::std::string& value);
  #if LANG_CXX11
  void set_algorithm(::std::string&& value);
  #endif
  void set_algorithm(const char* value);
  void set_algorithm(const char* value, size_t size);
  ::std::string* mutable_algorithm();
  ::std::string* release_algorithm();
  void set_allocated_algorithm(::std::string* algorithm);

  // string key_name = 4[json_name = "keyName"];
  void clear_key_name();
  static const int kKeyNameFieldNumber = 4;
  const ::std::string& key_name() const;
  void set_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_key_name(::std::string&& value);
  #endif
  void set_key_name(const char* value);
  void set_key_name(const char* value, size_t size);
  ::std::string* mutable_key_name();
  ::std::string* release_key_name();
  void set_allocated_key_name(::std::string* key_name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleSignRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr component_name_;
  ::google::protobuf::internal::ArenaStringPtr digest_;
  ::google::protobuf::internal::ArenaStringPtr algorithm_;
  ::google::protobuf::internal::ArenaStringPtr key_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleSignResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleSignResponse) */ {
 public:
  SubtleSignResponse();
  virtual ~SubtleSignResponse();

  SubtleSignResponse(const SubtleSignResponse& from);

  inline SubtleSignResponse& operator=(const SubtleSignResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleSignResponse(SubtleSignResponse&& from) noexcept
    : SubtleSignResponse() {
    *this = ::std::move(from);
  }

  inline SubtleSignResponse& operator=(SubtleSignResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleSignResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleSignResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleSignResponse*>(
               &_SubtleSignResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  void Swap(SubtleSignResponse* other);
  friend void swap(SubtleSignResponse& a, SubtleSignResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleSignResponse* New() const final {
    return CreateMaybeMessage<SubtleSignResponse>(NULL);
  }

  SubtleSignResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleSignResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleSignResponse& from);
  void MergeFrom(const SubtleSignResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleSignResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes signature = 1;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleSignResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleVerifyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleVerifyRequest) */ {
 public:
  SubtleVerifyRequest();
  virtual ~SubtleVerifyRequest();

  SubtleVerifyRequest(const SubtleVerifyRequest& from);

  inline SubtleVerifyRequest& operator=(const SubtleVerifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleVerifyRequest(SubtleVerifyRequest&& from) noexcept
    : SubtleVerifyRequest() {
    *this = ::std::move(from);
  }

  inline SubtleVerifyRequest& operator=(SubtleVerifyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleVerifyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleVerifyRequest* internal_default_instance() {
    return reinterpret_cast<const SubtleVerifyRequest*>(
               &_SubtleVerifyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  void Swap(SubtleVerifyRequest* other);
  friend void swap(SubtleVerifyRequest& a, SubtleVerifyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleVerifyRequest* New() const final {
    return CreateMaybeMessage<SubtleVerifyRequest>(NULL);
  }

  SubtleVerifyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleVerifyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleVerifyRequest& from);
  void MergeFrom(const SubtleVerifyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleVerifyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string component_name = 1[json_name = "componentName"];
  void clear_component_name();
  static const int kComponentNameFieldNumber = 1;
  const ::std::string& component_name() const;
  void set_component_name(const ::std::string& value);
  #if LANG_CXX11
  void set_component_name(::std::string&& value);
  #endif
  void set_component_name(const char* value);
  void set_component_name(const char* value, size_t size);
  ::std::string* mutable_component_name();
  ::std::string* release_component_name();
  void set_allocated_component_name(::std::string* component_name);

  // bytes digest = 2;
  void clear_digest();
  static const int kDigestFieldNumber = 2;
  const ::std::string& digest() const;
  void set_digest(const ::std::string& value);
  #if LANG_CXX11
  void set_digest(::std::string&& value);
  #endif
  void set_digest(const char* value);
  void set_digest(const void* value, size_t size);
  ::std::string* mutable_digest();
  ::std::string* release_digest();
  void set_allocated_digest(::std::string* digest);

  // string algorithm = 3;
  void clear_algorithm();
  static const int kAlgorithmFieldNumber = 3;
  const ::std::string& algorithm() const;
  void set_algorithm(const ::std::string& value);
  #if LANG_CXX11
  void set_algorithm(::std::string&& value);
  #endif
  void set_algorithm(const char* value);
  void set_algorithm(const char* value, size_t size);
  ::std::string* mutable_algorithm();
  ::std::string* release_algorithm();
  void set_allocated_algorithm(::std::string* algorithm);

  // string key_name = 4[json_name = "keyName"];
  void clear_key_name();
  static const int kKeyNameFieldNumber = 4;
  const ::std::string& key_name() const;
  void set_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_key_name(::std::string&& value);
  #endif
  void set_key_name(const char* value);
  void set_key_name(const char* value, size_t size);
  ::std::string* mutable_key_name();
  ::std::string* release_key_name();
  void set_allocated_key_name(::std::string* key_name);

  // bytes signature = 5;
  void clear_signature();
  static const int kSignatureFieldNumber = 5;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleVerifyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr component_name_;
  ::google::protobuf::internal::ArenaStringPtr digest_;
  ::google::protobuf::internal::ArenaStringPtr algorithm_;
  ::google::protobuf::internal::ArenaStringPtr key_name_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubtleVerifyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.SubtleVerifyResponse) */ {
 public:
  SubtleVerifyResponse();
  virtual ~SubtleVerifyResponse();

  SubtleVerifyResponse(const SubtleVerifyResponse& from);

  inline SubtleVerifyResponse& operator=(const SubtleVerifyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubtleVerifyResponse(SubtleVerifyResponse&& from) noexcept
    : SubtleVerifyResponse() {
    *this = ::std::move(from);
  }

  inline SubtleVerifyResponse& operator=(SubtleVerifyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubtleVerifyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SubtleVerifyResponse* internal_default_instance() {
    return reinterpret_cast<const SubtleVerifyResponse*>(
               &_SubtleVerifyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  void Swap(SubtleVerifyResponse* other);
  friend void swap(SubtleVerifyResponse& a, SubtleVerifyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubtleVerifyResponse* New() const final {
    return CreateMaybeMessage<SubtleVerifyResponse>(NULL);
  }

  SubtleVerifyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SubtleVerifyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SubtleVerifyResponse& from);
  void MergeFrom(const SubtleVerifyResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SubtleVerifyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool valid = 1;
  void clear_valid();
  static const int kValidFieldNumber = 1;
  bool valid() const;
  void set_valid(bool value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.SubtleVerifyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool valid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EncryptRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.EncryptRequest) */ {
 public:
  EncryptRequest();
  virtual ~EncryptRequest();

  EncryptRequest(const EncryptRequest& from);

  inline EncryptRequest& operator=(const EncryptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptRequest(EncryptRequest&& from) noexcept
    : EncryptRequest() {
    *this = ::std::move(from);
  }

  inline EncryptRequest& operator=(EncryptRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EncryptRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptRequest* internal_default_instance() {
    return reinterpret_cast<const EncryptRequest*>(
               &_EncryptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  void Swap(EncryptRequest* other);
  friend void swap(EncryptRequest& a, EncryptRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptRequest* New() const final {
    return CreateMaybeMessage<EncryptRequest>(NULL);
  }

  EncryptRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptRequest& from);
  void MergeFrom(const EncryptRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dapr.proto.runtime.v1.EncryptRequestOptions options = 1;
  bool has_options() const;
  void clear_options();
  static const int kOptionsFieldNumber = 1;
  private:
  const ::dapr::proto::runtime::v1::EncryptRequestOptions& _internal_options() const;
  public:
  const ::dapr::proto::runtime::v1::EncryptRequestOptions& options() const;
  ::dapr::proto::runtime::v1::EncryptRequestOptions* release_options();
  ::dapr::proto::runtime::v1::EncryptRequestOptions* mutable_options();
  void set_allocated_options(::dapr::proto::runtime::v1::EncryptRequestOptions* options);

  // .dapr.proto.common.v1.StreamPayload payload = 2;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  private:
  const ::dapr::proto::common::v1::StreamPayload& _internal_payload() const;
  public:
  const ::dapr::proto::common::v1::StreamPayload& payload() const;
  ::dapr::proto::common::v1::StreamPayload* release_payload();
  ::dapr::proto::common::v1::StreamPayload* mutable_payload();
  void set_allocated_payload(::dapr::proto::common::v1::StreamPayload* payload);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.EncryptRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::dapr::proto::runtime::v1::EncryptRequestOptions* options_;
  ::dapr::proto::common::v1::StreamPayload* payload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EncryptRequestOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.EncryptRequestOptions) */ {
 public:
  EncryptRequestOptions();
  virtual ~EncryptRequestOptions();

  EncryptRequestOptions(const EncryptRequestOptions& from);

  inline EncryptRequestOptions& operator=(const EncryptRequestOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptRequestOptions(EncryptRequestOptions&& from) noexcept
    : EncryptRequestOptions() {
    *this = ::std::move(from);
  }

  inline EncryptRequestOptions& operator=(EncryptRequestOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EncryptRequestOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptRequestOptions* internal_default_instance() {
    return reinterpret_cast<const EncryptRequestOptions*>(
               &_EncryptRequestOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  void Swap(EncryptRequestOptions* other);
  friend void swap(EncryptRequestOptions& a, EncryptRequestOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptRequestOptions* New() const final {
    return CreateMaybeMessage<EncryptRequestOptions>(NULL);
  }

  EncryptRequestOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptRequestOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptRequestOptions& from);
  void MergeFrom(const EncryptRequestOptions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptRequestOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string component_name = 1[json_name = "componentName"];
  void clear_component_name();
  static const int kComponentNameFieldNumber = 1;
  const ::std::string& component_name() const;
  void set_component_name(const ::std::string& value);
  #if LANG_CXX11
  void set_component_name(::std::string&& value);
  #endif
  void set_component_name(const char* value);
  void set_component_name(const char* value, size_t size);
  ::std::string* mutable_component_name();
  ::std::string* release_component_name();
  void set_allocated_component_name(::std::string* component_name);

  // string key_name = 2[json_name = "keyName"];
  void clear_key_name();
  static const int kKeyNameFieldNumber = 2;
  const ::std::string& key_name() const;
  void set_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_key_name(::std::string&& value);
  #endif
  void set_key_name(const char* value);
  void set_key_name(const char* value, size_t size);
  ::std::string* mutable_key_name();
  ::std::string* release_key_name();
  void set_allocated_key_name(::std::string* key_name);

  // string key_wrap_algorithm = 3;
  void clear_key_wrap_algorithm();
  static const int kKeyWrapAlgorithmFieldNumber = 3;
  const ::std::string& key_wrap_algorithm() const;
  void set_key_wrap_algorithm(const ::std::string& value);
  #if LANG_CXX11
  void set_key_wrap_algorithm(::std::string&& value);
  #endif
  void set_key_wrap_algorithm(const char* value);
  void set_key_wrap_algorithm(const char* value, size_t size);
  ::std::string* mutable_key_wrap_algorithm();
  ::std::string* release_key_wrap_algorithm();
  void set_allocated_key_wrap_algorithm(::std::string* key_wrap_algorithm);

  // string data_encryption_cipher = 10;
  void clear_data_encryption_cipher();
  static const int kDataEncryptionCipherFieldNumber = 10;
  const ::std::string& data_encryption_cipher() const;
  void set_data_encryption_cipher(const ::std::string& value);
  #if LANG_CXX11
  void set_data_encryption_cipher(::std::string&& value);
  #endif
  void set_data_encryption_cipher(const char* value);
  void set_data_encryption_cipher(const char* value, size_t size);
  ::std::string* mutable_data_encryption_cipher();
  ::std::string* release_data_encryption_cipher();
  void set_allocated_data_encryption_cipher(::std::string* data_encryption_cipher);

  // string decryption_key_name = 12[json_name = "decryptionKeyName"];
  void clear_decryption_key_name();
  static const int kDecryptionKeyNameFieldNumber = 12;
  const ::std::string& decryption_key_name() const;
  void set_decryption_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_decryption_key_name(::std::string&& value);
  #endif
  void set_decryption_key_name(const char* value);
  void set_decryption_key_name(const char* value, size_t size);
  ::std::string* mutable_decryption_key_name();
  ::std::string* release_decryption_key_name();
  void set_allocated_decryption_key_name(::std::string* decryption_key_name);

  // bool omit_decryption_key_name = 11[json_name = "omitDecryptionKeyName"];
  void clear_omit_decryption_key_name();
  static const int kOmitDecryptionKeyNameFieldNumber = 11;
  bool omit_decryption_key_name() const;
  void set_omit_decryption_key_name(bool value);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.EncryptRequestOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr component_name_;
  ::google::protobuf::internal::ArenaStringPtr key_name_;
  ::google::protobuf::internal::ArenaStringPtr key_wrap_algorithm_;
  ::google::protobuf::internal::ArenaStringPtr data_encryption_cipher_;
  ::google::protobuf::internal::ArenaStringPtr decryption_key_name_;
  bool omit_decryption_key_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EncryptResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.EncryptResponse) */ {
 public:
  EncryptResponse();
  virtual ~EncryptResponse();

  EncryptResponse(const EncryptResponse& from);

  inline EncryptResponse& operator=(const EncryptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncryptResponse(EncryptResponse&& from) noexcept
    : EncryptResponse() {
    *this = ::std::move(from);
  }

  inline EncryptResponse& operator=(EncryptResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EncryptResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncryptResponse* internal_default_instance() {
    return reinterpret_cast<const EncryptResponse*>(
               &_EncryptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  void Swap(EncryptResponse* other);
  friend void swap(EncryptResponse& a, EncryptResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncryptResponse* New() const final {
    return CreateMaybeMessage<EncryptResponse>(NULL);
  }

  EncryptResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EncryptResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EncryptResponse& from);
  void MergeFrom(const EncryptResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EncryptResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dapr.proto.common.v1.StreamPayload payload = 1;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 1;
  private:
  const ::dapr::proto::common::v1::StreamPayload& _internal_payload() const;
  public:
  const ::dapr::proto::common::v1::StreamPayload& payload() const;
  ::dapr::proto::common::v1::StreamPayload* release_payload();
  ::dapr::proto::common::v1::StreamPayload* mutable_payload();
  void set_allocated_payload(::dapr::proto::common::v1::StreamPayload* payload);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.EncryptResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::dapr::proto::common::v1::StreamPayload* payload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DecryptRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.DecryptRequest) */ {
 public:
  DecryptRequest();
  virtual ~DecryptRequest();

  DecryptRequest(const DecryptRequest& from);

  inline DecryptRequest& operator=(const DecryptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptRequest(DecryptRequest&& from) noexcept
    : DecryptRequest() {
    *this = ::std::move(from);
  }

  inline DecryptRequest& operator=(DecryptRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DecryptRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptRequest* internal_default_instance() {
    return reinterpret_cast<const DecryptRequest*>(
               &_DecryptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  void Swap(DecryptRequest* other);
  friend void swap(DecryptRequest& a, DecryptRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptRequest* New() const final {
    return CreateMaybeMessage<DecryptRequest>(NULL);
  }

  DecryptRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptRequest& from);
  void MergeFrom(const DecryptRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dapr.proto.runtime.v1.DecryptRequestOptions options = 1;
  bool has_options() const;
  void clear_options();
  static const int kOptionsFieldNumber = 1;
  private:
  const ::dapr::proto::runtime::v1::DecryptRequestOptions& _internal_options() const;
  public:
  const ::dapr::proto::runtime::v1::DecryptRequestOptions& options() const;
  ::dapr::proto::runtime::v1::DecryptRequestOptions* release_options();
  ::dapr::proto::runtime::v1::DecryptRequestOptions* mutable_options();
  void set_allocated_options(::dapr::proto::runtime::v1::DecryptRequestOptions* options);

  // .dapr.proto.common.v1.StreamPayload payload = 2;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  private:
  const ::dapr::proto::common::v1::StreamPayload& _internal_payload() const;
  public:
  const ::dapr::proto::common::v1::StreamPayload& payload() const;
  ::dapr::proto::common::v1::StreamPayload* release_payload();
  ::dapr::proto::common::v1::StreamPayload* mutable_payload();
  void set_allocated_payload(::dapr::proto::common::v1::StreamPayload* payload);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.DecryptRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::dapr::proto::runtime::v1::DecryptRequestOptions* options_;
  ::dapr::proto::common::v1::StreamPayload* payload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DecryptRequestOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.DecryptRequestOptions) */ {
 public:
  DecryptRequestOptions();
  virtual ~DecryptRequestOptions();

  DecryptRequestOptions(const DecryptRequestOptions& from);

  inline DecryptRequestOptions& operator=(const DecryptRequestOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptRequestOptions(DecryptRequestOptions&& from) noexcept
    : DecryptRequestOptions() {
    *this = ::std::move(from);
  }

  inline DecryptRequestOptions& operator=(DecryptRequestOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DecryptRequestOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptRequestOptions* internal_default_instance() {
    return reinterpret_cast<const DecryptRequestOptions*>(
               &_DecryptRequestOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  void Swap(DecryptRequestOptions* other);
  friend void swap(DecryptRequestOptions& a, DecryptRequestOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptRequestOptions* New() const final {
    return CreateMaybeMessage<DecryptRequestOptions>(NULL);
  }

  DecryptRequestOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptRequestOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptRequestOptions& from);
  void MergeFrom(const DecryptRequestOptions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptRequestOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string component_name = 1[json_name = "componentName"];
  void clear_component_name();
  static const int kComponentNameFieldNumber = 1;
  const ::std::string& component_name() const;
  void set_component_name(const ::std::string& value);
  #if LANG_CXX11
  void set_component_name(::std::string&& value);
  #endif
  void set_component_name(const char* value);
  void set_component_name(const char* value, size_t size);
  ::std::string* mutable_component_name();
  ::std::string* release_component_name();
  void set_allocated_component_name(::std::string* component_name);

  // string key_name = 12[json_name = "keyName"];
  void clear_key_name();
  static const int kKeyNameFieldNumber = 12;
  const ::std::string& key_name() const;
  void set_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_key_name(::std::string&& value);
  #endif
  void set_key_name(const char* value);
  void set_key_name(const char* value, size_t size);
  ::std::string* mutable_key_name();
  ::std::string* release_key_name();
  void set_allocated_key_name(::std::string* key_name);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.DecryptRequestOptions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr component_name_;
  ::google::protobuf::internal::ArenaStringPtr key_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DecryptResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.DecryptResponse) */ {
 public:
  DecryptResponse();
  virtual ~DecryptResponse();

  DecryptResponse(const DecryptResponse& from);

  inline DecryptResponse& operator=(const DecryptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecryptResponse(DecryptResponse&& from) noexcept
    : DecryptResponse() {
    *this = ::std::move(from);
  }

  inline DecryptResponse& operator=(DecryptResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DecryptResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecryptResponse* internal_default_instance() {
    return reinterpret_cast<const DecryptResponse*>(
               &_DecryptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  void Swap(DecryptResponse* other);
  friend void swap(DecryptResponse& a, DecryptResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecryptResponse* New() const final {
    return CreateMaybeMessage<DecryptResponse>(NULL);
  }

  DecryptResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecryptResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecryptResponse& from);
  void MergeFrom(const DecryptResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecryptResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dapr.proto.common.v1.StreamPayload payload = 1;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 1;
  private:
  const ::dapr::proto::common::v1::StreamPayload& _internal_payload() const;
  public:
  const ::dapr::proto::common::v1::StreamPayload& payload() const;
  ::dapr::proto::common::v1::StreamPayload* release_payload();
  ::dapr::proto::common::v1::StreamPayload* mutable_payload();
  void set_allocated_payload(::dapr::proto::common::v1::StreamPayload* payload);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.DecryptResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::dapr::proto::common::v1::StreamPayload* payload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetWorkflowRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetWorkflowRequest) */ {
 public:
  GetWorkflowRequest();
  virtual ~GetWorkflowRequest();

  GetWorkflowRequest(const GetWorkflowRequest& from);

  inline GetWorkflowRequest& operator=(const GetWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetWorkflowRequest(GetWorkflowRequest&& from) noexcept
    : GetWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline GetWorkflowRequest& operator=(GetWorkflowRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWorkflowRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const GetWorkflowRequest*>(
               &_GetWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  void Swap(GetWorkflowRequest* other);
  friend void swap(GetWorkflowRequest& a, GetWorkflowRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetWorkflowRequest* New() const final {
    return CreateMaybeMessage<GetWorkflowRequest>(NULL);
  }

  GetWorkflowRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetWorkflowRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetWorkflowRequest& from);
  void MergeFrom(const GetWorkflowRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetWorkflowRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1[json_name = "instanceID"];
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // string workflow_component = 2[json_name = "workflowComponent"];
  void clear_workflow_component();
  static const int kWorkflowComponentFieldNumber = 2;
  const ::std::string& workflow_component() const;
  void set_workflow_component(const ::std::string& value);
  #if LANG_CXX11
  void set_workflow_component(::std::string&& value);
  #endif
  void set_workflow_component(const char* value);
  void set_workflow_component(const char* value, size_t size);
  ::std::string* mutable_workflow_component();
  ::std::string* release_workflow_component();
  void set_allocated_workflow_component(::std::string* workflow_component);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetWorkflowRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::internal::ArenaStringPtr workflow_component_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetWorkflowResponse_PropertiesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GetWorkflowResponse_PropertiesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GetWorkflowResponse_PropertiesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetWorkflowResponse_PropertiesEntry_DoNotUse();
  GetWorkflowResponse_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GetWorkflowResponse_PropertiesEntry_DoNotUse& other);
  static const GetWorkflowResponse_PropertiesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetWorkflowResponse_PropertiesEntry_DoNotUse*>(&_GetWorkflowResponse_PropertiesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GetWorkflowResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.GetWorkflowResponse) */ {
 public:
  GetWorkflowResponse();
  virtual ~GetWorkflowResponse();

  GetWorkflowResponse(const GetWorkflowResponse& from);

  inline GetWorkflowResponse& operator=(const GetWorkflowResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetWorkflowResponse(GetWorkflowResponse&& from) noexcept
    : GetWorkflowResponse() {
    *this = ::std::move(from);
  }

  inline GetWorkflowResponse& operator=(GetWorkflowResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWorkflowResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetWorkflowResponse* internal_default_instance() {
    return reinterpret_cast<const GetWorkflowResponse*>(
               &_GetWorkflowResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  void Swap(GetWorkflowResponse* other);
  friend void swap(GetWorkflowResponse& a, GetWorkflowResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetWorkflowResponse* New() const final {
    return CreateMaybeMessage<GetWorkflowResponse>(NULL);
  }

  GetWorkflowResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetWorkflowResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetWorkflowResponse& from);
  void MergeFrom(const GetWorkflowResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetWorkflowResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> properties = 6;
  int properties_size() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      properties() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_properties();

  // string instance_id = 1[json_name = "instanceID"];
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // string workflow_name = 2[json_name = "workflowName"];
  void clear_workflow_name();
  static const int kWorkflowNameFieldNumber = 2;
  const ::std::string& workflow_name() const;
  void set_workflow_name(const ::std::string& value);
  #if LANG_CXX11
  void set_workflow_name(::std::string&& value);
  #endif
  void set_workflow_name(const char* value);
  void set_workflow_name(const char* value, size_t size);
  ::std::string* mutable_workflow_name();
  ::std::string* release_workflow_name();
  void set_allocated_workflow_name(::std::string* workflow_name);

  // string runtime_status = 5[json_name = "runtimeStatus"];
  void clear_runtime_status();
  static const int kRuntimeStatusFieldNumber = 5;
  const ::std::string& runtime_status() const;
  void set_runtime_status(const ::std::string& value);
  #if LANG_CXX11
  void set_runtime_status(::std::string&& value);
  #endif
  void set_runtime_status(const char* value);
  void set_runtime_status(const char* value, size_t size);
  ::std::string* mutable_runtime_status();
  ::std::string* release_runtime_status();
  void set_allocated_runtime_status(::std::string* runtime_status);

  // .google.protobuf.Timestamp created_at = 3[json_name = "createdAt"];
  bool has_created_at() const;
  void clear_created_at();
  static const int kCreatedAtFieldNumber = 3;
  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  public:
  const ::google::protobuf::Timestamp& created_at() const;
  ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* created_at);

  // .google.protobuf.Timestamp last_updated_at = 4[json_name = "lastUpdatedAt"];
  bool has_last_updated_at() const;
  void clear_last_updated_at();
  static const int kLastUpdatedAtFieldNumber = 4;
  private:
  const ::google::protobuf::Timestamp& _internal_last_updated_at() const;
  public:
  const ::google::protobuf::Timestamp& last_updated_at() const;
  ::google::protobuf::Timestamp* release_last_updated_at();
  ::google::protobuf::Timestamp* mutable_last_updated_at();
  void set_allocated_last_updated_at(::google::protobuf::Timestamp* last_updated_at);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.GetWorkflowResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      GetWorkflowResponse_PropertiesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > properties_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::internal::ArenaStringPtr workflow_name_;
  ::google::protobuf::internal::ArenaStringPtr runtime_status_;
  ::google::protobuf::Timestamp* created_at_;
  ::google::protobuf::Timestamp* last_updated_at_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartWorkflowRequest_OptionsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<StartWorkflowRequest_OptionsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<StartWorkflowRequest_OptionsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  StartWorkflowRequest_OptionsEntry_DoNotUse();
  StartWorkflowRequest_OptionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const StartWorkflowRequest_OptionsEntry_DoNotUse& other);
  static const StartWorkflowRequest_OptionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const StartWorkflowRequest_OptionsEntry_DoNotUse*>(&_StartWorkflowRequest_OptionsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class StartWorkflowRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.StartWorkflowRequest) */ {
 public:
  StartWorkflowRequest();
  virtual ~StartWorkflowRequest();

  StartWorkflowRequest(const StartWorkflowRequest& from);

  inline StartWorkflowRequest& operator=(const StartWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartWorkflowRequest(StartWorkflowRequest&& from) noexcept
    : StartWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline StartWorkflowRequest& operator=(StartWorkflowRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartWorkflowRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const StartWorkflowRequest*>(
               &_StartWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  void Swap(StartWorkflowRequest* other);
  friend void swap(StartWorkflowRequest& a, StartWorkflowRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartWorkflowRequest* New() const final {
    return CreateMaybeMessage<StartWorkflowRequest>(NULL);
  }

  StartWorkflowRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StartWorkflowRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StartWorkflowRequest& from);
  void MergeFrom(const StartWorkflowRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartWorkflowRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> options = 4;
  int options_size() const;
  void clear_options();
  static const int kOptionsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      options() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_options();

  // string instance_id = 1[json_name = "instanceID"];
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // string workflow_component = 2[json_name = "workflowComponent"];
  void clear_workflow_component();
  static const int kWorkflowComponentFieldNumber = 2;
  const ::std::string& workflow_component() const;
  void set_workflow_component(const ::std::string& value);
  #if LANG_CXX11
  void set_workflow_component(::std::string&& value);
  #endif
  void set_workflow_component(const char* value);
  void set_workflow_component(const char* value, size_t size);
  ::std::string* mutable_workflow_component();
  ::std::string* release_workflow_component();
  void set_allocated_workflow_component(::std::string* workflow_component);

  // string workflow_name = 3[json_name = "workflowName"];
  void clear_workflow_name();
  static const int kWorkflowNameFieldNumber = 3;
  const ::std::string& workflow_name() const;
  void set_workflow_name(const ::std::string& value);
  #if LANG_CXX11
  void set_workflow_name(::std::string&& value);
  #endif
  void set_workflow_name(const char* value);
  void set_workflow_name(const char* value, size_t size);
  ::std::string* mutable_workflow_name();
  ::std::string* release_workflow_name();
  void set_allocated_workflow_name(::std::string* workflow_name);

  // bytes input = 5;
  void clear_input();
  static const int kInputFieldNumber = 5;
  const ::std::string& input() const;
  void set_input(const ::std::string& value);
  #if LANG_CXX11
  void set_input(::std::string&& value);
  #endif
  void set_input(const char* value);
  void set_input(const void* value, size_t size);
  ::std::string* mutable_input();
  ::std::string* release_input();
  void set_allocated_input(::std::string* input);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.StartWorkflowRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      StartWorkflowRequest_OptionsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > options_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::internal::ArenaStringPtr workflow_component_;
  ::google::protobuf::internal::ArenaStringPtr workflow_name_;
  ::google::protobuf::internal::ArenaStringPtr input_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartWorkflowResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.StartWorkflowResponse) */ {
 public:
  StartWorkflowResponse();
  virtual ~StartWorkflowResponse();

  StartWorkflowResponse(const StartWorkflowResponse& from);

  inline StartWorkflowResponse& operator=(const StartWorkflowResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartWorkflowResponse(StartWorkflowResponse&& from) noexcept
    : StartWorkflowResponse() {
    *this = ::std::move(from);
  }

  inline StartWorkflowResponse& operator=(StartWorkflowResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartWorkflowResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartWorkflowResponse* internal_default_instance() {
    return reinterpret_cast<const StartWorkflowResponse*>(
               &_StartWorkflowResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  void Swap(StartWorkflowResponse* other);
  friend void swap(StartWorkflowResponse& a, StartWorkflowResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartWorkflowResponse* New() const final {
    return CreateMaybeMessage<StartWorkflowResponse>(NULL);
  }

  StartWorkflowResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StartWorkflowResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StartWorkflowResponse& from);
  void MergeFrom(const StartWorkflowResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartWorkflowResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1[json_name = "instanceID"];
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.StartWorkflowResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TerminateWorkflowRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.TerminateWorkflowRequest) */ {
 public:
  TerminateWorkflowRequest();
  virtual ~TerminateWorkflowRequest();

  TerminateWorkflowRequest(const TerminateWorkflowRequest& from);

  inline TerminateWorkflowRequest& operator=(const TerminateWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminateWorkflowRequest(TerminateWorkflowRequest&& from) noexcept
    : TerminateWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline TerminateWorkflowRequest& operator=(TerminateWorkflowRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminateWorkflowRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminateWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const TerminateWorkflowRequest*>(
               &_TerminateWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  void Swap(TerminateWorkflowRequest* other);
  friend void swap(TerminateWorkflowRequest& a, TerminateWorkflowRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminateWorkflowRequest* New() const final {
    return CreateMaybeMessage<TerminateWorkflowRequest>(NULL);
  }

  TerminateWorkflowRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TerminateWorkflowRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TerminateWorkflowRequest& from);
  void MergeFrom(const TerminateWorkflowRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TerminateWorkflowRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1[json_name = "instanceID"];
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // string workflow_component = 2[json_name = "workflowComponent"];
  void clear_workflow_component();
  static const int kWorkflowComponentFieldNumber = 2;
  const ::std::string& workflow_component() const;
  void set_workflow_component(const ::std::string& value);
  #if LANG_CXX11
  void set_workflow_component(::std::string&& value);
  #endif
  void set_workflow_component(const char* value);
  void set_workflow_component(const char* value, size_t size);
  ::std::string* mutable_workflow_component();
  ::std::string* release_workflow_component();
  void set_allocated_workflow_component(::std::string* workflow_component);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.TerminateWorkflowRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::internal::ArenaStringPtr workflow_component_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PauseWorkflowRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PauseWorkflowRequest) */ {
 public:
  PauseWorkflowRequest();
  virtual ~PauseWorkflowRequest();

  PauseWorkflowRequest(const PauseWorkflowRequest& from);

  inline PauseWorkflowRequest& operator=(const PauseWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PauseWorkflowRequest(PauseWorkflowRequest&& from) noexcept
    : PauseWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline PauseWorkflowRequest& operator=(PauseWorkflowRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PauseWorkflowRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PauseWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const PauseWorkflowRequest*>(
               &_PauseWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  void Swap(PauseWorkflowRequest* other);
  friend void swap(PauseWorkflowRequest& a, PauseWorkflowRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PauseWorkflowRequest* New() const final {
    return CreateMaybeMessage<PauseWorkflowRequest>(NULL);
  }

  PauseWorkflowRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PauseWorkflowRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PauseWorkflowRequest& from);
  void MergeFrom(const PauseWorkflowRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PauseWorkflowRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1[json_name = "instanceID"];
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // string workflow_component = 2[json_name = "workflowComponent"];
  void clear_workflow_component();
  static const int kWorkflowComponentFieldNumber = 2;
  const ::std::string& workflow_component() const;
  void set_workflow_component(const ::std::string& value);
  #if LANG_CXX11
  void set_workflow_component(::std::string&& value);
  #endif
  void set_workflow_component(const char* value);
  void set_workflow_component(const char* value, size_t size);
  ::std::string* mutable_workflow_component();
  ::std::string* release_workflow_component();
  void set_allocated_workflow_component(::std::string* workflow_component);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PauseWorkflowRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::internal::ArenaStringPtr workflow_component_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResumeWorkflowRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.ResumeWorkflowRequest) */ {
 public:
  ResumeWorkflowRequest();
  virtual ~ResumeWorkflowRequest();

  ResumeWorkflowRequest(const ResumeWorkflowRequest& from);

  inline ResumeWorkflowRequest& operator=(const ResumeWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResumeWorkflowRequest(ResumeWorkflowRequest&& from) noexcept
    : ResumeWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline ResumeWorkflowRequest& operator=(ResumeWorkflowRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResumeWorkflowRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResumeWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const ResumeWorkflowRequest*>(
               &_ResumeWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  void Swap(ResumeWorkflowRequest* other);
  friend void swap(ResumeWorkflowRequest& a, ResumeWorkflowRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResumeWorkflowRequest* New() const final {
    return CreateMaybeMessage<ResumeWorkflowRequest>(NULL);
  }

  ResumeWorkflowRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResumeWorkflowRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResumeWorkflowRequest& from);
  void MergeFrom(const ResumeWorkflowRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResumeWorkflowRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1[json_name = "instanceID"];
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // string workflow_component = 2[json_name = "workflowComponent"];
  void clear_workflow_component();
  static const int kWorkflowComponentFieldNumber = 2;
  const ::std::string& workflow_component() const;
  void set_workflow_component(const ::std::string& value);
  #if LANG_CXX11
  void set_workflow_component(::std::string&& value);
  #endif
  void set_workflow_component(const char* value);
  void set_workflow_component(const char* value, size_t size);
  ::std::string* mutable_workflow_component();
  ::std::string* release_workflow_component();
  void set_allocated_workflow_component(::std::string* workflow_component);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.ResumeWorkflowRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::internal::ArenaStringPtr workflow_component_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RaiseEventWorkflowRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.RaiseEventWorkflowRequest) */ {
 public:
  RaiseEventWorkflowRequest();
  virtual ~RaiseEventWorkflowRequest();

  RaiseEventWorkflowRequest(const RaiseEventWorkflowRequest& from);

  inline RaiseEventWorkflowRequest& operator=(const RaiseEventWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RaiseEventWorkflowRequest(RaiseEventWorkflowRequest&& from) noexcept
    : RaiseEventWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline RaiseEventWorkflowRequest& operator=(RaiseEventWorkflowRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RaiseEventWorkflowRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RaiseEventWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const RaiseEventWorkflowRequest*>(
               &_RaiseEventWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  void Swap(RaiseEventWorkflowRequest* other);
  friend void swap(RaiseEventWorkflowRequest& a, RaiseEventWorkflowRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RaiseEventWorkflowRequest* New() const final {
    return CreateMaybeMessage<RaiseEventWorkflowRequest>(NULL);
  }

  RaiseEventWorkflowRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RaiseEventWorkflowRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RaiseEventWorkflowRequest& from);
  void MergeFrom(const RaiseEventWorkflowRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RaiseEventWorkflowRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1[json_name = "instanceID"];
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // string workflow_component = 2[json_name = "workflowComponent"];
  void clear_workflow_component();
  static const int kWorkflowComponentFieldNumber = 2;
  const ::std::string& workflow_component() const;
  void set_workflow_component(const ::std::string& value);
  #if LANG_CXX11
  void set_workflow_component(::std::string&& value);
  #endif
  void set_workflow_component(const char* value);
  void set_workflow_component(const char* value, size_t size);
  ::std::string* mutable_workflow_component();
  ::std::string* release_workflow_component();
  void set_allocated_workflow_component(::std::string* workflow_component);

  // string event_name = 3[json_name = "eventName"];
  void clear_event_name();
  static const int kEventNameFieldNumber = 3;
  const ::std::string& event_name() const;
  void set_event_name(const ::std::string& value);
  #if LANG_CXX11
  void set_event_name(::std::string&& value);
  #endif
  void set_event_name(const char* value);
  void set_event_name(const char* value, size_t size);
  ::std::string* mutable_event_name();
  ::std::string* release_event_name();
  void set_allocated_event_name(::std::string* event_name);

  // bytes event_data = 4;
  void clear_event_data();
  static const int kEventDataFieldNumber = 4;
  const ::std::string& event_data() const;
  void set_event_data(const ::std::string& value);
  #if LANG_CXX11
  void set_event_data(::std::string&& value);
  #endif
  void set_event_data(const char* value);
  void set_event_data(const void* value, size_t size);
  ::std::string* mutable_event_data();
  ::std::string* release_event_data();
  void set_allocated_event_data(::std::string* event_data);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.RaiseEventWorkflowRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::internal::ArenaStringPtr workflow_component_;
  ::google::protobuf::internal::ArenaStringPtr event_name_;
  ::google::protobuf::internal::ArenaStringPtr event_data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PurgeWorkflowRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dapr.proto.runtime.v1.PurgeWorkflowRequest) */ {
 public:
  PurgeWorkflowRequest();
  virtual ~PurgeWorkflowRequest();

  PurgeWorkflowRequest(const PurgeWorkflowRequest& from);

  inline PurgeWorkflowRequest& operator=(const PurgeWorkflowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PurgeWorkflowRequest(PurgeWorkflowRequest&& from) noexcept
    : PurgeWorkflowRequest() {
    *this = ::std::move(from);
  }

  inline PurgeWorkflowRequest& operator=(PurgeWorkflowRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PurgeWorkflowRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PurgeWorkflowRequest* internal_default_instance() {
    return reinterpret_cast<const PurgeWorkflowRequest*>(
               &_PurgeWorkflowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  void Swap(PurgeWorkflowRequest* other);
  friend void swap(PurgeWorkflowRequest& a, PurgeWorkflowRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PurgeWorkflowRequest* New() const final {
    return CreateMaybeMessage<PurgeWorkflowRequest>(NULL);
  }

  PurgeWorkflowRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PurgeWorkflowRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PurgeWorkflowRequest& from);
  void MergeFrom(const PurgeWorkflowRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PurgeWorkflowRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_id = 1[json_name = "instanceID"];
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // string workflow_component = 2[json_name = "workflowComponent"];
  void clear_workflow_component();
  static const int kWorkflowComponentFieldNumber = 2;
  const ::std::string& workflow_component() const;
  void set_workflow_component(const ::std::string& value);
  #if LANG_CXX11
  void set_workflow_component(::std::string&& value);
  #endif
  void set_workflow_component(const char* value);
  void set_workflow_component(const char* value, size_t size);
  ::std::string* mutable_workflow_component();
  ::std::string* release_workflow_component();
  void set_allocated_workflow_component(::std::string* workflow_component);

  // @@protoc_insertion_point(class_scope:dapr.proto.runtime.v1.PurgeWorkflowRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::protobuf::internal::ArenaStringPtr workflow_component_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InvokeServiceRequest

// string id = 1;
inline void InvokeServiceRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeServiceRequest::id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeServiceRequest.id)
  return id_.GetNoArena();
}
inline void InvokeServiceRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeServiceRequest.id)
}
#if LANG_CXX11
inline void InvokeServiceRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeServiceRequest.id)
}
#endif
inline void InvokeServiceRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeServiceRequest.id)
}
inline void InvokeServiceRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeServiceRequest.id)
}
inline ::std::string* InvokeServiceRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeServiceRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeServiceRequest::release_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeServiceRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeServiceRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeServiceRequest.id)
}

// .dapr.proto.common.v1.InvokeRequest message = 3;
inline bool InvokeServiceRequest::has_message() const {
  return this != internal_default_instance() && message_ != NULL;
}
inline const ::dapr::proto::common::v1::InvokeRequest& InvokeServiceRequest::_internal_message() const {
  return *message_;
}
inline const ::dapr::proto::common::v1::InvokeRequest& InvokeServiceRequest::message() const {
  const ::dapr::proto::common::v1::InvokeRequest* p = message_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeServiceRequest.message)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::common::v1::InvokeRequest*>(
      &::dapr::proto::common::v1::_InvokeRequest_default_instance_);
}
inline ::dapr::proto::common::v1::InvokeRequest* InvokeServiceRequest::release_message() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeServiceRequest.message)
  
  ::dapr::proto::common::v1::InvokeRequest* temp = message_;
  message_ = NULL;
  return temp;
}
inline ::dapr::proto::common::v1::InvokeRequest* InvokeServiceRequest::mutable_message() {
  
  if (message_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::InvokeRequest>(GetArenaNoVirtual());
    message_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeServiceRequest.message)
  return message_;
}
inline void InvokeServiceRequest::set_allocated_message(::dapr::proto::common::v1::InvokeRequest* message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(message_);
  }
  if (message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    
  } else {
    
  }
  message_ = message;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeServiceRequest.message)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetStateRequest

// string store_name = 1;
inline void GetStateRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateRequest.store_name)
  return store_name_.GetNoArena();
}
inline void GetStateRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateRequest.store_name)
}
#if LANG_CXX11
inline void GetStateRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetStateRequest.store_name)
}
#endif
inline void GetStateRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetStateRequest.store_name)
}
inline void GetStateRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetStateRequest.store_name)
}
inline ::std::string* GetStateRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetStateRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetStateRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetStateRequest.store_name)
}

// string key = 2;
inline void GetStateRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateRequest.key)
  return key_.GetNoArena();
}
inline void GetStateRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateRequest.key)
}
#if LANG_CXX11
inline void GetStateRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetStateRequest.key)
}
#endif
inline void GetStateRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetStateRequest.key)
}
inline void GetStateRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetStateRequest.key)
}
inline ::std::string* GetStateRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetStateRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateRequest::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetStateRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetStateRequest.key)
}

// .dapr.proto.common.v1.StateOptions.StateConsistency consistency = 3;
inline void GetStateRequest::clear_consistency() {
  consistency_ = 0;
}
inline ::dapr::proto::common::v1::StateOptions_StateConsistency GetStateRequest::consistency() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateRequest.consistency)
  return static_cast< ::dapr::proto::common::v1::StateOptions_StateConsistency >(consistency_);
}
inline void GetStateRequest::set_consistency(::dapr::proto::common::v1::StateOptions_StateConsistency value) {
  
  consistency_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateRequest.consistency)
}

// map<string, string> metadata = 4;
inline int GetStateRequest::metadata_size() const {
  return metadata_.size();
}
inline void GetStateRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetStateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetStateRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetStateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetStateRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetBulkStateRequest

// string store_name = 1;
inline void GetBulkStateRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBulkStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
  return store_name_.GetNoArena();
}
inline void GetBulkStateRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
}
#if LANG_CXX11
inline void GetBulkStateRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
}
#endif
inline void GetBulkStateRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
}
inline void GetBulkStateRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
}
inline ::std::string* GetBulkStateRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBulkStateRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBulkStateRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetBulkStateRequest.store_name)
}

// repeated string keys = 2;
inline int GetBulkStateRequest::keys_size() const {
  return keys_.size();
}
inline void GetBulkStateRequest::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& GetBulkStateRequest::keys(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return keys_.Get(index);
}
inline ::std::string* GetBulkStateRequest::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return keys_.Mutable(index);
}
inline void GetBulkStateRequest::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetBulkStateRequest::set_keys(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  keys_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetBulkStateRequest::set_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline ::std::string* GetBulkStateRequest::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return keys_.Add();
}
inline void GetBulkStateRequest::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
#if LANG_CXX11
inline void GetBulkStateRequest::add_keys(::std::string&& value) {
  keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
#endif
inline void GetBulkStateRequest::add_keys(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline void GetBulkStateRequest::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetBulkStateRequest::keys() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetBulkStateRequest::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetBulkStateRequest.keys)
  return &keys_;
}

// int32 parallelism = 3;
inline void GetBulkStateRequest::clear_parallelism() {
  parallelism_ = 0;
}
inline ::google::protobuf::int32 GetBulkStateRequest::parallelism() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkStateRequest.parallelism)
  return parallelism_;
}
inline void GetBulkStateRequest::set_parallelism(::google::protobuf::int32 value) {
  
  parallelism_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkStateRequest.parallelism)
}

// map<string, string> metadata = 4;
inline int GetBulkStateRequest::metadata_size() const {
  return metadata_.size();
}
inline void GetBulkStateRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetBulkStateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetBulkStateRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetBulkStateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetBulkStateRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// GetBulkStateResponse

// repeated .dapr.proto.runtime.v1.BulkStateItem items = 1;
inline int GetBulkStateResponse::items_size() const {
  return items_.size();
}
inline void GetBulkStateResponse::clear_items() {
  items_.Clear();
}
inline ::dapr::proto::runtime::v1::BulkStateItem* GetBulkStateResponse::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem >*
GetBulkStateResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return &items_;
}
inline const ::dapr::proto::runtime::v1::BulkStateItem& GetBulkStateResponse::items(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return items_.Get(index);
}
inline ::dapr::proto::runtime::v1::BulkStateItem* GetBulkStateResponse::add_items() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkStateItem >&
GetBulkStateResponse::items() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetBulkStateResponse.items)
  return items_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BulkStateItem

// string key = 1;
inline void BulkStateItem::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkStateItem::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkStateItem.key)
  return key_.GetNoArena();
}
inline void BulkStateItem::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkStateItem.key)
}
#if LANG_CXX11
inline void BulkStateItem::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkStateItem.key)
}
#endif
inline void BulkStateItem::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkStateItem.key)
}
inline void BulkStateItem::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkStateItem.key)
}
inline ::std::string* BulkStateItem::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkStateItem.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkStateItem::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkStateItem.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkStateItem::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkStateItem.key)
}

// bytes data = 2;
inline void BulkStateItem::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkStateItem::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkStateItem.data)
  return data_.GetNoArena();
}
inline void BulkStateItem::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkStateItem.data)
}
#if LANG_CXX11
inline void BulkStateItem::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkStateItem.data)
}
#endif
inline void BulkStateItem::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkStateItem.data)
}
inline void BulkStateItem::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkStateItem.data)
}
inline ::std::string* BulkStateItem::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkStateItem.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkStateItem::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkStateItem.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkStateItem::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkStateItem.data)
}

// string etag = 3;
inline void BulkStateItem::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkStateItem::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkStateItem.etag)
  return etag_.GetNoArena();
}
inline void BulkStateItem::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkStateItem.etag)
}
#if LANG_CXX11
inline void BulkStateItem::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkStateItem.etag)
}
#endif
inline void BulkStateItem::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkStateItem.etag)
}
inline void BulkStateItem::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkStateItem.etag)
}
inline ::std::string* BulkStateItem::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkStateItem.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkStateItem::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkStateItem.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkStateItem::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkStateItem.etag)
}

// string error = 4;
inline void BulkStateItem::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkStateItem::error() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkStateItem.error)
  return error_.GetNoArena();
}
inline void BulkStateItem::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkStateItem.error)
}
#if LANG_CXX11
inline void BulkStateItem::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkStateItem.error)
}
#endif
inline void BulkStateItem::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkStateItem.error)
}
inline void BulkStateItem::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkStateItem.error)
}
inline ::std::string* BulkStateItem::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkStateItem.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkStateItem::release_error() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkStateItem.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkStateItem::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkStateItem.error)
}

// map<string, string> metadata = 5;
inline int BulkStateItem::metadata_size() const {
  return metadata_.size();
}
inline void BulkStateItem::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
BulkStateItem::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.BulkStateItem.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
BulkStateItem::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.BulkStateItem.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetStateResponse

// bytes data = 1;
inline void GetStateResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateResponse::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateResponse.data)
  return data_.GetNoArena();
}
inline void GetStateResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateResponse.data)
}
#if LANG_CXX11
inline void GetStateResponse::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetStateResponse.data)
}
#endif
inline void GetStateResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetStateResponse.data)
}
inline void GetStateResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetStateResponse.data)
}
inline ::std::string* GetStateResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetStateResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateResponse::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetStateResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetStateResponse.data)
}

// string etag = 2;
inline void GetStateResponse::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetStateResponse::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetStateResponse.etag)
  return etag_.GetNoArena();
}
inline void GetStateResponse::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetStateResponse.etag)
}
#if LANG_CXX11
inline void GetStateResponse::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetStateResponse.etag)
}
#endif
inline void GetStateResponse::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetStateResponse.etag)
}
inline void GetStateResponse::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetStateResponse.etag)
}
inline ::std::string* GetStateResponse::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetStateResponse.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetStateResponse::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetStateResponse.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetStateResponse::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetStateResponse.etag)
}

// map<string, string> metadata = 3;
inline int GetStateResponse::metadata_size() const {
  return metadata_.size();
}
inline void GetStateResponse::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetStateResponse::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetStateResponse.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetStateResponse::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetStateResponse.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DeleteStateRequest

// string store_name = 1;
inline void DeleteStateRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
  return store_name_.GetNoArena();
}
inline void DeleteStateRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
}
#if LANG_CXX11
inline void DeleteStateRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
}
#endif
inline void DeleteStateRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
}
inline void DeleteStateRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
}
inline ::std::string* DeleteStateRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStateRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStateRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.store_name)
}

// string key = 2;
inline void DeleteStateRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteStateRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteStateRequest.key)
  return key_.GetNoArena();
}
inline void DeleteStateRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DeleteStateRequest.key)
}
#if LANG_CXX11
inline void DeleteStateRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.DeleteStateRequest.key)
}
#endif
inline void DeleteStateRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.DeleteStateRequest.key)
}
inline void DeleteStateRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.DeleteStateRequest.key)
}
inline ::std::string* DeleteStateRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteStateRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteStateRequest::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteStateRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteStateRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.key)
}

// .dapr.proto.common.v1.Etag etag = 3;
inline bool DeleteStateRequest::has_etag() const {
  return this != internal_default_instance() && etag_ != NULL;
}
inline const ::dapr::proto::common::v1::Etag& DeleteStateRequest::_internal_etag() const {
  return *etag_;
}
inline const ::dapr::proto::common::v1::Etag& DeleteStateRequest::etag() const {
  const ::dapr::proto::common::v1::Etag* p = etag_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteStateRequest.etag)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::common::v1::Etag*>(
      &::dapr::proto::common::v1::_Etag_default_instance_);
}
inline ::dapr::proto::common::v1::Etag* DeleteStateRequest::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteStateRequest.etag)
  
  ::dapr::proto::common::v1::Etag* temp = etag_;
  etag_ = NULL;
  return temp;
}
inline ::dapr::proto::common::v1::Etag* DeleteStateRequest::mutable_etag() {
  
  if (etag_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::Etag>(GetArenaNoVirtual());
    etag_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteStateRequest.etag)
  return etag_;
}
inline void DeleteStateRequest::set_allocated_etag(::dapr::proto::common::v1::Etag* etag) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(etag_);
  }
  if (etag) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      etag = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, etag, submessage_arena);
    }
    
  } else {
    
  }
  etag_ = etag;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.etag)
}

// .dapr.proto.common.v1.StateOptions options = 4;
inline bool DeleteStateRequest::has_options() const {
  return this != internal_default_instance() && options_ != NULL;
}
inline const ::dapr::proto::common::v1::StateOptions& DeleteStateRequest::_internal_options() const {
  return *options_;
}
inline const ::dapr::proto::common::v1::StateOptions& DeleteStateRequest::options() const {
  const ::dapr::proto::common::v1::StateOptions* p = options_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteStateRequest.options)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::common::v1::StateOptions*>(
      &::dapr::proto::common::v1::_StateOptions_default_instance_);
}
inline ::dapr::proto::common::v1::StateOptions* DeleteStateRequest::release_options() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteStateRequest.options)
  
  ::dapr::proto::common::v1::StateOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline ::dapr::proto::common::v1::StateOptions* DeleteStateRequest::mutable_options() {
  
  if (options_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StateOptions>(GetArenaNoVirtual());
    options_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteStateRequest.options)
  return options_;
}
inline void DeleteStateRequest::set_allocated_options(::dapr::proto::common::v1::StateOptions* options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(options_);
  }
  if (options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    
  } else {
    
  }
  options_ = options;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteStateRequest.options)
}

// map<string, string> metadata = 5;
inline int DeleteStateRequest::metadata_size() const {
  return metadata_.size();
}
inline void DeleteStateRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
DeleteStateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.DeleteStateRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
DeleteStateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.DeleteStateRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// DeleteBulkStateRequest

// string store_name = 1;
inline void DeleteBulkStateRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteBulkStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
  return store_name_.GetNoArena();
}
inline void DeleteBulkStateRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
}
#if LANG_CXX11
inline void DeleteBulkStateRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
}
#endif
inline void DeleteBulkStateRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
}
inline void DeleteBulkStateRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
}
inline ::std::string* DeleteBulkStateRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteBulkStateRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteBulkStateRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DeleteBulkStateRequest.store_name)
}

// repeated .dapr.proto.common.v1.StateItem states = 2;
inline int DeleteBulkStateRequest::states_size() const {
  return states_.size();
}
inline ::dapr::proto::common::v1::StateItem* DeleteBulkStateRequest::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DeleteBulkStateRequest.states)
  return states_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >*
DeleteBulkStateRequest::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.DeleteBulkStateRequest.states)
  return &states_;
}
inline const ::dapr::proto::common::v1::StateItem& DeleteBulkStateRequest::states(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DeleteBulkStateRequest.states)
  return states_.Get(index);
}
inline ::dapr::proto::common::v1::StateItem* DeleteBulkStateRequest::add_states() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.DeleteBulkStateRequest.states)
  return states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >&
DeleteBulkStateRequest::states() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.DeleteBulkStateRequest.states)
  return states_;
}

// -------------------------------------------------------------------

// SaveStateRequest

// string store_name = 1;
inline void SaveStateRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SaveStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SaveStateRequest.store_name)
  return store_name_.GetNoArena();
}
inline void SaveStateRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SaveStateRequest.store_name)
}
#if LANG_CXX11
inline void SaveStateRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SaveStateRequest.store_name)
}
#endif
inline void SaveStateRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SaveStateRequest.store_name)
}
inline void SaveStateRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SaveStateRequest.store_name)
}
inline ::std::string* SaveStateRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SaveStateRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SaveStateRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SaveStateRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SaveStateRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SaveStateRequest.store_name)
}

// repeated .dapr.proto.common.v1.StateItem states = 2;
inline int SaveStateRequest::states_size() const {
  return states_.size();
}
inline ::dapr::proto::common::v1::StateItem* SaveStateRequest::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SaveStateRequest.states)
  return states_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >*
SaveStateRequest::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.SaveStateRequest.states)
  return &states_;
}
inline const ::dapr::proto::common::v1::StateItem& SaveStateRequest::states(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SaveStateRequest.states)
  return states_.Get(index);
}
inline ::dapr::proto::common::v1::StateItem* SaveStateRequest::add_states() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.SaveStateRequest.states)
  return states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::common::v1::StateItem >&
SaveStateRequest::states() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.SaveStateRequest.states)
  return states_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// QueryStateRequest

// string store_name = 1[json_name = "storeName"];
inline void QueryStateRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStateRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateRequest.store_name)
  return store_name_.GetNoArena();
}
inline void QueryStateRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateRequest.store_name)
}
#if LANG_CXX11
inline void QueryStateRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.QueryStateRequest.store_name)
}
#endif
inline void QueryStateRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.QueryStateRequest.store_name)
}
inline void QueryStateRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.QueryStateRequest.store_name)
}
inline ::std::string* QueryStateRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStateRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStateRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateRequest.store_name)
}

// string query = 2;
inline void QueryStateRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStateRequest::query() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateRequest.query)
  return query_.GetNoArena();
}
inline void QueryStateRequest::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateRequest.query)
}
#if LANG_CXX11
inline void QueryStateRequest::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.QueryStateRequest.query)
}
#endif
inline void QueryStateRequest::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.QueryStateRequest.query)
}
inline void QueryStateRequest::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.QueryStateRequest.query)
}
inline ::std::string* QueryStateRequest::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStateRequest::release_query() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateRequest.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStateRequest::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateRequest.query)
}

// map<string, string> metadata = 3;
inline int QueryStateRequest::metadata_size() const {
  return metadata_.size();
}
inline void QueryStateRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
QueryStateRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.QueryStateRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
QueryStateRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.QueryStateRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// QueryStateItem

// string key = 1;
inline void QueryStateItem::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStateItem::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateItem.key)
  return key_.GetNoArena();
}
inline void QueryStateItem::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateItem.key)
}
#if LANG_CXX11
inline void QueryStateItem::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.QueryStateItem.key)
}
#endif
inline void QueryStateItem::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.QueryStateItem.key)
}
inline void QueryStateItem::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.QueryStateItem.key)
}
inline ::std::string* QueryStateItem::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateItem.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStateItem::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateItem.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStateItem::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateItem.key)
}

// bytes data = 2;
inline void QueryStateItem::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStateItem::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateItem.data)
  return data_.GetNoArena();
}
inline void QueryStateItem::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateItem.data)
}
#if LANG_CXX11
inline void QueryStateItem::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.QueryStateItem.data)
}
#endif
inline void QueryStateItem::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.QueryStateItem.data)
}
inline void QueryStateItem::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.QueryStateItem.data)
}
inline ::std::string* QueryStateItem::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateItem.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStateItem::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateItem.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStateItem::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateItem.data)
}

// string etag = 3;
inline void QueryStateItem::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStateItem::etag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateItem.etag)
  return etag_.GetNoArena();
}
inline void QueryStateItem::set_etag(const ::std::string& value) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateItem.etag)
}
#if LANG_CXX11
inline void QueryStateItem::set_etag(::std::string&& value) {
  
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.QueryStateItem.etag)
}
#endif
inline void QueryStateItem::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.QueryStateItem.etag)
}
inline void QueryStateItem::set_etag(const char* value, size_t size) {
  
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.QueryStateItem.etag)
}
inline ::std::string* QueryStateItem::mutable_etag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateItem.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStateItem::release_etag() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateItem.etag)
  
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStateItem::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    
  } else {
    
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateItem.etag)
}

// string error = 4;
inline void QueryStateItem::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStateItem::error() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateItem.error)
  return error_.GetNoArena();
}
inline void QueryStateItem::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateItem.error)
}
#if LANG_CXX11
inline void QueryStateItem::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.QueryStateItem.error)
}
#endif
inline void QueryStateItem::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.QueryStateItem.error)
}
inline void QueryStateItem::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.QueryStateItem.error)
}
inline ::std::string* QueryStateItem::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateItem.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStateItem::release_error() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateItem.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStateItem::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateItem.error)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// QueryStateResponse

// repeated .dapr.proto.runtime.v1.QueryStateItem results = 1;
inline int QueryStateResponse::results_size() const {
  return results_.size();
}
inline void QueryStateResponse::clear_results() {
  results_.Clear();
}
inline ::dapr::proto::runtime::v1::QueryStateItem* QueryStateResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateResponse.results)
  return results_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::QueryStateItem >*
QueryStateResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.QueryStateResponse.results)
  return &results_;
}
inline const ::dapr::proto::runtime::v1::QueryStateItem& QueryStateResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateResponse.results)
  return results_.Get(index);
}
inline ::dapr::proto::runtime::v1::QueryStateItem* QueryStateResponse::add_results() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.QueryStateResponse.results)
  return results_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::QueryStateItem >&
QueryStateResponse::results() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.QueryStateResponse.results)
  return results_;
}

// string token = 2;
inline void QueryStateResponse::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryStateResponse::token() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.QueryStateResponse.token)
  return token_.GetNoArena();
}
inline void QueryStateResponse::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.QueryStateResponse.token)
}
#if LANG_CXX11
inline void QueryStateResponse::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.QueryStateResponse.token)
}
#endif
inline void QueryStateResponse::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.QueryStateResponse.token)
}
inline void QueryStateResponse::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.QueryStateResponse.token)
}
inline ::std::string* QueryStateResponse::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.QueryStateResponse.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryStateResponse::release_token() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.QueryStateResponse.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryStateResponse::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.QueryStateResponse.token)
}

// map<string, string> metadata = 3;
inline int QueryStateResponse::metadata_size() const {
  return metadata_.size();
}
inline void QueryStateResponse::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
QueryStateResponse::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.QueryStateResponse.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
QueryStateResponse::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.QueryStateResponse.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PublishEventRequest

// string pubsub_name = 1;
inline void PublishEventRequest::clear_pubsub_name() {
  pubsub_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PublishEventRequest::pubsub_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
  return pubsub_name_.GetNoArena();
}
inline void PublishEventRequest::set_pubsub_name(const ::std::string& value) {
  
  pubsub_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
}
#if LANG_CXX11
inline void PublishEventRequest::set_pubsub_name(::std::string&& value) {
  
  pubsub_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
}
#endif
inline void PublishEventRequest::set_pubsub_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pubsub_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
}
inline void PublishEventRequest::set_pubsub_name(const char* value, size_t size) {
  
  pubsub_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
}
inline ::std::string* PublishEventRequest::mutable_pubsub_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
  return pubsub_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishEventRequest::release_pubsub_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
  
  return pubsub_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishEventRequest::set_allocated_pubsub_name(::std::string* pubsub_name) {
  if (pubsub_name != NULL) {
    
  } else {
    
  }
  pubsub_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubsub_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PublishEventRequest.pubsub_name)
}

// string topic = 2;
inline void PublishEventRequest::clear_topic() {
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PublishEventRequest::topic() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PublishEventRequest.topic)
  return topic_.GetNoArena();
}
inline void PublishEventRequest::set_topic(const ::std::string& value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PublishEventRequest.topic)
}
#if LANG_CXX11
inline void PublishEventRequest::set_topic(::std::string&& value) {
  
  topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PublishEventRequest.topic)
}
#endif
inline void PublishEventRequest::set_topic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PublishEventRequest.topic)
}
inline void PublishEventRequest::set_topic(const char* value, size_t size) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PublishEventRequest.topic)
}
inline ::std::string* PublishEventRequest::mutable_topic() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PublishEventRequest.topic)
  return topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishEventRequest::release_topic() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PublishEventRequest.topic)
  
  return topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishEventRequest::set_allocated_topic(::std::string* topic) {
  if (topic != NULL) {
    
  } else {
    
  }
  topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topic);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PublishEventRequest.topic)
}

// bytes data = 3;
inline void PublishEventRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PublishEventRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PublishEventRequest.data)
  return data_.GetNoArena();
}
inline void PublishEventRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PublishEventRequest.data)
}
#if LANG_CXX11
inline void PublishEventRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PublishEventRequest.data)
}
#endif
inline void PublishEventRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PublishEventRequest.data)
}
inline void PublishEventRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PublishEventRequest.data)
}
inline ::std::string* PublishEventRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PublishEventRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishEventRequest::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PublishEventRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishEventRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PublishEventRequest.data)
}

// string data_content_type = 4;
inline void PublishEventRequest::clear_data_content_type() {
  data_content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PublishEventRequest::data_content_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
  return data_content_type_.GetNoArena();
}
inline void PublishEventRequest::set_data_content_type(const ::std::string& value) {
  
  data_content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
}
#if LANG_CXX11
inline void PublishEventRequest::set_data_content_type(::std::string&& value) {
  
  data_content_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
}
#endif
inline void PublishEventRequest::set_data_content_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
}
inline void PublishEventRequest::set_data_content_type(const char* value, size_t size) {
  
  data_content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
}
inline ::std::string* PublishEventRequest::mutable_data_content_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
  return data_content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublishEventRequest::release_data_content_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
  
  return data_content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublishEventRequest::set_allocated_data_content_type(::std::string* data_content_type) {
  if (data_content_type != NULL) {
    
  } else {
    
  }
  data_content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_content_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PublishEventRequest.data_content_type)
}

// map<string, string> metadata = 5;
inline int PublishEventRequest::metadata_size() const {
  return metadata_.size();
}
inline void PublishEventRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PublishEventRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.PublishEventRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PublishEventRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.PublishEventRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BulkPublishRequest

// string pubsub_name = 1;
inline void BulkPublishRequest::clear_pubsub_name() {
  pubsub_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkPublishRequest::pubsub_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
  return pubsub_name_.GetNoArena();
}
inline void BulkPublishRequest::set_pubsub_name(const ::std::string& value) {
  
  pubsub_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
}
#if LANG_CXX11
inline void BulkPublishRequest::set_pubsub_name(::std::string&& value) {
  
  pubsub_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
}
#endif
inline void BulkPublishRequest::set_pubsub_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pubsub_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
}
inline void BulkPublishRequest::set_pubsub_name(const char* value, size_t size) {
  
  pubsub_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
}
inline ::std::string* BulkPublishRequest::mutable_pubsub_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
  return pubsub_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkPublishRequest::release_pubsub_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
  
  return pubsub_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkPublishRequest::set_allocated_pubsub_name(::std::string* pubsub_name) {
  if (pubsub_name != NULL) {
    
  } else {
    
  }
  pubsub_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubsub_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishRequest.pubsub_name)
}

// string topic = 2;
inline void BulkPublishRequest::clear_topic() {
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkPublishRequest::topic() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishRequest.topic)
  return topic_.GetNoArena();
}
inline void BulkPublishRequest::set_topic(const ::std::string& value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishRequest.topic)
}
#if LANG_CXX11
inline void BulkPublishRequest::set_topic(::std::string&& value) {
  
  topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkPublishRequest.topic)
}
#endif
inline void BulkPublishRequest::set_topic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkPublishRequest.topic)
}
inline void BulkPublishRequest::set_topic(const char* value, size_t size) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkPublishRequest.topic)
}
inline ::std::string* BulkPublishRequest::mutable_topic() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishRequest.topic)
  return topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkPublishRequest::release_topic() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishRequest.topic)
  
  return topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkPublishRequest::set_allocated_topic(::std::string* topic) {
  if (topic != NULL) {
    
  } else {
    
  }
  topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topic);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishRequest.topic)
}

// repeated .dapr.proto.runtime.v1.BulkPublishRequestEntry entries = 3;
inline int BulkPublishRequest::entries_size() const {
  return entries_.size();
}
inline void BulkPublishRequest::clear_entries() {
  entries_.Clear();
}
inline ::dapr::proto::runtime::v1::BulkPublishRequestEntry* BulkPublishRequest::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishRequest.entries)
  return entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishRequestEntry >*
BulkPublishRequest::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.BulkPublishRequest.entries)
  return &entries_;
}
inline const ::dapr::proto::runtime::v1::BulkPublishRequestEntry& BulkPublishRequest::entries(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishRequest.entries)
  return entries_.Get(index);
}
inline ::dapr::proto::runtime::v1::BulkPublishRequestEntry* BulkPublishRequest::add_entries() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.BulkPublishRequest.entries)
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishRequestEntry >&
BulkPublishRequest::entries() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.BulkPublishRequest.entries)
  return entries_;
}

// map<string, string> metadata = 4;
inline int BulkPublishRequest::metadata_size() const {
  return metadata_.size();
}
inline void BulkPublishRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
BulkPublishRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.BulkPublishRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
BulkPublishRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.BulkPublishRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BulkPublishRequestEntry

// string entry_id = 1;
inline void BulkPublishRequestEntry::clear_entry_id() {
  entry_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkPublishRequestEntry::entry_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
  return entry_id_.GetNoArena();
}
inline void BulkPublishRequestEntry::set_entry_id(const ::std::string& value) {
  
  entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
}
#if LANG_CXX11
inline void BulkPublishRequestEntry::set_entry_id(::std::string&& value) {
  
  entry_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
}
#endif
inline void BulkPublishRequestEntry::set_entry_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
}
inline void BulkPublishRequestEntry::set_entry_id(const char* value, size_t size) {
  
  entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
}
inline ::std::string* BulkPublishRequestEntry::mutable_entry_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
  return entry_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkPublishRequestEntry::release_entry_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
  
  return entry_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkPublishRequestEntry::set_allocated_entry_id(::std::string* entry_id) {
  if (entry_id != NULL) {
    
  } else {
    
  }
  entry_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entry_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishRequestEntry.entry_id)
}

// bytes event = 2;
inline void BulkPublishRequestEntry::clear_event() {
  event_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkPublishRequestEntry::event() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
  return event_.GetNoArena();
}
inline void BulkPublishRequestEntry::set_event(const ::std::string& value) {
  
  event_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
}
#if LANG_CXX11
inline void BulkPublishRequestEntry::set_event(::std::string&& value) {
  
  event_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
}
#endif
inline void BulkPublishRequestEntry::set_event(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  event_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
}
inline void BulkPublishRequestEntry::set_event(const void* value, size_t size) {
  
  event_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
}
inline ::std::string* BulkPublishRequestEntry::mutable_event() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
  return event_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkPublishRequestEntry::release_event() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
  
  return event_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkPublishRequestEntry::set_allocated_event(::std::string* event) {
  if (event != NULL) {
    
  } else {
    
  }
  event_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishRequestEntry.event)
}

// string content_type = 3;
inline void BulkPublishRequestEntry::clear_content_type() {
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkPublishRequestEntry::content_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
  return content_type_.GetNoArena();
}
inline void BulkPublishRequestEntry::set_content_type(const ::std::string& value) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
}
#if LANG_CXX11
inline void BulkPublishRequestEntry::set_content_type(::std::string&& value) {
  
  content_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
}
#endif
inline void BulkPublishRequestEntry::set_content_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
}
inline void BulkPublishRequestEntry::set_content_type(const char* value, size_t size) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
}
inline ::std::string* BulkPublishRequestEntry::mutable_content_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
  return content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkPublishRequestEntry::release_content_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
  
  return content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkPublishRequestEntry::set_allocated_content_type(::std::string* content_type) {
  if (content_type != NULL) {
    
  } else {
    
  }
  content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishRequestEntry.content_type)
}

// map<string, string> metadata = 4;
inline int BulkPublishRequestEntry::metadata_size() const {
  return metadata_.size();
}
inline void BulkPublishRequestEntry::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
BulkPublishRequestEntry::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.BulkPublishRequestEntry.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
BulkPublishRequestEntry::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.BulkPublishRequestEntry.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// BulkPublishResponse

// repeated .dapr.proto.runtime.v1.BulkPublishResponseFailedEntry failedEntries = 1;
inline int BulkPublishResponse::failedentries_size() const {
  return failedentries_.size();
}
inline void BulkPublishResponse::clear_failedentries() {
  failedentries_.Clear();
}
inline ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry* BulkPublishResponse::mutable_failedentries(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishResponse.failedEntries)
  return failedentries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry >*
BulkPublishResponse::mutable_failedentries() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.BulkPublishResponse.failedEntries)
  return &failedentries_;
}
inline const ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry& BulkPublishResponse::failedentries(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishResponse.failedEntries)
  return failedentries_.Get(index);
}
inline ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry* BulkPublishResponse::add_failedentries() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.BulkPublishResponse.failedEntries)
  return failedentries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::BulkPublishResponseFailedEntry >&
BulkPublishResponse::failedentries() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.BulkPublishResponse.failedEntries)
  return failedentries_;
}

// -------------------------------------------------------------------

// BulkPublishResponseFailedEntry

// string entry_id = 1;
inline void BulkPublishResponseFailedEntry::clear_entry_id() {
  entry_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkPublishResponseFailedEntry::entry_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
  return entry_id_.GetNoArena();
}
inline void BulkPublishResponseFailedEntry::set_entry_id(const ::std::string& value) {
  
  entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
}
#if LANG_CXX11
inline void BulkPublishResponseFailedEntry::set_entry_id(::std::string&& value) {
  
  entry_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
}
#endif
inline void BulkPublishResponseFailedEntry::set_entry_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
}
inline void BulkPublishResponseFailedEntry::set_entry_id(const char* value, size_t size) {
  
  entry_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
}
inline ::std::string* BulkPublishResponseFailedEntry::mutable_entry_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
  return entry_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkPublishResponseFailedEntry::release_entry_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
  
  return entry_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkPublishResponseFailedEntry::set_allocated_entry_id(::std::string* entry_id) {
  if (entry_id != NULL) {
    
  } else {
    
  }
  entry_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entry_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.entry_id)
}

// string error = 2;
inline void BulkPublishResponseFailedEntry::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulkPublishResponseFailedEntry::error() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
  return error_.GetNoArena();
}
inline void BulkPublishResponseFailedEntry::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
}
#if LANG_CXX11
inline void BulkPublishResponseFailedEntry::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
}
#endif
inline void BulkPublishResponseFailedEntry::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
}
inline void BulkPublishResponseFailedEntry::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
}
inline ::std::string* BulkPublishResponseFailedEntry::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulkPublishResponseFailedEntry::release_error() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulkPublishResponseFailedEntry::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.BulkPublishResponseFailedEntry.error)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InvokeBindingRequest

// string name = 1;
inline void InvokeBindingRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeBindingRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeBindingRequest.name)
  return name_.GetNoArena();
}
inline void InvokeBindingRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeBindingRequest.name)
}
#if LANG_CXX11
inline void InvokeBindingRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeBindingRequest.name)
}
#endif
inline void InvokeBindingRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeBindingRequest.name)
}
inline void InvokeBindingRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeBindingRequest.name)
}
inline ::std::string* InvokeBindingRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeBindingRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeBindingRequest::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeBindingRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeBindingRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeBindingRequest.name)
}

// bytes data = 2;
inline void InvokeBindingRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeBindingRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeBindingRequest.data)
  return data_.GetNoArena();
}
inline void InvokeBindingRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeBindingRequest.data)
}
#if LANG_CXX11
inline void InvokeBindingRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeBindingRequest.data)
}
#endif
inline void InvokeBindingRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeBindingRequest.data)
}
inline void InvokeBindingRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeBindingRequest.data)
}
inline ::std::string* InvokeBindingRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeBindingRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeBindingRequest::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeBindingRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeBindingRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeBindingRequest.data)
}

// map<string, string> metadata = 3;
inline int InvokeBindingRequest::metadata_size() const {
  return metadata_.size();
}
inline void InvokeBindingRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
InvokeBindingRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.InvokeBindingRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
InvokeBindingRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.InvokeBindingRequest.metadata)
  return metadata_.MutableMap();
}

// string operation = 4;
inline void InvokeBindingRequest::clear_operation() {
  operation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeBindingRequest::operation() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
  return operation_.GetNoArena();
}
inline void InvokeBindingRequest::set_operation(const ::std::string& value) {
  
  operation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
}
#if LANG_CXX11
inline void InvokeBindingRequest::set_operation(::std::string&& value) {
  
  operation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
}
#endif
inline void InvokeBindingRequest::set_operation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
}
inline void InvokeBindingRequest::set_operation(const char* value, size_t size) {
  
  operation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
}
inline ::std::string* InvokeBindingRequest::mutable_operation() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
  return operation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeBindingRequest::release_operation() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
  
  return operation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeBindingRequest::set_allocated_operation(::std::string* operation) {
  if (operation != NULL) {
    
  } else {
    
  }
  operation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeBindingRequest.operation)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InvokeBindingResponse

// bytes data = 1;
inline void InvokeBindingResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeBindingResponse::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeBindingResponse.data)
  return data_.GetNoArena();
}
inline void InvokeBindingResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeBindingResponse.data)
}
#if LANG_CXX11
inline void InvokeBindingResponse::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeBindingResponse.data)
}
#endif
inline void InvokeBindingResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeBindingResponse.data)
}
inline void InvokeBindingResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeBindingResponse.data)
}
inline ::std::string* InvokeBindingResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeBindingResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeBindingResponse::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeBindingResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeBindingResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeBindingResponse.data)
}

// map<string, string> metadata = 2;
inline int InvokeBindingResponse::metadata_size() const {
  return metadata_.size();
}
inline void InvokeBindingResponse::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
InvokeBindingResponse::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.InvokeBindingResponse.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
InvokeBindingResponse::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.InvokeBindingResponse.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetSecretRequest

// string store_name = 1[json_name = "storeName"];
inline void GetSecretRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSecretRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetSecretRequest.store_name)
  return store_name_.GetNoArena();
}
inline void GetSecretRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetSecretRequest.store_name)
}
#if LANG_CXX11
inline void GetSecretRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetSecretRequest.store_name)
}
#endif
inline void GetSecretRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetSecretRequest.store_name)
}
inline void GetSecretRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetSecretRequest.store_name)
}
inline ::std::string* GetSecretRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetSecretRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSecretRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetSecretRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSecretRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetSecretRequest.store_name)
}

// string key = 2;
inline void GetSecretRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSecretRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetSecretRequest.key)
  return key_.GetNoArena();
}
inline void GetSecretRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetSecretRequest.key)
}
#if LANG_CXX11
inline void GetSecretRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetSecretRequest.key)
}
#endif
inline void GetSecretRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetSecretRequest.key)
}
inline void GetSecretRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetSecretRequest.key)
}
inline ::std::string* GetSecretRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetSecretRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSecretRequest::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetSecretRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSecretRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetSecretRequest.key)
}

// map<string, string> metadata = 3;
inline int GetSecretRequest::metadata_size() const {
  return metadata_.size();
}
inline void GetSecretRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetSecretRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetSecretRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetSecretRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetSecretRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetSecretResponse

// map<string, string> data = 1;
inline int GetSecretResponse::data_size() const {
  return data_.size();
}
inline void GetSecretResponse::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetSecretResponse::data() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetSecretResponse.data)
  return data_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetSecretResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetSecretResponse.data)
  return data_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetBulkSecretRequest

// string store_name = 1[json_name = "storeName"];
inline void GetBulkSecretRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetBulkSecretRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
  return store_name_.GetNoArena();
}
inline void GetBulkSecretRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
}
#if LANG_CXX11
inline void GetBulkSecretRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
}
#endif
inline void GetBulkSecretRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
}
inline void GetBulkSecretRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
}
inline ::std::string* GetBulkSecretRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBulkSecretRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBulkSecretRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetBulkSecretRequest.store_name)
}

// map<string, string> metadata = 2;
inline int GetBulkSecretRequest::metadata_size() const {
  return metadata_.size();
}
inline void GetBulkSecretRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetBulkSecretRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetBulkSecretRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetBulkSecretRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetBulkSecretRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SecretResponse

// map<string, string> secrets = 1;
inline int SecretResponse::secrets_size() const {
  return secrets_.size();
}
inline void SecretResponse::clear_secrets() {
  secrets_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
SecretResponse::secrets() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.SecretResponse.secrets)
  return secrets_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
SecretResponse::mutable_secrets() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.SecretResponse.secrets)
  return secrets_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetBulkSecretResponse

// map<string, .dapr.proto.runtime.v1.SecretResponse> data = 1;
inline int GetBulkSecretResponse::data_size() const {
  return data_.size();
}
inline void GetBulkSecretResponse::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::dapr::proto::runtime::v1::SecretResponse >&
GetBulkSecretResponse::data() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetBulkSecretResponse.data)
  return data_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::dapr::proto::runtime::v1::SecretResponse >*
GetBulkSecretResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetBulkSecretResponse.data)
  return data_.MutableMap();
}

// -------------------------------------------------------------------

// TransactionalStateOperation

// string operationType = 1;
inline void TransactionalStateOperation::clear_operationtype() {
  operationtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransactionalStateOperation::operationtype() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
  return operationtype_.GetNoArena();
}
inline void TransactionalStateOperation::set_operationtype(const ::std::string& value) {
  
  operationtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
}
#if LANG_CXX11
inline void TransactionalStateOperation::set_operationtype(::std::string&& value) {
  
  operationtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
}
#endif
inline void TransactionalStateOperation::set_operationtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operationtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
}
inline void TransactionalStateOperation::set_operationtype(const char* value, size_t size) {
  
  operationtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
}
inline ::std::string* TransactionalStateOperation::mutable_operationtype() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
  return operationtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionalStateOperation::release_operationtype() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
  
  return operationtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionalStateOperation::set_allocated_operationtype(::std::string* operationtype) {
  if (operationtype != NULL) {
    
  } else {
    
  }
  operationtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operationtype);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalStateOperation.operationType)
}

// .dapr.proto.common.v1.StateItem request = 2;
inline bool TransactionalStateOperation::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline const ::dapr::proto::common::v1::StateItem& TransactionalStateOperation::_internal_request() const {
  return *request_;
}
inline const ::dapr::proto::common::v1::StateItem& TransactionalStateOperation::request() const {
  const ::dapr::proto::common::v1::StateItem* p = request_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalStateOperation.request)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::common::v1::StateItem*>(
      &::dapr::proto::common::v1::_StateItem_default_instance_);
}
inline ::dapr::proto::common::v1::StateItem* TransactionalStateOperation::release_request() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalStateOperation.request)
  
  ::dapr::proto::common::v1::StateItem* temp = request_;
  request_ = NULL;
  return temp;
}
inline ::dapr::proto::common::v1::StateItem* TransactionalStateOperation::mutable_request() {
  
  if (request_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StateItem>(GetArenaNoVirtual());
    request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalStateOperation.request)
  return request_;
}
inline void TransactionalStateOperation::set_allocated_request(::dapr::proto::common::v1::StateItem* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(request_);
  }
  if (request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    
  } else {
    
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalStateOperation.request)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ExecuteStateTransactionRequest

// string storeName = 1;
inline void ExecuteStateTransactionRequest::clear_storename() {
  storename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteStateTransactionRequest::storename() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
  return storename_.GetNoArena();
}
inline void ExecuteStateTransactionRequest::set_storename(const ::std::string& value) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
}
#if LANG_CXX11
inline void ExecuteStateTransactionRequest::set_storename(::std::string&& value) {
  
  storename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
}
#endif
inline void ExecuteStateTransactionRequest::set_storename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
}
inline void ExecuteStateTransactionRequest::set_storename(const char* value, size_t size) {
  
  storename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
}
inline ::std::string* ExecuteStateTransactionRequest::mutable_storename() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
  return storename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteStateTransactionRequest::release_storename() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
  
  return storename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteStateTransactionRequest::set_allocated_storename(::std::string* storename) {
  if (storename != NULL) {
    
  } else {
    
  }
  storename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storename);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.storeName)
}

// repeated .dapr.proto.runtime.v1.TransactionalStateOperation operations = 2;
inline int ExecuteStateTransactionRequest::operations_size() const {
  return operations_.size();
}
inline void ExecuteStateTransactionRequest::clear_operations() {
  operations_.Clear();
}
inline ::dapr::proto::runtime::v1::TransactionalStateOperation* ExecuteStateTransactionRequest::mutable_operations(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return operations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation >*
ExecuteStateTransactionRequest::mutable_operations() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return &operations_;
}
inline const ::dapr::proto::runtime::v1::TransactionalStateOperation& ExecuteStateTransactionRequest::operations(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return operations_.Get(index);
}
inline ::dapr::proto::runtime::v1::TransactionalStateOperation* ExecuteStateTransactionRequest::add_operations() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return operations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalStateOperation >&
ExecuteStateTransactionRequest::operations() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.operations)
  return operations_;
}

// map<string, string> metadata = 3;
inline int ExecuteStateTransactionRequest::metadata_size() const {
  return metadata_.size();
}
inline void ExecuteStateTransactionRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ExecuteStateTransactionRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ExecuteStateTransactionRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.ExecuteStateTransactionRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// RegisterActorTimerRequest

// string actor_type = 1;
inline void RegisterActorTimerRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
}
#endif
inline void RegisterActorTimerRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
}
inline void RegisterActorTimerRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
}
inline ::std::string* RegisterActorTimerRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_type)
}

// string actor_id = 2;
inline void RegisterActorTimerRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
}
#endif
inline void RegisterActorTimerRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
}
inline void RegisterActorTimerRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
}
inline ::std::string* RegisterActorTimerRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.actor_id)
}

// string name = 3;
inline void RegisterActorTimerRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
  return name_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
}
#endif
inline void RegisterActorTimerRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
}
inline void RegisterActorTimerRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
}
inline ::std::string* RegisterActorTimerRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.name)
}

// string due_time = 4;
inline void RegisterActorTimerRequest::clear_due_time() {
  due_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::due_time() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
  return due_time_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_due_time(const ::std::string& value) {
  
  due_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_due_time(::std::string&& value) {
  
  due_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
}
#endif
inline void RegisterActorTimerRequest::set_due_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  due_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
}
inline void RegisterActorTimerRequest::set_due_time(const char* value, size_t size) {
  
  due_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
}
inline ::std::string* RegisterActorTimerRequest::mutable_due_time() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
  return due_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_due_time() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
  
  return due_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_due_time(::std::string* due_time) {
  if (due_time != NULL) {
    
  } else {
    
  }
  due_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), due_time);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.due_time)
}

// string period = 5;
inline void RegisterActorTimerRequest::clear_period() {
  period_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::period() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
  return period_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_period(const ::std::string& value) {
  
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_period(::std::string&& value) {
  
  period_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
}
#endif
inline void RegisterActorTimerRequest::set_period(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
}
inline void RegisterActorTimerRequest::set_period(const char* value, size_t size) {
  
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
}
inline ::std::string* RegisterActorTimerRequest::mutable_period() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
  return period_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_period() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
  
  return period_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_period(::std::string* period) {
  if (period != NULL) {
    
  } else {
    
  }
  period_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), period);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.period)
}

// string callback = 6;
inline void RegisterActorTimerRequest::clear_callback() {
  callback_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::callback() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
  return callback_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_callback(const ::std::string& value) {
  
  callback_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_callback(::std::string&& value) {
  
  callback_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
}
#endif
inline void RegisterActorTimerRequest::set_callback(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  callback_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
}
inline void RegisterActorTimerRequest::set_callback(const char* value, size_t size) {
  
  callback_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
}
inline ::std::string* RegisterActorTimerRequest::mutable_callback() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
  return callback_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_callback() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
  
  return callback_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_callback(::std::string* callback) {
  if (callback != NULL) {
    
  } else {
    
  }
  callback_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callback);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.callback)
}

// bytes data = 7;
inline void RegisterActorTimerRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
  return data_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
}
#endif
inline void RegisterActorTimerRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
}
inline void RegisterActorTimerRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
}
inline ::std::string* RegisterActorTimerRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.data)
}

// string ttl = 8;
inline void RegisterActorTimerRequest::clear_ttl() {
  ttl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorTimerRequest::ttl() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
  return ttl_.GetNoArena();
}
inline void RegisterActorTimerRequest::set_ttl(const ::std::string& value) {
  
  ttl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
}
#if LANG_CXX11
inline void RegisterActorTimerRequest::set_ttl(::std::string&& value) {
  
  ttl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
}
#endif
inline void RegisterActorTimerRequest::set_ttl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ttl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
}
inline void RegisterActorTimerRequest::set_ttl(const char* value, size_t size) {
  
  ttl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
}
inline ::std::string* RegisterActorTimerRequest::mutable_ttl() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
  return ttl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorTimerRequest::release_ttl() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
  
  return ttl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorTimerRequest::set_allocated_ttl(::std::string* ttl) {
  if (ttl != NULL) {
    
  } else {
    
  }
  ttl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ttl);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorTimerRequest.ttl)
}

// -------------------------------------------------------------------

// UnregisterActorTimerRequest

// string actor_type = 1;
inline void UnregisterActorTimerRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterActorTimerRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void UnregisterActorTimerRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
}
#if LANG_CXX11
inline void UnregisterActorTimerRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
}
#endif
inline void UnregisterActorTimerRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
}
inline void UnregisterActorTimerRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
}
inline ::std::string* UnregisterActorTimerRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterActorTimerRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterActorTimerRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_type)
}

// string actor_id = 2;
inline void UnregisterActorTimerRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterActorTimerRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void UnregisterActorTimerRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
}
#if LANG_CXX11
inline void UnregisterActorTimerRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
}
#endif
inline void UnregisterActorTimerRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
}
inline void UnregisterActorTimerRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
}
inline ::std::string* UnregisterActorTimerRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterActorTimerRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterActorTimerRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorTimerRequest.actor_id)
}

// string name = 3;
inline void UnregisterActorTimerRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterActorTimerRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
  return name_.GetNoArena();
}
inline void UnregisterActorTimerRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
}
#if LANG_CXX11
inline void UnregisterActorTimerRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
}
#endif
inline void UnregisterActorTimerRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
}
inline void UnregisterActorTimerRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
}
inline ::std::string* UnregisterActorTimerRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterActorTimerRequest::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterActorTimerRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorTimerRequest.name)
}

// -------------------------------------------------------------------

// RegisterActorReminderRequest

// string actor_type = 1;
inline void RegisterActorReminderRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
}
#endif
inline void RegisterActorReminderRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
}
inline void RegisterActorReminderRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
}
inline ::std::string* RegisterActorReminderRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_type)
}

// string actor_id = 2;
inline void RegisterActorReminderRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
}
#endif
inline void RegisterActorReminderRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
}
inline void RegisterActorReminderRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
}
inline ::std::string* RegisterActorReminderRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.actor_id)
}

// string name = 3;
inline void RegisterActorReminderRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
  return name_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
}
#endif
inline void RegisterActorReminderRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
}
inline void RegisterActorReminderRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
}
inline ::std::string* RegisterActorReminderRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.name)
}

// string due_time = 4;
inline void RegisterActorReminderRequest::clear_due_time() {
  due_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::due_time() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
  return due_time_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_due_time(const ::std::string& value) {
  
  due_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_due_time(::std::string&& value) {
  
  due_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
}
#endif
inline void RegisterActorReminderRequest::set_due_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  due_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
}
inline void RegisterActorReminderRequest::set_due_time(const char* value, size_t size) {
  
  due_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
}
inline ::std::string* RegisterActorReminderRequest::mutable_due_time() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
  return due_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_due_time() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
  
  return due_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_due_time(::std::string* due_time) {
  if (due_time != NULL) {
    
  } else {
    
  }
  due_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), due_time);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.due_time)
}

// string period = 5;
inline void RegisterActorReminderRequest::clear_period() {
  period_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::period() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
  return period_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_period(const ::std::string& value) {
  
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_period(::std::string&& value) {
  
  period_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
}
#endif
inline void RegisterActorReminderRequest::set_period(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
}
inline void RegisterActorReminderRequest::set_period(const char* value, size_t size) {
  
  period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
}
inline ::std::string* RegisterActorReminderRequest::mutable_period() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
  return period_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_period() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
  
  return period_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_period(::std::string* period) {
  if (period != NULL) {
    
  } else {
    
  }
  period_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), period);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.period)
}

// bytes data = 6;
inline void RegisterActorReminderRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
  return data_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
}
#endif
inline void RegisterActorReminderRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
}
inline void RegisterActorReminderRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
}
inline ::std::string* RegisterActorReminderRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.data)
}

// string ttl = 7;
inline void RegisterActorReminderRequest::clear_ttl() {
  ttl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterActorReminderRequest::ttl() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
  return ttl_.GetNoArena();
}
inline void RegisterActorReminderRequest::set_ttl(const ::std::string& value) {
  
  ttl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
}
#if LANG_CXX11
inline void RegisterActorReminderRequest::set_ttl(::std::string&& value) {
  
  ttl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
}
#endif
inline void RegisterActorReminderRequest::set_ttl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ttl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
}
inline void RegisterActorReminderRequest::set_ttl(const char* value, size_t size) {
  
  ttl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
}
inline ::std::string* RegisterActorReminderRequest::mutable_ttl() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
  return ttl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterActorReminderRequest::release_ttl() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
  
  return ttl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterActorReminderRequest::set_allocated_ttl(::std::string* ttl) {
  if (ttl != NULL) {
    
  } else {
    
  }
  ttl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ttl);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisterActorReminderRequest.ttl)
}

// -------------------------------------------------------------------

// UnregisterActorReminderRequest

// string actor_type = 1;
inline void UnregisterActorReminderRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterActorReminderRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void UnregisterActorReminderRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
}
#if LANG_CXX11
inline void UnregisterActorReminderRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
}
#endif
inline void UnregisterActorReminderRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
}
inline void UnregisterActorReminderRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
}
inline ::std::string* UnregisterActorReminderRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterActorReminderRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterActorReminderRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_type)
}

// string actor_id = 2;
inline void UnregisterActorReminderRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterActorReminderRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void UnregisterActorReminderRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
}
#if LANG_CXX11
inline void UnregisterActorReminderRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
}
#endif
inline void UnregisterActorReminderRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
}
inline void UnregisterActorReminderRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
}
inline ::std::string* UnregisterActorReminderRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterActorReminderRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterActorReminderRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorReminderRequest.actor_id)
}

// string name = 3;
inline void UnregisterActorReminderRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnregisterActorReminderRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
  return name_.GetNoArena();
}
inline void UnregisterActorReminderRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
}
#if LANG_CXX11
inline void UnregisterActorReminderRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
}
#endif
inline void UnregisterActorReminderRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
}
inline void UnregisterActorReminderRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
}
inline ::std::string* UnregisterActorReminderRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnregisterActorReminderRequest::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnregisterActorReminderRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnregisterActorReminderRequest.name)
}

// -------------------------------------------------------------------

// RenameActorReminderRequest

// string actor_type = 1;
inline void RenameActorReminderRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameActorReminderRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void RenameActorReminderRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_type)
}
#if LANG_CXX11
inline void RenameActorReminderRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_type)
}
#endif
inline void RenameActorReminderRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_type)
}
inline void RenameActorReminderRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_type)
}
inline ::std::string* RenameActorReminderRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameActorReminderRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameActorReminderRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_type)
}

// string actor_id = 2;
inline void RenameActorReminderRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameActorReminderRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void RenameActorReminderRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_id)
}
#if LANG_CXX11
inline void RenameActorReminderRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_id)
}
#endif
inline void RenameActorReminderRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_id)
}
inline void RenameActorReminderRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_id)
}
inline ::std::string* RenameActorReminderRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameActorReminderRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameActorReminderRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RenameActorReminderRequest.actor_id)
}

// string old_name = 3;
inline void RenameActorReminderRequest::clear_old_name() {
  old_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameActorReminderRequest::old_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RenameActorReminderRequest.old_name)
  return old_name_.GetNoArena();
}
inline void RenameActorReminderRequest::set_old_name(const ::std::string& value) {
  
  old_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RenameActorReminderRequest.old_name)
}
#if LANG_CXX11
inline void RenameActorReminderRequest::set_old_name(::std::string&& value) {
  
  old_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RenameActorReminderRequest.old_name)
}
#endif
inline void RenameActorReminderRequest::set_old_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  old_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RenameActorReminderRequest.old_name)
}
inline void RenameActorReminderRequest::set_old_name(const char* value, size_t size) {
  
  old_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RenameActorReminderRequest.old_name)
}
inline ::std::string* RenameActorReminderRequest::mutable_old_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RenameActorReminderRequest.old_name)
  return old_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameActorReminderRequest::release_old_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RenameActorReminderRequest.old_name)
  
  return old_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameActorReminderRequest::set_allocated_old_name(::std::string* old_name) {
  if (old_name != NULL) {
    
  } else {
    
  }
  old_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RenameActorReminderRequest.old_name)
}

// string new_name = 4;
inline void RenameActorReminderRequest::clear_new_name() {
  new_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RenameActorReminderRequest::new_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RenameActorReminderRequest.new_name)
  return new_name_.GetNoArena();
}
inline void RenameActorReminderRequest::set_new_name(const ::std::string& value) {
  
  new_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RenameActorReminderRequest.new_name)
}
#if LANG_CXX11
inline void RenameActorReminderRequest::set_new_name(::std::string&& value) {
  
  new_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RenameActorReminderRequest.new_name)
}
#endif
inline void RenameActorReminderRequest::set_new_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  new_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RenameActorReminderRequest.new_name)
}
inline void RenameActorReminderRequest::set_new_name(const char* value, size_t size) {
  
  new_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RenameActorReminderRequest.new_name)
}
inline ::std::string* RenameActorReminderRequest::mutable_new_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RenameActorReminderRequest.new_name)
  return new_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RenameActorReminderRequest::release_new_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RenameActorReminderRequest.new_name)
  
  return new_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RenameActorReminderRequest::set_allocated_new_name(::std::string* new_name) {
  if (new_name != NULL) {
    
  } else {
    
  }
  new_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RenameActorReminderRequest.new_name)
}

// -------------------------------------------------------------------

// GetActorStateRequest

// string actor_type = 1;
inline void GetActorStateRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetActorStateRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void GetActorStateRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
}
#if LANG_CXX11
inline void GetActorStateRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
}
#endif
inline void GetActorStateRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
}
inline void GetActorStateRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
}
inline ::std::string* GetActorStateRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetActorStateRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetActorStateRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetActorStateRequest.actor_type)
}

// string actor_id = 2;
inline void GetActorStateRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetActorStateRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void GetActorStateRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
}
#if LANG_CXX11
inline void GetActorStateRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
}
#endif
inline void GetActorStateRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
}
inline void GetActorStateRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
}
inline ::std::string* GetActorStateRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetActorStateRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetActorStateRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetActorStateRequest.actor_id)
}

// string key = 3;
inline void GetActorStateRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetActorStateRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetActorStateRequest.key)
  return key_.GetNoArena();
}
inline void GetActorStateRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetActorStateRequest.key)
}
#if LANG_CXX11
inline void GetActorStateRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetActorStateRequest.key)
}
#endif
inline void GetActorStateRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetActorStateRequest.key)
}
inline void GetActorStateRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetActorStateRequest.key)
}
inline ::std::string* GetActorStateRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetActorStateRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetActorStateRequest::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetActorStateRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetActorStateRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetActorStateRequest.key)
}

// -------------------------------------------------------------------

// GetActorStateResponse

// bytes data = 1;
inline void GetActorStateResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetActorStateResponse::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetActorStateResponse.data)
  return data_.GetNoArena();
}
inline void GetActorStateResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetActorStateResponse.data)
}
#if LANG_CXX11
inline void GetActorStateResponse::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetActorStateResponse.data)
}
#endif
inline void GetActorStateResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetActorStateResponse.data)
}
inline void GetActorStateResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetActorStateResponse.data)
}
inline ::std::string* GetActorStateResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetActorStateResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetActorStateResponse::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetActorStateResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetActorStateResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetActorStateResponse.data)
}

// -------------------------------------------------------------------

// ExecuteActorStateTransactionRequest

// string actor_type = 1;
inline void ExecuteActorStateTransactionRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteActorStateTransactionRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void ExecuteActorStateTransactionRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
}
#if LANG_CXX11
inline void ExecuteActorStateTransactionRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
}
#endif
inline void ExecuteActorStateTransactionRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
}
inline void ExecuteActorStateTransactionRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
}
inline ::std::string* ExecuteActorStateTransactionRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteActorStateTransactionRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteActorStateTransactionRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_type)
}

// string actor_id = 2;
inline void ExecuteActorStateTransactionRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteActorStateTransactionRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void ExecuteActorStateTransactionRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
}
#if LANG_CXX11
inline void ExecuteActorStateTransactionRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
}
#endif
inline void ExecuteActorStateTransactionRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
}
inline void ExecuteActorStateTransactionRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
}
inline ::std::string* ExecuteActorStateTransactionRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteActorStateTransactionRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteActorStateTransactionRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.actor_id)
}

// repeated .dapr.proto.runtime.v1.TransactionalActorStateOperation operations = 3;
inline int ExecuteActorStateTransactionRequest::operations_size() const {
  return operations_.size();
}
inline void ExecuteActorStateTransactionRequest::clear_operations() {
  operations_.Clear();
}
inline ::dapr::proto::runtime::v1::TransactionalActorStateOperation* ExecuteActorStateTransactionRequest::mutable_operations(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return operations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >*
ExecuteActorStateTransactionRequest::mutable_operations() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return &operations_;
}
inline const ::dapr::proto::runtime::v1::TransactionalActorStateOperation& ExecuteActorStateTransactionRequest::operations(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return operations_.Get(index);
}
inline ::dapr::proto::runtime::v1::TransactionalActorStateOperation* ExecuteActorStateTransactionRequest::add_operations() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return operations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::TransactionalActorStateOperation >&
ExecuteActorStateTransactionRequest::operations() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.ExecuteActorStateTransactionRequest.operations)
  return operations_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TransactionalActorStateOperation

// string operationType = 1;
inline void TransactionalActorStateOperation::clear_operationtype() {
  operationtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransactionalActorStateOperation::operationtype() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
  return operationtype_.GetNoArena();
}
inline void TransactionalActorStateOperation::set_operationtype(const ::std::string& value) {
  
  operationtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
}
#if LANG_CXX11
inline void TransactionalActorStateOperation::set_operationtype(::std::string&& value) {
  
  operationtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
}
#endif
inline void TransactionalActorStateOperation::set_operationtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operationtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
}
inline void TransactionalActorStateOperation::set_operationtype(const char* value, size_t size) {
  
  operationtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
}
inline ::std::string* TransactionalActorStateOperation::mutable_operationtype() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
  return operationtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionalActorStateOperation::release_operationtype() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
  
  return operationtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionalActorStateOperation::set_allocated_operationtype(::std::string* operationtype) {
  if (operationtype != NULL) {
    
  } else {
    
  }
  operationtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operationtype);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalActorStateOperation.operationType)
}

// string key = 2;
inline void TransactionalActorStateOperation::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransactionalActorStateOperation::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
  return key_.GetNoArena();
}
inline void TransactionalActorStateOperation::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
}
#if LANG_CXX11
inline void TransactionalActorStateOperation::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
}
#endif
inline void TransactionalActorStateOperation::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
}
inline void TransactionalActorStateOperation::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
}
inline ::std::string* TransactionalActorStateOperation::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransactionalActorStateOperation::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransactionalActorStateOperation::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalActorStateOperation.key)
}

// .google.protobuf.Any value = 3;
inline bool TransactionalActorStateOperation::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline const ::google::protobuf::Any& TransactionalActorStateOperation::_internal_value() const {
  return *value_;
}
inline const ::google::protobuf::Any& TransactionalActorStateOperation::value() const {
  const ::google::protobuf::Any* p = value_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* TransactionalActorStateOperation::release_value() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)
  
  ::google::protobuf::Any* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* TransactionalActorStateOperation::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)
  return value_;
}
inline void TransactionalActorStateOperation::set_allocated_value(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(value_);
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TransactionalActorStateOperation.value)
}

// map<string, string> metadata = 4;
inline int TransactionalActorStateOperation::metadata_size() const {
  return metadata_.size();
}
inline void TransactionalActorStateOperation::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
TransactionalActorStateOperation::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.TransactionalActorStateOperation.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
TransactionalActorStateOperation::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.TransactionalActorStateOperation.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InvokeActorRequest

// string actor_type = 1;
inline void InvokeActorRequest::clear_actor_type() {
  actor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeActorRequest::actor_type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
  return actor_type_.GetNoArena();
}
inline void InvokeActorRequest::set_actor_type(const ::std::string& value) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
}
#if LANG_CXX11
inline void InvokeActorRequest::set_actor_type(::std::string&& value) {
  
  actor_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
}
#endif
inline void InvokeActorRequest::set_actor_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
}
inline void InvokeActorRequest::set_actor_type(const char* value, size_t size) {
  
  actor_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
}
inline ::std::string* InvokeActorRequest::mutable_actor_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
  return actor_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeActorRequest::release_actor_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
  
  return actor_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeActorRequest::set_allocated_actor_type(::std::string* actor_type) {
  if (actor_type != NULL) {
    
  } else {
    
  }
  actor_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorRequest.actor_type)
}

// string actor_id = 2;
inline void InvokeActorRequest::clear_actor_id() {
  actor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeActorRequest::actor_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
  return actor_id_.GetNoArena();
}
inline void InvokeActorRequest::set_actor_id(const ::std::string& value) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
}
#if LANG_CXX11
inline void InvokeActorRequest::set_actor_id(::std::string&& value) {
  
  actor_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
}
#endif
inline void InvokeActorRequest::set_actor_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
}
inline void InvokeActorRequest::set_actor_id(const char* value, size_t size) {
  
  actor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
}
inline ::std::string* InvokeActorRequest::mutable_actor_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
  return actor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeActorRequest::release_actor_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
  
  return actor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeActorRequest::set_allocated_actor_id(::std::string* actor_id) {
  if (actor_id != NULL) {
    
  } else {
    
  }
  actor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorRequest.actor_id)
}

// string method = 3;
inline void InvokeActorRequest::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeActorRequest::method() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorRequest.method)
  return method_.GetNoArena();
}
inline void InvokeActorRequest::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorRequest.method)
}
#if LANG_CXX11
inline void InvokeActorRequest::set_method(::std::string&& value) {
  
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeActorRequest.method)
}
#endif
inline void InvokeActorRequest::set_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeActorRequest.method)
}
inline void InvokeActorRequest::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeActorRequest.method)
}
inline ::std::string* InvokeActorRequest::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorRequest.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeActorRequest::release_method() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorRequest.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeActorRequest::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorRequest.method)
}

// bytes data = 4;
inline void InvokeActorRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeActorRequest::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorRequest.data)
  return data_.GetNoArena();
}
inline void InvokeActorRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorRequest.data)
}
#if LANG_CXX11
inline void InvokeActorRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeActorRequest.data)
}
#endif
inline void InvokeActorRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeActorRequest.data)
}
inline void InvokeActorRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeActorRequest.data)
}
inline ::std::string* InvokeActorRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeActorRequest::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeActorRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorRequest.data)
}

// map<string, string> metadata = 5;
inline int InvokeActorRequest::metadata_size() const {
  return metadata_.size();
}
inline void InvokeActorRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
InvokeActorRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.InvokeActorRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
InvokeActorRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.InvokeActorRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// InvokeActorResponse

// bytes data = 1;
inline void InvokeActorResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvokeActorResponse::data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.InvokeActorResponse.data)
  return data_.GetNoArena();
}
inline void InvokeActorResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.InvokeActorResponse.data)
}
#if LANG_CXX11
inline void InvokeActorResponse::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.InvokeActorResponse.data)
}
#endif
inline void InvokeActorResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.InvokeActorResponse.data)
}
inline void InvokeActorResponse::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.InvokeActorResponse.data)
}
inline ::std::string* InvokeActorResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.InvokeActorResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvokeActorResponse::release_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.InvokeActorResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvokeActorResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.InvokeActorResponse.data)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetMetadataResponse

// string id = 1;
inline void GetMetadataResponse::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMetadataResponse::id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.id)
  return id_.GetNoArena();
}
inline void GetMetadataResponse::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetMetadataResponse.id)
}
#if LANG_CXX11
inline void GetMetadataResponse::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetMetadataResponse.id)
}
#endif
inline void GetMetadataResponse::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetMetadataResponse.id)
}
inline void GetMetadataResponse::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetMetadataResponse.id)
}
inline ::std::string* GetMetadataResponse::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMetadataResponse::release_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetMetadataResponse.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMetadataResponse::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetMetadataResponse.id)
}

// repeated .dapr.proto.runtime.v1.ActiveActorsCount active_actors_count = 2;
inline int GetMetadataResponse::active_actors_count_size() const {
  return active_actors_count_.size();
}
inline void GetMetadataResponse::clear_active_actors_count() {
  active_actors_count_.Clear();
}
inline ::dapr::proto::runtime::v1::ActiveActorsCount* GetMetadataResponse::mutable_active_actors_count(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.active_actors_count)
  return active_actors_count_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount >*
GetMetadataResponse::mutable_active_actors_count() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetMetadataResponse.active_actors_count)
  return &active_actors_count_;
}
inline const ::dapr::proto::runtime::v1::ActiveActorsCount& GetMetadataResponse::active_actors_count(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.active_actors_count)
  return active_actors_count_.Get(index);
}
inline ::dapr::proto::runtime::v1::ActiveActorsCount* GetMetadataResponse::add_active_actors_count() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetMetadataResponse.active_actors_count)
  return active_actors_count_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::ActiveActorsCount >&
GetMetadataResponse::active_actors_count() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetMetadataResponse.active_actors_count)
  return active_actors_count_;
}

// repeated .dapr.proto.runtime.v1.RegisteredComponents registered_components = 3;
inline int GetMetadataResponse::registered_components_size() const {
  return registered_components_.size();
}
inline void GetMetadataResponse::clear_registered_components() {
  registered_components_.Clear();
}
inline ::dapr::proto::runtime::v1::RegisteredComponents* GetMetadataResponse::mutable_registered_components(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.registered_components)
  return registered_components_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::RegisteredComponents >*
GetMetadataResponse::mutable_registered_components() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetMetadataResponse.registered_components)
  return &registered_components_;
}
inline const ::dapr::proto::runtime::v1::RegisteredComponents& GetMetadataResponse::registered_components(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.registered_components)
  return registered_components_.Get(index);
}
inline ::dapr::proto::runtime::v1::RegisteredComponents* GetMetadataResponse::add_registered_components() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetMetadataResponse.registered_components)
  return registered_components_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::RegisteredComponents >&
GetMetadataResponse::registered_components() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetMetadataResponse.registered_components)
  return registered_components_;
}

// map<string, string> extended_metadata = 4;
inline int GetMetadataResponse::extended_metadata_size() const {
  return extended_metadata_.size();
}
inline void GetMetadataResponse::clear_extended_metadata() {
  extended_metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetMetadataResponse::extended_metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetMetadataResponse.extended_metadata)
  return extended_metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetMetadataResponse::mutable_extended_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetMetadataResponse.extended_metadata)
  return extended_metadata_.MutableMap();
}

// repeated .dapr.proto.runtime.v1.PubsubSubscription subscriptions = 5;
inline int GetMetadataResponse::subscriptions_size() const {
  return subscriptions_.size();
}
inline void GetMetadataResponse::clear_subscriptions() {
  subscriptions_.Clear();
}
inline ::dapr::proto::runtime::v1::PubsubSubscription* GetMetadataResponse::mutable_subscriptions(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetMetadataResponse.subscriptions)
  return subscriptions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscription >*
GetMetadataResponse::mutable_subscriptions() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetMetadataResponse.subscriptions)
  return &subscriptions_;
}
inline const ::dapr::proto::runtime::v1::PubsubSubscription& GetMetadataResponse::subscriptions(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetMetadataResponse.subscriptions)
  return subscriptions_.Get(index);
}
inline ::dapr::proto::runtime::v1::PubsubSubscription* GetMetadataResponse::add_subscriptions() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetMetadataResponse.subscriptions)
  return subscriptions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscription >&
GetMetadataResponse::subscriptions() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetMetadataResponse.subscriptions)
  return subscriptions_;
}

// -------------------------------------------------------------------

// ActiveActorsCount

// string type = 1;
inline void ActiveActorsCount::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveActorsCount::type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ActiveActorsCount.type)
  return type_.GetNoArena();
}
inline void ActiveActorsCount::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ActiveActorsCount.type)
}
#if LANG_CXX11
inline void ActiveActorsCount::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.ActiveActorsCount.type)
}
#endif
inline void ActiveActorsCount::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.ActiveActorsCount.type)
}
inline void ActiveActorsCount::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.ActiveActorsCount.type)
}
inline ::std::string* ActiveActorsCount::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ActiveActorsCount.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveActorsCount::release_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ActiveActorsCount.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveActorsCount::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ActiveActorsCount.type)
}

// int32 count = 2;
inline void ActiveActorsCount::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 ActiveActorsCount::count() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ActiveActorsCount.count)
  return count_;
}
inline void ActiveActorsCount::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ActiveActorsCount.count)
}

// -------------------------------------------------------------------

// RegisteredComponents

// string name = 1;
inline void RegisteredComponents::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisteredComponents::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisteredComponents.name)
  return name_.GetNoArena();
}
inline void RegisteredComponents::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisteredComponents.name)
}
#if LANG_CXX11
inline void RegisteredComponents::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisteredComponents.name)
}
#endif
inline void RegisteredComponents::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisteredComponents.name)
}
inline void RegisteredComponents::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisteredComponents.name)
}
inline ::std::string* RegisteredComponents::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisteredComponents.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisteredComponents::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisteredComponents.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisteredComponents::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisteredComponents.name)
}

// string type = 2;
inline void RegisteredComponents::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisteredComponents::type() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisteredComponents.type)
  return type_.GetNoArena();
}
inline void RegisteredComponents::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisteredComponents.type)
}
#if LANG_CXX11
inline void RegisteredComponents::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisteredComponents.type)
}
#endif
inline void RegisteredComponents::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisteredComponents.type)
}
inline void RegisteredComponents::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisteredComponents.type)
}
inline ::std::string* RegisteredComponents::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisteredComponents.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisteredComponents::release_type() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisteredComponents.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisteredComponents::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisteredComponents.type)
}

// string version = 3;
inline void RegisteredComponents::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisteredComponents::version() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisteredComponents.version)
  return version_.GetNoArena();
}
inline void RegisteredComponents::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisteredComponents.version)
}
#if LANG_CXX11
inline void RegisteredComponents::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RegisteredComponents.version)
}
#endif
inline void RegisteredComponents::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisteredComponents.version)
}
inline void RegisteredComponents::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisteredComponents.version)
}
inline ::std::string* RegisteredComponents::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisteredComponents.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisteredComponents::release_version() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RegisteredComponents.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisteredComponents::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RegisteredComponents.version)
}

// repeated string capabilities = 4;
inline int RegisteredComponents::capabilities_size() const {
  return capabilities_.size();
}
inline void RegisteredComponents::clear_capabilities() {
  capabilities_.Clear();
}
inline const ::std::string& RegisteredComponents::capabilities(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
  return capabilities_.Get(index);
}
inline ::std::string* RegisteredComponents::mutable_capabilities(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
  return capabilities_.Mutable(index);
}
inline void RegisteredComponents::set_capabilities(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
  capabilities_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void RegisteredComponents::set_capabilities(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
  capabilities_.Mutable(index)->assign(std::move(value));
}
#endif
inline void RegisteredComponents::set_capabilities(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  capabilities_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline void RegisteredComponents::set_capabilities(int index, const char* value, size_t size) {
  capabilities_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline ::std::string* RegisteredComponents::add_capabilities() {
  // @@protoc_insertion_point(field_add_mutable:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
  return capabilities_.Add();
}
inline void RegisteredComponents::add_capabilities(const ::std::string& value) {
  capabilities_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
#if LANG_CXX11
inline void RegisteredComponents::add_capabilities(::std::string&& value) {
  capabilities_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
#endif
inline void RegisteredComponents::add_capabilities(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  capabilities_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline void RegisteredComponents::add_capabilities(const char* value, size_t size) {
  capabilities_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RegisteredComponents::capabilities() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
  return capabilities_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RegisteredComponents::mutable_capabilities() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.RegisteredComponents.capabilities)
  return &capabilities_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PubsubSubscription

// string pubsub_name = 1;
inline void PubsubSubscription::clear_pubsub_name() {
  pubsub_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PubsubSubscription::pubsub_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
  return pubsub_name_.GetNoArena();
}
inline void PubsubSubscription::set_pubsub_name(const ::std::string& value) {
  
  pubsub_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
}
#if LANG_CXX11
inline void PubsubSubscription::set_pubsub_name(::std::string&& value) {
  
  pubsub_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
}
#endif
inline void PubsubSubscription::set_pubsub_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pubsub_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
}
inline void PubsubSubscription::set_pubsub_name(const char* value, size_t size) {
  
  pubsub_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
}
inline ::std::string* PubsubSubscription::mutable_pubsub_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
  return pubsub_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PubsubSubscription::release_pubsub_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
  
  return pubsub_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PubsubSubscription::set_allocated_pubsub_name(::std::string* pubsub_name) {
  if (pubsub_name != NULL) {
    
  } else {
    
  }
  pubsub_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubsub_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PubsubSubscription.pubsub_name)
}

// string topic = 2;
inline void PubsubSubscription::clear_topic() {
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PubsubSubscription::topic() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscription.topic)
  return topic_.GetNoArena();
}
inline void PubsubSubscription::set_topic(const ::std::string& value) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PubsubSubscription.topic)
}
#if LANG_CXX11
inline void PubsubSubscription::set_topic(::std::string&& value) {
  
  topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PubsubSubscription.topic)
}
#endif
inline void PubsubSubscription::set_topic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PubsubSubscription.topic)
}
inline void PubsubSubscription::set_topic(const char* value, size_t size) {
  
  topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PubsubSubscription.topic)
}
inline ::std::string* PubsubSubscription::mutable_topic() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscription.topic)
  return topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PubsubSubscription::release_topic() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PubsubSubscription.topic)
  
  return topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PubsubSubscription::set_allocated_topic(::std::string* topic) {
  if (topic != NULL) {
    
  } else {
    
  }
  topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), topic);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PubsubSubscription.topic)
}

// map<string, string> metadata = 3;
inline int PubsubSubscription::metadata_size() const {
  return metadata_.size();
}
inline void PubsubSubscription::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PubsubSubscription::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.PubsubSubscription.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PubsubSubscription::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.PubsubSubscription.metadata)
  return metadata_.MutableMap();
}

// .dapr.proto.runtime.v1.PubsubSubscriptionRules rules = 4;
inline bool PubsubSubscription::has_rules() const {
  return this != internal_default_instance() && rules_ != NULL;
}
inline void PubsubSubscription::clear_rules() {
  if (GetArenaNoVirtual() == NULL && rules_ != NULL) {
    delete rules_;
  }
  rules_ = NULL;
}
inline const ::dapr::proto::runtime::v1::PubsubSubscriptionRules& PubsubSubscription::_internal_rules() const {
  return *rules_;
}
inline const ::dapr::proto::runtime::v1::PubsubSubscriptionRules& PubsubSubscription::rules() const {
  const ::dapr::proto::runtime::v1::PubsubSubscriptionRules* p = rules_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscription.rules)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::runtime::v1::PubsubSubscriptionRules*>(
      &::dapr::proto::runtime::v1::_PubsubSubscriptionRules_default_instance_);
}
inline ::dapr::proto::runtime::v1::PubsubSubscriptionRules* PubsubSubscription::release_rules() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PubsubSubscription.rules)
  
  ::dapr::proto::runtime::v1::PubsubSubscriptionRules* temp = rules_;
  rules_ = NULL;
  return temp;
}
inline ::dapr::proto::runtime::v1::PubsubSubscriptionRules* PubsubSubscription::mutable_rules() {
  
  if (rules_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::runtime::v1::PubsubSubscriptionRules>(GetArenaNoVirtual());
    rules_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscription.rules)
  return rules_;
}
inline void PubsubSubscription::set_allocated_rules(::dapr::proto::runtime::v1::PubsubSubscriptionRules* rules) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rules_;
  }
  if (rules) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rules = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rules, submessage_arena);
    }
    
  } else {
    
  }
  rules_ = rules;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PubsubSubscription.rules)
}

// string dead_letter_topic = 5;
inline void PubsubSubscription::clear_dead_letter_topic() {
  dead_letter_topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PubsubSubscription::dead_letter_topic() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
  return dead_letter_topic_.GetNoArena();
}
inline void PubsubSubscription::set_dead_letter_topic(const ::std::string& value) {
  
  dead_letter_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
}
#if LANG_CXX11
inline void PubsubSubscription::set_dead_letter_topic(::std::string&& value) {
  
  dead_letter_topic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
}
#endif
inline void PubsubSubscription::set_dead_letter_topic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dead_letter_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
}
inline void PubsubSubscription::set_dead_letter_topic(const char* value, size_t size) {
  
  dead_letter_topic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
}
inline ::std::string* PubsubSubscription::mutable_dead_letter_topic() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
  return dead_letter_topic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PubsubSubscription::release_dead_letter_topic() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
  
  return dead_letter_topic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PubsubSubscription::set_allocated_dead_letter_topic(::std::string* dead_letter_topic) {
  if (dead_letter_topic != NULL) {
    
  } else {
    
  }
  dead_letter_topic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dead_letter_topic);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PubsubSubscription.dead_letter_topic)
}

// -------------------------------------------------------------------

// PubsubSubscriptionRules

// repeated .dapr.proto.runtime.v1.PubsubSubscriptionRule rules = 1;
inline int PubsubSubscriptionRules::rules_size() const {
  return rules_.size();
}
inline void PubsubSubscriptionRules::clear_rules() {
  rules_.Clear();
}
inline ::dapr::proto::runtime::v1::PubsubSubscriptionRule* PubsubSubscriptionRules::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscriptionRules.rules)
  return rules_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscriptionRule >*
PubsubSubscriptionRules::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.PubsubSubscriptionRules.rules)
  return &rules_;
}
inline const ::dapr::proto::runtime::v1::PubsubSubscriptionRule& PubsubSubscriptionRules::rules(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscriptionRules.rules)
  return rules_.Get(index);
}
inline ::dapr::proto::runtime::v1::PubsubSubscriptionRule* PubsubSubscriptionRules::add_rules() {
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.PubsubSubscriptionRules.rules)
  return rules_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dapr::proto::runtime::v1::PubsubSubscriptionRule >&
PubsubSubscriptionRules::rules() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.PubsubSubscriptionRules.rules)
  return rules_;
}

// -------------------------------------------------------------------

// PubsubSubscriptionRule

// string match = 1;
inline void PubsubSubscriptionRule::clear_match() {
  match_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PubsubSubscriptionRule::match() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
  return match_.GetNoArena();
}
inline void PubsubSubscriptionRule::set_match(const ::std::string& value) {
  
  match_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
}
#if LANG_CXX11
inline void PubsubSubscriptionRule::set_match(::std::string&& value) {
  
  match_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
}
#endif
inline void PubsubSubscriptionRule::set_match(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  match_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
}
inline void PubsubSubscriptionRule::set_match(const char* value, size_t size) {
  
  match_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
}
inline ::std::string* PubsubSubscriptionRule::mutable_match() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
  return match_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PubsubSubscriptionRule::release_match() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
  
  return match_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PubsubSubscriptionRule::set_allocated_match(::std::string* match) {
  if (match != NULL) {
    
  } else {
    
  }
  match_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), match);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PubsubSubscriptionRule.match)
}

// string path = 2;
inline void PubsubSubscriptionRule::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PubsubSubscriptionRule::path() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
  return path_.GetNoArena();
}
inline void PubsubSubscriptionRule::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
}
#if LANG_CXX11
inline void PubsubSubscriptionRule::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
}
#endif
inline void PubsubSubscriptionRule::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
}
inline void PubsubSubscriptionRule::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
}
inline ::std::string* PubsubSubscriptionRule::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PubsubSubscriptionRule::release_path() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PubsubSubscriptionRule::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PubsubSubscriptionRule.path)
}

// -------------------------------------------------------------------

// SetMetadataRequest

// string key = 1;
inline void SetMetadataRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetMetadataRequest::key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SetMetadataRequest.key)
  return key_.GetNoArena();
}
inline void SetMetadataRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SetMetadataRequest.key)
}
#if LANG_CXX11
inline void SetMetadataRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SetMetadataRequest.key)
}
#endif
inline void SetMetadataRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SetMetadataRequest.key)
}
inline void SetMetadataRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SetMetadataRequest.key)
}
inline ::std::string* SetMetadataRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SetMetadataRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetMetadataRequest::release_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SetMetadataRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetMetadataRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SetMetadataRequest.key)
}

// string value = 2;
inline void SetMetadataRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetMetadataRequest::value() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SetMetadataRequest.value)
  return value_.GetNoArena();
}
inline void SetMetadataRequest::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SetMetadataRequest.value)
}
#if LANG_CXX11
inline void SetMetadataRequest::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SetMetadataRequest.value)
}
#endif
inline void SetMetadataRequest::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SetMetadataRequest.value)
}
inline void SetMetadataRequest::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SetMetadataRequest.value)
}
inline ::std::string* SetMetadataRequest::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SetMetadataRequest.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetMetadataRequest::release_value() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SetMetadataRequest.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetMetadataRequest::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SetMetadataRequest.value)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetConfigurationRequest

// string store_name = 1;
inline void GetConfigurationRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetConfigurationRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
  return store_name_.GetNoArena();
}
inline void GetConfigurationRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
}
#if LANG_CXX11
inline void GetConfigurationRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
}
#endif
inline void GetConfigurationRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
}
inline void GetConfigurationRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
}
inline ::std::string* GetConfigurationRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetConfigurationRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetConfigurationRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetConfigurationRequest.store_name)
}

// repeated string keys = 2;
inline int GetConfigurationRequest::keys_size() const {
  return keys_.size();
}
inline void GetConfigurationRequest::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& GetConfigurationRequest::keys(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
  return keys_.Get(index);
}
inline ::std::string* GetConfigurationRequest::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
  return keys_.Mutable(index);
}
inline void GetConfigurationRequest::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
  keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetConfigurationRequest::set_keys(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
  keys_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetConfigurationRequest::set_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline void GetConfigurationRequest::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline ::std::string* GetConfigurationRequest::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
  return keys_.Add();
}
inline void GetConfigurationRequest::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
#if LANG_CXX11
inline void GetConfigurationRequest::add_keys(::std::string&& value) {
  keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
#endif
inline void GetConfigurationRequest::add_keys(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline void GetConfigurationRequest::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetConfigurationRequest::keys() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetConfigurationRequest::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.GetConfigurationRequest.keys)
  return &keys_;
}

// map<string, string> metadata = 3;
inline int GetConfigurationRequest::metadata_size() const {
  return metadata_.size();
}
inline void GetConfigurationRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetConfigurationRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetConfigurationRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetConfigurationRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetConfigurationRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetConfigurationResponse

// map<string, .dapr.proto.common.v1.ConfigurationItem> items = 1;
inline int GetConfigurationResponse::items_size() const {
  return items_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::dapr::proto::common::v1::ConfigurationItem >&
GetConfigurationResponse::items() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetConfigurationResponse.items)
  return items_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::dapr::proto::common::v1::ConfigurationItem >*
GetConfigurationResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetConfigurationResponse.items)
  return items_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SubscribeConfigurationRequest

// string store_name = 1;
inline void SubscribeConfigurationRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubscribeConfigurationRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
  return store_name_.GetNoArena();
}
inline void SubscribeConfigurationRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
}
#if LANG_CXX11
inline void SubscribeConfigurationRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
}
#endif
inline void SubscribeConfigurationRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
}
inline void SubscribeConfigurationRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
}
inline ::std::string* SubscribeConfigurationRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubscribeConfigurationRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubscribeConfigurationRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubscribeConfigurationRequest.store_name)
}

// repeated string keys = 2;
inline int SubscribeConfigurationRequest::keys_size() const {
  return keys_.size();
}
inline void SubscribeConfigurationRequest::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& SubscribeConfigurationRequest::keys(int index) const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
  return keys_.Get(index);
}
inline ::std::string* SubscribeConfigurationRequest::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
  return keys_.Mutable(index);
}
inline void SubscribeConfigurationRequest::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
  keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SubscribeConfigurationRequest::set_keys(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
  keys_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SubscribeConfigurationRequest::set_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline void SubscribeConfigurationRequest::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline ::std::string* SubscribeConfigurationRequest::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
  return keys_.Add();
}
inline void SubscribeConfigurationRequest::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
#if LANG_CXX11
inline void SubscribeConfigurationRequest::add_keys(::std::string&& value) {
  keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
#endif
inline void SubscribeConfigurationRequest::add_keys(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline void SubscribeConfigurationRequest::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SubscribeConfigurationRequest::keys() const {
  // @@protoc_insertion_point(field_list:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SubscribeConfigurationRequest::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:dapr.proto.runtime.v1.SubscribeConfigurationRequest.keys)
  return &keys_;
}

// map<string, string> metadata = 3;
inline int SubscribeConfigurationRequest::metadata_size() const {
  return metadata_.size();
}
inline void SubscribeConfigurationRequest::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
SubscribeConfigurationRequest::metadata() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.SubscribeConfigurationRequest.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
SubscribeConfigurationRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.SubscribeConfigurationRequest.metadata)
  return metadata_.MutableMap();
}

// -------------------------------------------------------------------

// UnsubscribeConfigurationRequest

// string store_name = 1;
inline void UnsubscribeConfigurationRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnsubscribeConfigurationRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
  return store_name_.GetNoArena();
}
inline void UnsubscribeConfigurationRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
}
#if LANG_CXX11
inline void UnsubscribeConfigurationRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
}
#endif
inline void UnsubscribeConfigurationRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
}
inline void UnsubscribeConfigurationRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
}
inline ::std::string* UnsubscribeConfigurationRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnsubscribeConfigurationRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsubscribeConfigurationRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.store_name)
}

// string id = 2;
inline void UnsubscribeConfigurationRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnsubscribeConfigurationRequest::id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
  return id_.GetNoArena();
}
inline void UnsubscribeConfigurationRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
}
#if LANG_CXX11
inline void UnsubscribeConfigurationRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
}
#endif
inline void UnsubscribeConfigurationRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
}
inline void UnsubscribeConfigurationRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
}
inline ::std::string* UnsubscribeConfigurationRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnsubscribeConfigurationRequest::release_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsubscribeConfigurationRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnsubscribeConfigurationRequest.id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SubscribeConfigurationResponse

// string id = 1;
inline void SubscribeConfigurationResponse::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubscribeConfigurationResponse::id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
  return id_.GetNoArena();
}
inline void SubscribeConfigurationResponse::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
}
#if LANG_CXX11
inline void SubscribeConfigurationResponse::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
}
#endif
inline void SubscribeConfigurationResponse::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
}
inline void SubscribeConfigurationResponse::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
}
inline ::std::string* SubscribeConfigurationResponse::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubscribeConfigurationResponse::release_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubscribeConfigurationResponse::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubscribeConfigurationResponse.id)
}

// map<string, .dapr.proto.common.v1.ConfigurationItem> items = 2;
inline int SubscribeConfigurationResponse::items_size() const {
  return items_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::dapr::proto::common::v1::ConfigurationItem >&
SubscribeConfigurationResponse::items() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.SubscribeConfigurationResponse.items)
  return items_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::dapr::proto::common::v1::ConfigurationItem >*
SubscribeConfigurationResponse::mutable_items() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.SubscribeConfigurationResponse.items)
  return items_.MutableMap();
}

// -------------------------------------------------------------------

// UnsubscribeConfigurationResponse

// bool ok = 1;
inline void UnsubscribeConfigurationResponse::clear_ok() {
  ok_ = false;
}
inline bool UnsubscribeConfigurationResponse::ok() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.ok)
  return ok_;
}
inline void UnsubscribeConfigurationResponse::set_ok(bool value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.ok)
}

// string message = 2;
inline void UnsubscribeConfigurationResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnsubscribeConfigurationResponse::message() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
  return message_.GetNoArena();
}
inline void UnsubscribeConfigurationResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
}
#if LANG_CXX11
inline void UnsubscribeConfigurationResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
}
#endif
inline void UnsubscribeConfigurationResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
}
inline void UnsubscribeConfigurationResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
}
inline ::std::string* UnsubscribeConfigurationResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnsubscribeConfigurationResponse::release_message() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnsubscribeConfigurationResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnsubscribeConfigurationResponse.message)
}

// -------------------------------------------------------------------

// TryLockRequest

// string store_name = 1[json_name = "storeName"];
inline void TryLockRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TryLockRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TryLockRequest.store_name)
  return store_name_.GetNoArena();
}
inline void TryLockRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TryLockRequest.store_name)
}
#if LANG_CXX11
inline void TryLockRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.TryLockRequest.store_name)
}
#endif
inline void TryLockRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.TryLockRequest.store_name)
}
inline void TryLockRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.TryLockRequest.store_name)
}
inline ::std::string* TryLockRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TryLockRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TryLockRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TryLockRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TryLockRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TryLockRequest.store_name)
}

// string resource_id = 2[json_name = "resourceId"];
inline void TryLockRequest::clear_resource_id() {
  resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TryLockRequest::resource_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TryLockRequest.resource_id)
  return resource_id_.GetNoArena();
}
inline void TryLockRequest::set_resource_id(const ::std::string& value) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TryLockRequest.resource_id)
}
#if LANG_CXX11
inline void TryLockRequest::set_resource_id(::std::string&& value) {
  
  resource_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.TryLockRequest.resource_id)
}
#endif
inline void TryLockRequest::set_resource_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.TryLockRequest.resource_id)
}
inline void TryLockRequest::set_resource_id(const char* value, size_t size) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.TryLockRequest.resource_id)
}
inline ::std::string* TryLockRequest::mutable_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TryLockRequest.resource_id)
  return resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TryLockRequest::release_resource_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TryLockRequest.resource_id)
  
  return resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TryLockRequest::set_allocated_resource_id(::std::string* resource_id) {
  if (resource_id != NULL) {
    
  } else {
    
  }
  resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TryLockRequest.resource_id)
}

// string lock_owner = 3[json_name = "lockOwner"];
inline void TryLockRequest::clear_lock_owner() {
  lock_owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TryLockRequest::lock_owner() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
  return lock_owner_.GetNoArena();
}
inline void TryLockRequest::set_lock_owner(const ::std::string& value) {
  
  lock_owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
}
#if LANG_CXX11
inline void TryLockRequest::set_lock_owner(::std::string&& value) {
  
  lock_owner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
}
#endif
inline void TryLockRequest::set_lock_owner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lock_owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
}
inline void TryLockRequest::set_lock_owner(const char* value, size_t size) {
  
  lock_owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
}
inline ::std::string* TryLockRequest::mutable_lock_owner() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
  return lock_owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TryLockRequest::release_lock_owner() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
  
  return lock_owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TryLockRequest::set_allocated_lock_owner(::std::string* lock_owner) {
  if (lock_owner != NULL) {
    
  } else {
    
  }
  lock_owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lock_owner);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TryLockRequest.lock_owner)
}

// int32 expiry_in_seconds = 4[json_name = "expiryInSeconds"];
inline void TryLockRequest::clear_expiry_in_seconds() {
  expiry_in_seconds_ = 0;
}
inline ::google::protobuf::int32 TryLockRequest::expiry_in_seconds() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TryLockRequest.expiry_in_seconds)
  return expiry_in_seconds_;
}
inline void TryLockRequest::set_expiry_in_seconds(::google::protobuf::int32 value) {
  
  expiry_in_seconds_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TryLockRequest.expiry_in_seconds)
}

// -------------------------------------------------------------------

// TryLockResponse

// bool success = 1;
inline void TryLockResponse::clear_success() {
  success_ = false;
}
inline bool TryLockResponse::success() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TryLockResponse.success)
  return success_;
}
inline void TryLockResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TryLockResponse.success)
}

// -------------------------------------------------------------------

// UnlockRequest

// string store_name = 1[json_name = "storeName"];
inline void UnlockRequest::clear_store_name() {
  store_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnlockRequest::store_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnlockRequest.store_name)
  return store_name_.GetNoArena();
}
inline void UnlockRequest::set_store_name(const ::std::string& value) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnlockRequest.store_name)
}
#if LANG_CXX11
inline void UnlockRequest::set_store_name(::std::string&& value) {
  
  store_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnlockRequest.store_name)
}
#endif
inline void UnlockRequest::set_store_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnlockRequest.store_name)
}
inline void UnlockRequest::set_store_name(const char* value, size_t size) {
  
  store_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnlockRequest.store_name)
}
inline ::std::string* UnlockRequest::mutable_store_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnlockRequest.store_name)
  return store_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnlockRequest::release_store_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnlockRequest.store_name)
  
  return store_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnlockRequest::set_allocated_store_name(::std::string* store_name) {
  if (store_name != NULL) {
    
  } else {
    
  }
  store_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnlockRequest.store_name)
}

// string resource_id = 2[json_name = "resourceId"];
inline void UnlockRequest::clear_resource_id() {
  resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnlockRequest::resource_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnlockRequest.resource_id)
  return resource_id_.GetNoArena();
}
inline void UnlockRequest::set_resource_id(const ::std::string& value) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnlockRequest.resource_id)
}
#if LANG_CXX11
inline void UnlockRequest::set_resource_id(::std::string&& value) {
  
  resource_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnlockRequest.resource_id)
}
#endif
inline void UnlockRequest::set_resource_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnlockRequest.resource_id)
}
inline void UnlockRequest::set_resource_id(const char* value, size_t size) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnlockRequest.resource_id)
}
inline ::std::string* UnlockRequest::mutable_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnlockRequest.resource_id)
  return resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnlockRequest::release_resource_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnlockRequest.resource_id)
  
  return resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnlockRequest::set_allocated_resource_id(::std::string* resource_id) {
  if (resource_id != NULL) {
    
  } else {
    
  }
  resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnlockRequest.resource_id)
}

// string lock_owner = 3[json_name = "lockOwner"];
inline void UnlockRequest::clear_lock_owner() {
  lock_owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnlockRequest::lock_owner() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
  return lock_owner_.GetNoArena();
}
inline void UnlockRequest::set_lock_owner(const ::std::string& value) {
  
  lock_owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
}
#if LANG_CXX11
inline void UnlockRequest::set_lock_owner(::std::string&& value) {
  
  lock_owner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
}
#endif
inline void UnlockRequest::set_lock_owner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lock_owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
}
inline void UnlockRequest::set_lock_owner(const char* value, size_t size) {
  
  lock_owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
}
inline ::std::string* UnlockRequest::mutable_lock_owner() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
  return lock_owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnlockRequest::release_lock_owner() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
  
  return lock_owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnlockRequest::set_allocated_lock_owner(::std::string* lock_owner) {
  if (lock_owner != NULL) {
    
  } else {
    
  }
  lock_owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lock_owner);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.UnlockRequest.lock_owner)
}

// -------------------------------------------------------------------

// UnlockResponse

// .dapr.proto.runtime.v1.UnlockResponse.Status status = 1;
inline void UnlockResponse::clear_status() {
  status_ = 0;
}
inline ::dapr::proto::runtime::v1::UnlockResponse_Status UnlockResponse::status() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.UnlockResponse.status)
  return static_cast< ::dapr::proto::runtime::v1::UnlockResponse_Status >(status_);
}
inline void UnlockResponse::set_status(::dapr::proto::runtime::v1::UnlockResponse_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.UnlockResponse.status)
}

// -------------------------------------------------------------------

// SubtleGetKeyRequest

// string component_name = 1[json_name = "componentName"];
inline void SubtleGetKeyRequest::clear_component_name() {
  component_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleGetKeyRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
  return component_name_.GetNoArena();
}
inline void SubtleGetKeyRequest::set_component_name(const ::std::string& value) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
}
#if LANG_CXX11
inline void SubtleGetKeyRequest::set_component_name(::std::string&& value) {
  
  component_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
}
#endif
inline void SubtleGetKeyRequest::set_component_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
}
inline void SubtleGetKeyRequest::set_component_name(const char* value, size_t size) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
}
inline ::std::string* SubtleGetKeyRequest::mutable_component_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
  return component_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleGetKeyRequest::release_component_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
  
  return component_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleGetKeyRequest::set_allocated_component_name(::std::string* component_name) {
  if (component_name != NULL) {
    
  } else {
    
  }
  component_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleGetKeyRequest.component_name)
}

// string name = 2;
inline void SubtleGetKeyRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleGetKeyRequest::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
  return name_.GetNoArena();
}
inline void SubtleGetKeyRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
}
#if LANG_CXX11
inline void SubtleGetKeyRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
}
#endif
inline void SubtleGetKeyRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
}
inline void SubtleGetKeyRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
}
inline ::std::string* SubtleGetKeyRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleGetKeyRequest::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleGetKeyRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleGetKeyRequest.name)
}

// .dapr.proto.runtime.v1.SubtleGetKeyRequest.KeyFormat format = 3;
inline void SubtleGetKeyRequest::clear_format() {
  format_ = 0;
}
inline ::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat SubtleGetKeyRequest::format() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleGetKeyRequest.format)
  return static_cast< ::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat >(format_);
}
inline void SubtleGetKeyRequest::set_format(::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat value) {
  
  format_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleGetKeyRequest.format)
}

// -------------------------------------------------------------------

// SubtleGetKeyResponse

// string name = 1;
inline void SubtleGetKeyResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleGetKeyResponse::name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
  return name_.GetNoArena();
}
inline void SubtleGetKeyResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
}
#if LANG_CXX11
inline void SubtleGetKeyResponse::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
}
#endif
inline void SubtleGetKeyResponse::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
}
inline void SubtleGetKeyResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
}
inline ::std::string* SubtleGetKeyResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleGetKeyResponse::release_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleGetKeyResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleGetKeyResponse.name)
}

// string public_key = 2[json_name = "publicKey"];
inline void SubtleGetKeyResponse::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleGetKeyResponse::public_key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
  return public_key_.GetNoArena();
}
inline void SubtleGetKeyResponse::set_public_key(const ::std::string& value) {
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
}
#if LANG_CXX11
inline void SubtleGetKeyResponse::set_public_key(::std::string&& value) {
  
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
}
#endif
inline void SubtleGetKeyResponse::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
}
inline void SubtleGetKeyResponse::set_public_key(const char* value, size_t size) {
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
}
inline ::std::string* SubtleGetKeyResponse::mutable_public_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleGetKeyResponse::release_public_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
  
  return public_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleGetKeyResponse::set_allocated_public_key(::std::string* public_key) {
  if (public_key != NULL) {
    
  } else {
    
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleGetKeyResponse.public_key)
}

// -------------------------------------------------------------------

// SubtleEncryptRequest

// string component_name = 1[json_name = "componentName"];
inline void SubtleEncryptRequest::clear_component_name() {
  component_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleEncryptRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
  return component_name_.GetNoArena();
}
inline void SubtleEncryptRequest::set_component_name(const ::std::string& value) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
}
#if LANG_CXX11
inline void SubtleEncryptRequest::set_component_name(::std::string&& value) {
  
  component_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
}
#endif
inline void SubtleEncryptRequest::set_component_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
}
inline void SubtleEncryptRequest::set_component_name(const char* value, size_t size) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
}
inline ::std::string* SubtleEncryptRequest::mutable_component_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
  return component_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleEncryptRequest::release_component_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
  
  return component_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleEncryptRequest::set_allocated_component_name(::std::string* component_name) {
  if (component_name != NULL) {
    
  } else {
    
  }
  component_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptRequest.component_name)
}

// bytes plaintext = 2;
inline void SubtleEncryptRequest::clear_plaintext() {
  plaintext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleEncryptRequest::plaintext() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
  return plaintext_.GetNoArena();
}
inline void SubtleEncryptRequest::set_plaintext(const ::std::string& value) {
  
  plaintext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
}
#if LANG_CXX11
inline void SubtleEncryptRequest::set_plaintext(::std::string&& value) {
  
  plaintext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
}
#endif
inline void SubtleEncryptRequest::set_plaintext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plaintext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
}
inline void SubtleEncryptRequest::set_plaintext(const void* value, size_t size) {
  
  plaintext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
}
inline ::std::string* SubtleEncryptRequest::mutable_plaintext() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
  return plaintext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleEncryptRequest::release_plaintext() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
  
  return plaintext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleEncryptRequest::set_allocated_plaintext(::std::string* plaintext) {
  if (plaintext != NULL) {
    
  } else {
    
  }
  plaintext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintext);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptRequest.plaintext)
}

// string algorithm = 3;
inline void SubtleEncryptRequest::clear_algorithm() {
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleEncryptRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
  return algorithm_.GetNoArena();
}
inline void SubtleEncryptRequest::set_algorithm(const ::std::string& value) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
}
#if LANG_CXX11
inline void SubtleEncryptRequest::set_algorithm(::std::string&& value) {
  
  algorithm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
}
#endif
inline void SubtleEncryptRequest::set_algorithm(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
}
inline void SubtleEncryptRequest::set_algorithm(const char* value, size_t size) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
}
inline ::std::string* SubtleEncryptRequest::mutable_algorithm() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
  return algorithm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleEncryptRequest::release_algorithm() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
  
  return algorithm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleEncryptRequest::set_allocated_algorithm(::std::string* algorithm) {
  if (algorithm != NULL) {
    
  } else {
    
  }
  algorithm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), algorithm);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptRequest.algorithm)
}

// string key_name = 4[json_name = "keyName"];
inline void SubtleEncryptRequest::clear_key_name() {
  key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleEncryptRequest::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
  return key_name_.GetNoArena();
}
inline void SubtleEncryptRequest::set_key_name(const ::std::string& value) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
}
#if LANG_CXX11
inline void SubtleEncryptRequest::set_key_name(::std::string&& value) {
  
  key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
}
#endif
inline void SubtleEncryptRequest::set_key_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
}
inline void SubtleEncryptRequest::set_key_name(const char* value, size_t size) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
}
inline ::std::string* SubtleEncryptRequest::mutable_key_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
  return key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleEncryptRequest::release_key_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
  
  return key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleEncryptRequest::set_allocated_key_name(::std::string* key_name) {
  if (key_name != NULL) {
    
  } else {
    
  }
  key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptRequest.key_name)
}

// bytes nonce = 5;
inline void SubtleEncryptRequest::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleEncryptRequest::nonce() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
  return nonce_.GetNoArena();
}
inline void SubtleEncryptRequest::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
}
#if LANG_CXX11
inline void SubtleEncryptRequest::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
}
#endif
inline void SubtleEncryptRequest::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
}
inline void SubtleEncryptRequest::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
}
inline ::std::string* SubtleEncryptRequest::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleEncryptRequest::release_nonce() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleEncryptRequest::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptRequest.nonce)
}

// bytes associated_data = 6[json_name = "associatedData"];
inline void SubtleEncryptRequest::clear_associated_data() {
  associated_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleEncryptRequest::associated_data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
  return associated_data_.GetNoArena();
}
inline void SubtleEncryptRequest::set_associated_data(const ::std::string& value) {
  
  associated_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
}
#if LANG_CXX11
inline void SubtleEncryptRequest::set_associated_data(::std::string&& value) {
  
  associated_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
}
#endif
inline void SubtleEncryptRequest::set_associated_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  associated_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
}
inline void SubtleEncryptRequest::set_associated_data(const void* value, size_t size) {
  
  associated_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
}
inline ::std::string* SubtleEncryptRequest::mutable_associated_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
  return associated_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleEncryptRequest::release_associated_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
  
  return associated_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleEncryptRequest::set_allocated_associated_data(::std::string* associated_data) {
  if (associated_data != NULL) {
    
  } else {
    
  }
  associated_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), associated_data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptRequest.associated_data)
}

// -------------------------------------------------------------------

// SubtleEncryptResponse

// bytes ciphertext = 1;
inline void SubtleEncryptResponse::clear_ciphertext() {
  ciphertext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleEncryptResponse::ciphertext() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
  return ciphertext_.GetNoArena();
}
inline void SubtleEncryptResponse::set_ciphertext(const ::std::string& value) {
  
  ciphertext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
}
#if LANG_CXX11
inline void SubtleEncryptResponse::set_ciphertext(::std::string&& value) {
  
  ciphertext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
}
#endif
inline void SubtleEncryptResponse::set_ciphertext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ciphertext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
}
inline void SubtleEncryptResponse::set_ciphertext(const void* value, size_t size) {
  
  ciphertext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
}
inline ::std::string* SubtleEncryptResponse::mutable_ciphertext() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
  return ciphertext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleEncryptResponse::release_ciphertext() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
  
  return ciphertext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleEncryptResponse::set_allocated_ciphertext(::std::string* ciphertext) {
  if (ciphertext != NULL) {
    
  } else {
    
  }
  ciphertext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ciphertext);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptResponse.ciphertext)
}

// bytes tag = 2;
inline void SubtleEncryptResponse::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleEncryptResponse::tag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
  return tag_.GetNoArena();
}
inline void SubtleEncryptResponse::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
}
#if LANG_CXX11
inline void SubtleEncryptResponse::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
}
#endif
inline void SubtleEncryptResponse::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
}
inline void SubtleEncryptResponse::set_tag(const void* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
}
inline ::std::string* SubtleEncryptResponse::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleEncryptResponse::release_tag() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleEncryptResponse::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleEncryptResponse.tag)
}

// -------------------------------------------------------------------

// SubtleDecryptRequest

// string component_name = 1[json_name = "componentName"];
inline void SubtleDecryptRequest::clear_component_name() {
  component_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleDecryptRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
  return component_name_.GetNoArena();
}
inline void SubtleDecryptRequest::set_component_name(const ::std::string& value) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
}
#if LANG_CXX11
inline void SubtleDecryptRequest::set_component_name(::std::string&& value) {
  
  component_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
}
#endif
inline void SubtleDecryptRequest::set_component_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
}
inline void SubtleDecryptRequest::set_component_name(const char* value, size_t size) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
}
inline ::std::string* SubtleDecryptRequest::mutable_component_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
  return component_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleDecryptRequest::release_component_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
  
  return component_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleDecryptRequest::set_allocated_component_name(::std::string* component_name) {
  if (component_name != NULL) {
    
  } else {
    
  }
  component_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.component_name)
}

// bytes ciphertext = 2;
inline void SubtleDecryptRequest::clear_ciphertext() {
  ciphertext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleDecryptRequest::ciphertext() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
  return ciphertext_.GetNoArena();
}
inline void SubtleDecryptRequest::set_ciphertext(const ::std::string& value) {
  
  ciphertext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
}
#if LANG_CXX11
inline void SubtleDecryptRequest::set_ciphertext(::std::string&& value) {
  
  ciphertext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
}
#endif
inline void SubtleDecryptRequest::set_ciphertext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ciphertext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
}
inline void SubtleDecryptRequest::set_ciphertext(const void* value, size_t size) {
  
  ciphertext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
}
inline ::std::string* SubtleDecryptRequest::mutable_ciphertext() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
  return ciphertext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleDecryptRequest::release_ciphertext() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
  
  return ciphertext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleDecryptRequest::set_allocated_ciphertext(::std::string* ciphertext) {
  if (ciphertext != NULL) {
    
  } else {
    
  }
  ciphertext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ciphertext);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.ciphertext)
}

// string algorithm = 3;
inline void SubtleDecryptRequest::clear_algorithm() {
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleDecryptRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
  return algorithm_.GetNoArena();
}
inline void SubtleDecryptRequest::set_algorithm(const ::std::string& value) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
}
#if LANG_CXX11
inline void SubtleDecryptRequest::set_algorithm(::std::string&& value) {
  
  algorithm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
}
#endif
inline void SubtleDecryptRequest::set_algorithm(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
}
inline void SubtleDecryptRequest::set_algorithm(const char* value, size_t size) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
}
inline ::std::string* SubtleDecryptRequest::mutable_algorithm() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
  return algorithm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleDecryptRequest::release_algorithm() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
  
  return algorithm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleDecryptRequest::set_allocated_algorithm(::std::string* algorithm) {
  if (algorithm != NULL) {
    
  } else {
    
  }
  algorithm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), algorithm);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.algorithm)
}

// string key_name = 4[json_name = "keyName"];
inline void SubtleDecryptRequest::clear_key_name() {
  key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleDecryptRequest::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
  return key_name_.GetNoArena();
}
inline void SubtleDecryptRequest::set_key_name(const ::std::string& value) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
}
#if LANG_CXX11
inline void SubtleDecryptRequest::set_key_name(::std::string&& value) {
  
  key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
}
#endif
inline void SubtleDecryptRequest::set_key_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
}
inline void SubtleDecryptRequest::set_key_name(const char* value, size_t size) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
}
inline ::std::string* SubtleDecryptRequest::mutable_key_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
  return key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleDecryptRequest::release_key_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
  
  return key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleDecryptRequest::set_allocated_key_name(::std::string* key_name) {
  if (key_name != NULL) {
    
  } else {
    
  }
  key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.key_name)
}

// bytes nonce = 5;
inline void SubtleDecryptRequest::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleDecryptRequest::nonce() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
  return nonce_.GetNoArena();
}
inline void SubtleDecryptRequest::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
}
#if LANG_CXX11
inline void SubtleDecryptRequest::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
}
#endif
inline void SubtleDecryptRequest::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
}
inline void SubtleDecryptRequest::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
}
inline ::std::string* SubtleDecryptRequest::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleDecryptRequest::release_nonce() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleDecryptRequest::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.nonce)
}

// bytes tag = 6;
inline void SubtleDecryptRequest::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleDecryptRequest::tag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
  return tag_.GetNoArena();
}
inline void SubtleDecryptRequest::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
}
#if LANG_CXX11
inline void SubtleDecryptRequest::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
}
#endif
inline void SubtleDecryptRequest::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
}
inline void SubtleDecryptRequest::set_tag(const void* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
}
inline ::std::string* SubtleDecryptRequest::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleDecryptRequest::release_tag() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleDecryptRequest::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.tag)
}

// bytes associated_data = 7[json_name = "associatedData"];
inline void SubtleDecryptRequest::clear_associated_data() {
  associated_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleDecryptRequest::associated_data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
  return associated_data_.GetNoArena();
}
inline void SubtleDecryptRequest::set_associated_data(const ::std::string& value) {
  
  associated_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
}
#if LANG_CXX11
inline void SubtleDecryptRequest::set_associated_data(::std::string&& value) {
  
  associated_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
}
#endif
inline void SubtleDecryptRequest::set_associated_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  associated_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
}
inline void SubtleDecryptRequest::set_associated_data(const void* value, size_t size) {
  
  associated_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
}
inline ::std::string* SubtleDecryptRequest::mutable_associated_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
  return associated_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleDecryptRequest::release_associated_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
  
  return associated_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleDecryptRequest::set_allocated_associated_data(::std::string* associated_data) {
  if (associated_data != NULL) {
    
  } else {
    
  }
  associated_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), associated_data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptRequest.associated_data)
}

// -------------------------------------------------------------------

// SubtleDecryptResponse

// bytes plaintext = 1;
inline void SubtleDecryptResponse::clear_plaintext() {
  plaintext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleDecryptResponse::plaintext() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
  return plaintext_.GetNoArena();
}
inline void SubtleDecryptResponse::set_plaintext(const ::std::string& value) {
  
  plaintext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
}
#if LANG_CXX11
inline void SubtleDecryptResponse::set_plaintext(::std::string&& value) {
  
  plaintext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
}
#endif
inline void SubtleDecryptResponse::set_plaintext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plaintext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
}
inline void SubtleDecryptResponse::set_plaintext(const void* value, size_t size) {
  
  plaintext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
}
inline ::std::string* SubtleDecryptResponse::mutable_plaintext() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
  return plaintext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleDecryptResponse::release_plaintext() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
  
  return plaintext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleDecryptResponse::set_allocated_plaintext(::std::string* plaintext) {
  if (plaintext != NULL) {
    
  } else {
    
  }
  plaintext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintext);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleDecryptResponse.plaintext)
}

// -------------------------------------------------------------------

// SubtleWrapKeyRequest

// string component_name = 1[json_name = "componentName"];
inline void SubtleWrapKeyRequest::clear_component_name() {
  component_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleWrapKeyRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
  return component_name_.GetNoArena();
}
inline void SubtleWrapKeyRequest::set_component_name(const ::std::string& value) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
}
#if LANG_CXX11
inline void SubtleWrapKeyRequest::set_component_name(::std::string&& value) {
  
  component_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
}
#endif
inline void SubtleWrapKeyRequest::set_component_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
}
inline void SubtleWrapKeyRequest::set_component_name(const char* value, size_t size) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
}
inline ::std::string* SubtleWrapKeyRequest::mutable_component_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
  return component_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleWrapKeyRequest::release_component_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
  
  return component_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleWrapKeyRequest::set_allocated_component_name(::std::string* component_name) {
  if (component_name != NULL) {
    
  } else {
    
  }
  component_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyRequest.component_name)
}

// bytes plaintext_key = 2[json_name = "plaintextKey"];
inline void SubtleWrapKeyRequest::clear_plaintext_key() {
  plaintext_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleWrapKeyRequest::plaintext_key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
  return plaintext_key_.GetNoArena();
}
inline void SubtleWrapKeyRequest::set_plaintext_key(const ::std::string& value) {
  
  plaintext_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
}
#if LANG_CXX11
inline void SubtleWrapKeyRequest::set_plaintext_key(::std::string&& value) {
  
  plaintext_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
}
#endif
inline void SubtleWrapKeyRequest::set_plaintext_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plaintext_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
}
inline void SubtleWrapKeyRequest::set_plaintext_key(const void* value, size_t size) {
  
  plaintext_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
}
inline ::std::string* SubtleWrapKeyRequest::mutable_plaintext_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
  return plaintext_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleWrapKeyRequest::release_plaintext_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
  
  return plaintext_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleWrapKeyRequest::set_allocated_plaintext_key(::std::string* plaintext_key) {
  if (plaintext_key != NULL) {
    
  } else {
    
  }
  plaintext_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintext_key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyRequest.plaintext_key)
}

// string algorithm = 3;
inline void SubtleWrapKeyRequest::clear_algorithm() {
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleWrapKeyRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
  return algorithm_.GetNoArena();
}
inline void SubtleWrapKeyRequest::set_algorithm(const ::std::string& value) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
}
#if LANG_CXX11
inline void SubtleWrapKeyRequest::set_algorithm(::std::string&& value) {
  
  algorithm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
}
#endif
inline void SubtleWrapKeyRequest::set_algorithm(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
}
inline void SubtleWrapKeyRequest::set_algorithm(const char* value, size_t size) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
}
inline ::std::string* SubtleWrapKeyRequest::mutable_algorithm() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
  return algorithm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleWrapKeyRequest::release_algorithm() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
  
  return algorithm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleWrapKeyRequest::set_allocated_algorithm(::std::string* algorithm) {
  if (algorithm != NULL) {
    
  } else {
    
  }
  algorithm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), algorithm);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyRequest.algorithm)
}

// string key_name = 4[json_name = "keyName"];
inline void SubtleWrapKeyRequest::clear_key_name() {
  key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleWrapKeyRequest::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
  return key_name_.GetNoArena();
}
inline void SubtleWrapKeyRequest::set_key_name(const ::std::string& value) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
}
#if LANG_CXX11
inline void SubtleWrapKeyRequest::set_key_name(::std::string&& value) {
  
  key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
}
#endif
inline void SubtleWrapKeyRequest::set_key_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
}
inline void SubtleWrapKeyRequest::set_key_name(const char* value, size_t size) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
}
inline ::std::string* SubtleWrapKeyRequest::mutable_key_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
  return key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleWrapKeyRequest::release_key_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
  
  return key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleWrapKeyRequest::set_allocated_key_name(::std::string* key_name) {
  if (key_name != NULL) {
    
  } else {
    
  }
  key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyRequest.key_name)
}

// bytes nonce = 5;
inline void SubtleWrapKeyRequest::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleWrapKeyRequest::nonce() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
  return nonce_.GetNoArena();
}
inline void SubtleWrapKeyRequest::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
}
#if LANG_CXX11
inline void SubtleWrapKeyRequest::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
}
#endif
inline void SubtleWrapKeyRequest::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
}
inline void SubtleWrapKeyRequest::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
}
inline ::std::string* SubtleWrapKeyRequest::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleWrapKeyRequest::release_nonce() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleWrapKeyRequest::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyRequest.nonce)
}

// bytes associated_data = 6[json_name = "associatedData"];
inline void SubtleWrapKeyRequest::clear_associated_data() {
  associated_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleWrapKeyRequest::associated_data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
  return associated_data_.GetNoArena();
}
inline void SubtleWrapKeyRequest::set_associated_data(const ::std::string& value) {
  
  associated_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
}
#if LANG_CXX11
inline void SubtleWrapKeyRequest::set_associated_data(::std::string&& value) {
  
  associated_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
}
#endif
inline void SubtleWrapKeyRequest::set_associated_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  associated_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
}
inline void SubtleWrapKeyRequest::set_associated_data(const void* value, size_t size) {
  
  associated_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
}
inline ::std::string* SubtleWrapKeyRequest::mutable_associated_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
  return associated_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleWrapKeyRequest::release_associated_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
  
  return associated_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleWrapKeyRequest::set_allocated_associated_data(::std::string* associated_data) {
  if (associated_data != NULL) {
    
  } else {
    
  }
  associated_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), associated_data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyRequest.associated_data)
}

// -------------------------------------------------------------------

// SubtleWrapKeyResponse

// bytes wrapped_key = 1[json_name = "wrappedKey"];
inline void SubtleWrapKeyResponse::clear_wrapped_key() {
  wrapped_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleWrapKeyResponse::wrapped_key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
  return wrapped_key_.GetNoArena();
}
inline void SubtleWrapKeyResponse::set_wrapped_key(const ::std::string& value) {
  
  wrapped_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
}
#if LANG_CXX11
inline void SubtleWrapKeyResponse::set_wrapped_key(::std::string&& value) {
  
  wrapped_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
}
#endif
inline void SubtleWrapKeyResponse::set_wrapped_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  wrapped_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
}
inline void SubtleWrapKeyResponse::set_wrapped_key(const void* value, size_t size) {
  
  wrapped_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
}
inline ::std::string* SubtleWrapKeyResponse::mutable_wrapped_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
  return wrapped_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleWrapKeyResponse::release_wrapped_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
  
  return wrapped_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleWrapKeyResponse::set_allocated_wrapped_key(::std::string* wrapped_key) {
  if (wrapped_key != NULL) {
    
  } else {
    
  }
  wrapped_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wrapped_key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyResponse.wrapped_key)
}

// bytes tag = 2;
inline void SubtleWrapKeyResponse::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleWrapKeyResponse::tag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
  return tag_.GetNoArena();
}
inline void SubtleWrapKeyResponse::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
}
#if LANG_CXX11
inline void SubtleWrapKeyResponse::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
}
#endif
inline void SubtleWrapKeyResponse::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
}
inline void SubtleWrapKeyResponse::set_tag(const void* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
}
inline ::std::string* SubtleWrapKeyResponse::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleWrapKeyResponse::release_tag() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleWrapKeyResponse::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleWrapKeyResponse.tag)
}

// -------------------------------------------------------------------

// SubtleUnwrapKeyRequest

// string component_name = 1[json_name = "componentName"];
inline void SubtleUnwrapKeyRequest::clear_component_name() {
  component_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleUnwrapKeyRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
  return component_name_.GetNoArena();
}
inline void SubtleUnwrapKeyRequest::set_component_name(const ::std::string& value) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
}
#if LANG_CXX11
inline void SubtleUnwrapKeyRequest::set_component_name(::std::string&& value) {
  
  component_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
}
#endif
inline void SubtleUnwrapKeyRequest::set_component_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
}
inline void SubtleUnwrapKeyRequest::set_component_name(const char* value, size_t size) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
}
inline ::std::string* SubtleUnwrapKeyRequest::mutable_component_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
  return component_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleUnwrapKeyRequest::release_component_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
  
  return component_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleUnwrapKeyRequest::set_allocated_component_name(::std::string* component_name) {
  if (component_name != NULL) {
    
  } else {
    
  }
  component_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.component_name)
}

// bytes wrapped_key = 2[json_name = "wrappedKey"];
inline void SubtleUnwrapKeyRequest::clear_wrapped_key() {
  wrapped_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleUnwrapKeyRequest::wrapped_key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
  return wrapped_key_.GetNoArena();
}
inline void SubtleUnwrapKeyRequest::set_wrapped_key(const ::std::string& value) {
  
  wrapped_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
}
#if LANG_CXX11
inline void SubtleUnwrapKeyRequest::set_wrapped_key(::std::string&& value) {
  
  wrapped_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
}
#endif
inline void SubtleUnwrapKeyRequest::set_wrapped_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  wrapped_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
}
inline void SubtleUnwrapKeyRequest::set_wrapped_key(const void* value, size_t size) {
  
  wrapped_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
}
inline ::std::string* SubtleUnwrapKeyRequest::mutable_wrapped_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
  return wrapped_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleUnwrapKeyRequest::release_wrapped_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
  
  return wrapped_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleUnwrapKeyRequest::set_allocated_wrapped_key(::std::string* wrapped_key) {
  if (wrapped_key != NULL) {
    
  } else {
    
  }
  wrapped_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wrapped_key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.wrapped_key)
}

// string algorithm = 3;
inline void SubtleUnwrapKeyRequest::clear_algorithm() {
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleUnwrapKeyRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
  return algorithm_.GetNoArena();
}
inline void SubtleUnwrapKeyRequest::set_algorithm(const ::std::string& value) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
}
#if LANG_CXX11
inline void SubtleUnwrapKeyRequest::set_algorithm(::std::string&& value) {
  
  algorithm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
}
#endif
inline void SubtleUnwrapKeyRequest::set_algorithm(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
}
inline void SubtleUnwrapKeyRequest::set_algorithm(const char* value, size_t size) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
}
inline ::std::string* SubtleUnwrapKeyRequest::mutable_algorithm() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
  return algorithm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleUnwrapKeyRequest::release_algorithm() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
  
  return algorithm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleUnwrapKeyRequest::set_allocated_algorithm(::std::string* algorithm) {
  if (algorithm != NULL) {
    
  } else {
    
  }
  algorithm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), algorithm);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.algorithm)
}

// string key_name = 4[json_name = "keyName"];
inline void SubtleUnwrapKeyRequest::clear_key_name() {
  key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleUnwrapKeyRequest::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
  return key_name_.GetNoArena();
}
inline void SubtleUnwrapKeyRequest::set_key_name(const ::std::string& value) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
}
#if LANG_CXX11
inline void SubtleUnwrapKeyRequest::set_key_name(::std::string&& value) {
  
  key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
}
#endif
inline void SubtleUnwrapKeyRequest::set_key_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
}
inline void SubtleUnwrapKeyRequest::set_key_name(const char* value, size_t size) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
}
inline ::std::string* SubtleUnwrapKeyRequest::mutable_key_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
  return key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleUnwrapKeyRequest::release_key_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
  
  return key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleUnwrapKeyRequest::set_allocated_key_name(::std::string* key_name) {
  if (key_name != NULL) {
    
  } else {
    
  }
  key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.key_name)
}

// bytes nonce = 5;
inline void SubtleUnwrapKeyRequest::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleUnwrapKeyRequest::nonce() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
  return nonce_.GetNoArena();
}
inline void SubtleUnwrapKeyRequest::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
}
#if LANG_CXX11
inline void SubtleUnwrapKeyRequest::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
}
#endif
inline void SubtleUnwrapKeyRequest::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
}
inline void SubtleUnwrapKeyRequest::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
}
inline ::std::string* SubtleUnwrapKeyRequest::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleUnwrapKeyRequest::release_nonce() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleUnwrapKeyRequest::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.nonce)
}

// bytes tag = 6;
inline void SubtleUnwrapKeyRequest::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleUnwrapKeyRequest::tag() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
  return tag_.GetNoArena();
}
inline void SubtleUnwrapKeyRequest::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
}
#if LANG_CXX11
inline void SubtleUnwrapKeyRequest::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
}
#endif
inline void SubtleUnwrapKeyRequest::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
}
inline void SubtleUnwrapKeyRequest::set_tag(const void* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
}
inline ::std::string* SubtleUnwrapKeyRequest::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleUnwrapKeyRequest::release_tag() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleUnwrapKeyRequest::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.tag)
}

// bytes associated_data = 7[json_name = "associatedData"];
inline void SubtleUnwrapKeyRequest::clear_associated_data() {
  associated_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleUnwrapKeyRequest::associated_data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
  return associated_data_.GetNoArena();
}
inline void SubtleUnwrapKeyRequest::set_associated_data(const ::std::string& value) {
  
  associated_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
}
#if LANG_CXX11
inline void SubtleUnwrapKeyRequest::set_associated_data(::std::string&& value) {
  
  associated_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
}
#endif
inline void SubtleUnwrapKeyRequest::set_associated_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  associated_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
}
inline void SubtleUnwrapKeyRequest::set_associated_data(const void* value, size_t size) {
  
  associated_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
}
inline ::std::string* SubtleUnwrapKeyRequest::mutable_associated_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
  return associated_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleUnwrapKeyRequest::release_associated_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
  
  return associated_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleUnwrapKeyRequest::set_allocated_associated_data(::std::string* associated_data) {
  if (associated_data != NULL) {
    
  } else {
    
  }
  associated_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), associated_data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyRequest.associated_data)
}

// -------------------------------------------------------------------

// SubtleUnwrapKeyResponse

// bytes plaintext_key = 1[json_name = "plaintextKey"];
inline void SubtleUnwrapKeyResponse::clear_plaintext_key() {
  plaintext_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleUnwrapKeyResponse::plaintext_key() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
  return plaintext_key_.GetNoArena();
}
inline void SubtleUnwrapKeyResponse::set_plaintext_key(const ::std::string& value) {
  
  plaintext_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
}
#if LANG_CXX11
inline void SubtleUnwrapKeyResponse::set_plaintext_key(::std::string&& value) {
  
  plaintext_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
}
#endif
inline void SubtleUnwrapKeyResponse::set_plaintext_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plaintext_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
}
inline void SubtleUnwrapKeyResponse::set_plaintext_key(const void* value, size_t size) {
  
  plaintext_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
}
inline ::std::string* SubtleUnwrapKeyResponse::mutable_plaintext_key() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
  return plaintext_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleUnwrapKeyResponse::release_plaintext_key() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
  
  return plaintext_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleUnwrapKeyResponse::set_allocated_plaintext_key(::std::string* plaintext_key) {
  if (plaintext_key != NULL) {
    
  } else {
    
  }
  plaintext_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintext_key);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleUnwrapKeyResponse.plaintext_key)
}

// -------------------------------------------------------------------

// SubtleSignRequest

// string component_name = 1[json_name = "componentName"];
inline void SubtleSignRequest::clear_component_name() {
  component_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleSignRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
  return component_name_.GetNoArena();
}
inline void SubtleSignRequest::set_component_name(const ::std::string& value) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
}
#if LANG_CXX11
inline void SubtleSignRequest::set_component_name(::std::string&& value) {
  
  component_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
}
#endif
inline void SubtleSignRequest::set_component_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
}
inline void SubtleSignRequest::set_component_name(const char* value, size_t size) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
}
inline ::std::string* SubtleSignRequest::mutable_component_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
  return component_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleSignRequest::release_component_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
  
  return component_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleSignRequest::set_allocated_component_name(::std::string* component_name) {
  if (component_name != NULL) {
    
  } else {
    
  }
  component_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleSignRequest.component_name)
}

// bytes digest = 2;
inline void SubtleSignRequest::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleSignRequest::digest() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleSignRequest.digest)
  return digest_.GetNoArena();
}
inline void SubtleSignRequest::set_digest(const ::std::string& value) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleSignRequest.digest)
}
#if LANG_CXX11
inline void SubtleSignRequest::set_digest(::std::string&& value) {
  
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleSignRequest.digest)
}
#endif
inline void SubtleSignRequest::set_digest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleSignRequest.digest)
}
inline void SubtleSignRequest::set_digest(const void* value, size_t size) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleSignRequest.digest)
}
inline ::std::string* SubtleSignRequest::mutable_digest() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleSignRequest.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleSignRequest::release_digest() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleSignRequest.digest)
  
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleSignRequest::set_allocated_digest(::std::string* digest) {
  if (digest != NULL) {
    
  } else {
    
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleSignRequest.digest)
}

// string algorithm = 3;
inline void SubtleSignRequest::clear_algorithm() {
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleSignRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
  return algorithm_.GetNoArena();
}
inline void SubtleSignRequest::set_algorithm(const ::std::string& value) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
}
#if LANG_CXX11
inline void SubtleSignRequest::set_algorithm(::std::string&& value) {
  
  algorithm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
}
#endif
inline void SubtleSignRequest::set_algorithm(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
}
inline void SubtleSignRequest::set_algorithm(const char* value, size_t size) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
}
inline ::std::string* SubtleSignRequest::mutable_algorithm() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
  return algorithm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleSignRequest::release_algorithm() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
  
  return algorithm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleSignRequest::set_allocated_algorithm(::std::string* algorithm) {
  if (algorithm != NULL) {
    
  } else {
    
  }
  algorithm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), algorithm);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleSignRequest.algorithm)
}

// string key_name = 4[json_name = "keyName"];
inline void SubtleSignRequest::clear_key_name() {
  key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleSignRequest::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
  return key_name_.GetNoArena();
}
inline void SubtleSignRequest::set_key_name(const ::std::string& value) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
}
#if LANG_CXX11
inline void SubtleSignRequest::set_key_name(::std::string&& value) {
  
  key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
}
#endif
inline void SubtleSignRequest::set_key_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
}
inline void SubtleSignRequest::set_key_name(const char* value, size_t size) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
}
inline ::std::string* SubtleSignRequest::mutable_key_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
  return key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleSignRequest::release_key_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
  
  return key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleSignRequest::set_allocated_key_name(::std::string* key_name) {
  if (key_name != NULL) {
    
  } else {
    
  }
  key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleSignRequest.key_name)
}

// -------------------------------------------------------------------

// SubtleSignResponse

// bytes signature = 1;
inline void SubtleSignResponse::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleSignResponse::signature() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleSignResponse.signature)
  return signature_.GetNoArena();
}
inline void SubtleSignResponse::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleSignResponse.signature)
}
#if LANG_CXX11
inline void SubtleSignResponse::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleSignResponse.signature)
}
#endif
inline void SubtleSignResponse::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleSignResponse.signature)
}
inline void SubtleSignResponse::set_signature(const void* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleSignResponse.signature)
}
inline ::std::string* SubtleSignResponse::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleSignResponse.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleSignResponse::release_signature() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleSignResponse.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleSignResponse::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleSignResponse.signature)
}

// -------------------------------------------------------------------

// SubtleVerifyRequest

// string component_name = 1[json_name = "componentName"];
inline void SubtleVerifyRequest::clear_component_name() {
  component_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleVerifyRequest::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
  return component_name_.GetNoArena();
}
inline void SubtleVerifyRequest::set_component_name(const ::std::string& value) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
}
#if LANG_CXX11
inline void SubtleVerifyRequest::set_component_name(::std::string&& value) {
  
  component_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
}
#endif
inline void SubtleVerifyRequest::set_component_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
}
inline void SubtleVerifyRequest::set_component_name(const char* value, size_t size) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
}
inline ::std::string* SubtleVerifyRequest::mutable_component_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
  return component_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleVerifyRequest::release_component_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
  
  return component_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleVerifyRequest::set_allocated_component_name(::std::string* component_name) {
  if (component_name != NULL) {
    
  } else {
    
  }
  component_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleVerifyRequest.component_name)
}

// bytes digest = 2;
inline void SubtleVerifyRequest::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleVerifyRequest::digest() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
  return digest_.GetNoArena();
}
inline void SubtleVerifyRequest::set_digest(const ::std::string& value) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
}
#if LANG_CXX11
inline void SubtleVerifyRequest::set_digest(::std::string&& value) {
  
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
}
#endif
inline void SubtleVerifyRequest::set_digest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
}
inline void SubtleVerifyRequest::set_digest(const void* value, size_t size) {
  
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
}
inline ::std::string* SubtleVerifyRequest::mutable_digest() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleVerifyRequest::release_digest() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
  
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleVerifyRequest::set_allocated_digest(::std::string* digest) {
  if (digest != NULL) {
    
  } else {
    
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleVerifyRequest.digest)
}

// string algorithm = 3;
inline void SubtleVerifyRequest::clear_algorithm() {
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleVerifyRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
  return algorithm_.GetNoArena();
}
inline void SubtleVerifyRequest::set_algorithm(const ::std::string& value) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
}
#if LANG_CXX11
inline void SubtleVerifyRequest::set_algorithm(::std::string&& value) {
  
  algorithm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
}
#endif
inline void SubtleVerifyRequest::set_algorithm(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
}
inline void SubtleVerifyRequest::set_algorithm(const char* value, size_t size) {
  
  algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
}
inline ::std::string* SubtleVerifyRequest::mutable_algorithm() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
  return algorithm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleVerifyRequest::release_algorithm() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
  
  return algorithm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleVerifyRequest::set_allocated_algorithm(::std::string* algorithm) {
  if (algorithm != NULL) {
    
  } else {
    
  }
  algorithm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), algorithm);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleVerifyRequest.algorithm)
}

// string key_name = 4[json_name = "keyName"];
inline void SubtleVerifyRequest::clear_key_name() {
  key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleVerifyRequest::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
  return key_name_.GetNoArena();
}
inline void SubtleVerifyRequest::set_key_name(const ::std::string& value) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
}
#if LANG_CXX11
inline void SubtleVerifyRequest::set_key_name(::std::string&& value) {
  
  key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
}
#endif
inline void SubtleVerifyRequest::set_key_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
}
inline void SubtleVerifyRequest::set_key_name(const char* value, size_t size) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
}
inline ::std::string* SubtleVerifyRequest::mutable_key_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
  return key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleVerifyRequest::release_key_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
  
  return key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleVerifyRequest::set_allocated_key_name(::std::string* key_name) {
  if (key_name != NULL) {
    
  } else {
    
  }
  key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleVerifyRequest.key_name)
}

// bytes signature = 5;
inline void SubtleVerifyRequest::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubtleVerifyRequest::signature() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
  return signature_.GetNoArena();
}
inline void SubtleVerifyRequest::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
}
#if LANG_CXX11
inline void SubtleVerifyRequest::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
}
#endif
inline void SubtleVerifyRequest::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
}
inline void SubtleVerifyRequest::set_signature(const void* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
}
inline ::std::string* SubtleVerifyRequest::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubtleVerifyRequest::release_signature() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubtleVerifyRequest::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.SubtleVerifyRequest.signature)
}

// -------------------------------------------------------------------

// SubtleVerifyResponse

// bool valid = 1;
inline void SubtleVerifyResponse::clear_valid() {
  valid_ = false;
}
inline bool SubtleVerifyResponse::valid() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.SubtleVerifyResponse.valid)
  return valid_;
}
inline void SubtleVerifyResponse::set_valid(bool value) {
  
  valid_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.SubtleVerifyResponse.valid)
}

// -------------------------------------------------------------------

// EncryptRequest

// .dapr.proto.runtime.v1.EncryptRequestOptions options = 1;
inline bool EncryptRequest::has_options() const {
  return this != internal_default_instance() && options_ != NULL;
}
inline void EncryptRequest::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
}
inline const ::dapr::proto::runtime::v1::EncryptRequestOptions& EncryptRequest::_internal_options() const {
  return *options_;
}
inline const ::dapr::proto::runtime::v1::EncryptRequestOptions& EncryptRequest::options() const {
  const ::dapr::proto::runtime::v1::EncryptRequestOptions* p = options_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequest.options)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::runtime::v1::EncryptRequestOptions*>(
      &::dapr::proto::runtime::v1::_EncryptRequestOptions_default_instance_);
}
inline ::dapr::proto::runtime::v1::EncryptRequestOptions* EncryptRequest::release_options() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequest.options)
  
  ::dapr::proto::runtime::v1::EncryptRequestOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline ::dapr::proto::runtime::v1::EncryptRequestOptions* EncryptRequest::mutable_options() {
  
  if (options_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::runtime::v1::EncryptRequestOptions>(GetArenaNoVirtual());
    options_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequest.options)
  return options_;
}
inline void EncryptRequest::set_allocated_options(::dapr::proto::runtime::v1::EncryptRequestOptions* options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete options_;
  }
  if (options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    
  } else {
    
  }
  options_ = options;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequest.options)
}

// .dapr.proto.common.v1.StreamPayload payload = 2;
inline bool EncryptRequest::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
inline const ::dapr::proto::common::v1::StreamPayload& EncryptRequest::_internal_payload() const {
  return *payload_;
}
inline const ::dapr::proto::common::v1::StreamPayload& EncryptRequest::payload() const {
  const ::dapr::proto::common::v1::StreamPayload* p = payload_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequest.payload)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::common::v1::StreamPayload*>(
      &::dapr::proto::common::v1::_StreamPayload_default_instance_);
}
inline ::dapr::proto::common::v1::StreamPayload* EncryptRequest::release_payload() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequest.payload)
  
  ::dapr::proto::common::v1::StreamPayload* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline ::dapr::proto::common::v1::StreamPayload* EncryptRequest::mutable_payload() {
  
  if (payload_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StreamPayload>(GetArenaNoVirtual());
    payload_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequest.payload)
  return payload_;
}
inline void EncryptRequest::set_allocated_payload(::dapr::proto::common::v1::StreamPayload* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(payload_);
  }
  if (payload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequest.payload)
}

// -------------------------------------------------------------------

// EncryptRequestOptions

// string component_name = 1[json_name = "componentName"];
inline void EncryptRequestOptions::clear_component_name() {
  component_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptRequestOptions::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
  return component_name_.GetNoArena();
}
inline void EncryptRequestOptions::set_component_name(const ::std::string& value) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
}
#if LANG_CXX11
inline void EncryptRequestOptions::set_component_name(::std::string&& value) {
  
  component_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
}
#endif
inline void EncryptRequestOptions::set_component_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
}
inline void EncryptRequestOptions::set_component_name(const char* value, size_t size) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
}
inline ::std::string* EncryptRequestOptions::mutable_component_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
  return component_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptRequestOptions::release_component_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
  
  return component_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptRequestOptions::set_allocated_component_name(::std::string* component_name) {
  if (component_name != NULL) {
    
  } else {
    
  }
  component_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequestOptions.component_name)
}

// string key_name = 2[json_name = "keyName"];
inline void EncryptRequestOptions::clear_key_name() {
  key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptRequestOptions::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
  return key_name_.GetNoArena();
}
inline void EncryptRequestOptions::set_key_name(const ::std::string& value) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
}
#if LANG_CXX11
inline void EncryptRequestOptions::set_key_name(::std::string&& value) {
  
  key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
}
#endif
inline void EncryptRequestOptions::set_key_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
}
inline void EncryptRequestOptions::set_key_name(const char* value, size_t size) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
}
inline ::std::string* EncryptRequestOptions::mutable_key_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
  return key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptRequestOptions::release_key_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
  
  return key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptRequestOptions::set_allocated_key_name(::std::string* key_name) {
  if (key_name != NULL) {
    
  } else {
    
  }
  key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequestOptions.key_name)
}

// string key_wrap_algorithm = 3;
inline void EncryptRequestOptions::clear_key_wrap_algorithm() {
  key_wrap_algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptRequestOptions::key_wrap_algorithm() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
  return key_wrap_algorithm_.GetNoArena();
}
inline void EncryptRequestOptions::set_key_wrap_algorithm(const ::std::string& value) {
  
  key_wrap_algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
}
#if LANG_CXX11
inline void EncryptRequestOptions::set_key_wrap_algorithm(::std::string&& value) {
  
  key_wrap_algorithm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
}
#endif
inline void EncryptRequestOptions::set_key_wrap_algorithm(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_wrap_algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
}
inline void EncryptRequestOptions::set_key_wrap_algorithm(const char* value, size_t size) {
  
  key_wrap_algorithm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
}
inline ::std::string* EncryptRequestOptions::mutable_key_wrap_algorithm() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
  return key_wrap_algorithm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptRequestOptions::release_key_wrap_algorithm() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
  
  return key_wrap_algorithm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptRequestOptions::set_allocated_key_wrap_algorithm(::std::string* key_wrap_algorithm) {
  if (key_wrap_algorithm != NULL) {
    
  } else {
    
  }
  key_wrap_algorithm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_wrap_algorithm);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequestOptions.key_wrap_algorithm)
}

// string data_encryption_cipher = 10;
inline void EncryptRequestOptions::clear_data_encryption_cipher() {
  data_encryption_cipher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptRequestOptions::data_encryption_cipher() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
  return data_encryption_cipher_.GetNoArena();
}
inline void EncryptRequestOptions::set_data_encryption_cipher(const ::std::string& value) {
  
  data_encryption_cipher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
}
#if LANG_CXX11
inline void EncryptRequestOptions::set_data_encryption_cipher(::std::string&& value) {
  
  data_encryption_cipher_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
}
#endif
inline void EncryptRequestOptions::set_data_encryption_cipher(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_encryption_cipher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
}
inline void EncryptRequestOptions::set_data_encryption_cipher(const char* value, size_t size) {
  
  data_encryption_cipher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
}
inline ::std::string* EncryptRequestOptions::mutable_data_encryption_cipher() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
  return data_encryption_cipher_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptRequestOptions::release_data_encryption_cipher() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
  
  return data_encryption_cipher_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptRequestOptions::set_allocated_data_encryption_cipher(::std::string* data_encryption_cipher) {
  if (data_encryption_cipher != NULL) {
    
  } else {
    
  }
  data_encryption_cipher_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_encryption_cipher);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequestOptions.data_encryption_cipher)
}

// bool omit_decryption_key_name = 11[json_name = "omitDecryptionKeyName"];
inline void EncryptRequestOptions::clear_omit_decryption_key_name() {
  omit_decryption_key_name_ = false;
}
inline bool EncryptRequestOptions::omit_decryption_key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequestOptions.omit_decryption_key_name)
  return omit_decryption_key_name_;
}
inline void EncryptRequestOptions::set_omit_decryption_key_name(bool value) {
  
  omit_decryption_key_name_ = value;
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.EncryptRequestOptions.omit_decryption_key_name)
}

// string decryption_key_name = 12[json_name = "decryptionKeyName"];
inline void EncryptRequestOptions::clear_decryption_key_name() {
  decryption_key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EncryptRequestOptions::decryption_key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
  return decryption_key_name_.GetNoArena();
}
inline void EncryptRequestOptions::set_decryption_key_name(const ::std::string& value) {
  
  decryption_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
}
#if LANG_CXX11
inline void EncryptRequestOptions::set_decryption_key_name(::std::string&& value) {
  
  decryption_key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
}
#endif
inline void EncryptRequestOptions::set_decryption_key_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  decryption_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
}
inline void EncryptRequestOptions::set_decryption_key_name(const char* value, size_t size) {
  
  decryption_key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
}
inline ::std::string* EncryptRequestOptions::mutable_decryption_key_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
  return decryption_key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EncryptRequestOptions::release_decryption_key_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
  
  return decryption_key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EncryptRequestOptions::set_allocated_decryption_key_name(::std::string* decryption_key_name) {
  if (decryption_key_name != NULL) {
    
  } else {
    
  }
  decryption_key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), decryption_key_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptRequestOptions.decryption_key_name)
}

// -------------------------------------------------------------------

// EncryptResponse

// .dapr.proto.common.v1.StreamPayload payload = 1;
inline bool EncryptResponse::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
inline const ::dapr::proto::common::v1::StreamPayload& EncryptResponse::_internal_payload() const {
  return *payload_;
}
inline const ::dapr::proto::common::v1::StreamPayload& EncryptResponse::payload() const {
  const ::dapr::proto::common::v1::StreamPayload* p = payload_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.EncryptResponse.payload)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::common::v1::StreamPayload*>(
      &::dapr::proto::common::v1::_StreamPayload_default_instance_);
}
inline ::dapr::proto::common::v1::StreamPayload* EncryptResponse::release_payload() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.EncryptResponse.payload)
  
  ::dapr::proto::common::v1::StreamPayload* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline ::dapr::proto::common::v1::StreamPayload* EncryptResponse::mutable_payload() {
  
  if (payload_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StreamPayload>(GetArenaNoVirtual());
    payload_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.EncryptResponse.payload)
  return payload_;
}
inline void EncryptResponse::set_allocated_payload(::dapr::proto::common::v1::StreamPayload* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(payload_);
  }
  if (payload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.EncryptResponse.payload)
}

// -------------------------------------------------------------------

// DecryptRequest

// .dapr.proto.runtime.v1.DecryptRequestOptions options = 1;
inline bool DecryptRequest::has_options() const {
  return this != internal_default_instance() && options_ != NULL;
}
inline void DecryptRequest::clear_options() {
  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
}
inline const ::dapr::proto::runtime::v1::DecryptRequestOptions& DecryptRequest::_internal_options() const {
  return *options_;
}
inline const ::dapr::proto::runtime::v1::DecryptRequestOptions& DecryptRequest::options() const {
  const ::dapr::proto::runtime::v1::DecryptRequestOptions* p = options_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DecryptRequest.options)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::runtime::v1::DecryptRequestOptions*>(
      &::dapr::proto::runtime::v1::_DecryptRequestOptions_default_instance_);
}
inline ::dapr::proto::runtime::v1::DecryptRequestOptions* DecryptRequest::release_options() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DecryptRequest.options)
  
  ::dapr::proto::runtime::v1::DecryptRequestOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline ::dapr::proto::runtime::v1::DecryptRequestOptions* DecryptRequest::mutable_options() {
  
  if (options_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::runtime::v1::DecryptRequestOptions>(GetArenaNoVirtual());
    options_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DecryptRequest.options)
  return options_;
}
inline void DecryptRequest::set_allocated_options(::dapr::proto::runtime::v1::DecryptRequestOptions* options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete options_;
  }
  if (options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    
  } else {
    
  }
  options_ = options;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DecryptRequest.options)
}

// .dapr.proto.common.v1.StreamPayload payload = 2;
inline bool DecryptRequest::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
inline const ::dapr::proto::common::v1::StreamPayload& DecryptRequest::_internal_payload() const {
  return *payload_;
}
inline const ::dapr::proto::common::v1::StreamPayload& DecryptRequest::payload() const {
  const ::dapr::proto::common::v1::StreamPayload* p = payload_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DecryptRequest.payload)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::common::v1::StreamPayload*>(
      &::dapr::proto::common::v1::_StreamPayload_default_instance_);
}
inline ::dapr::proto::common::v1::StreamPayload* DecryptRequest::release_payload() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DecryptRequest.payload)
  
  ::dapr::proto::common::v1::StreamPayload* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline ::dapr::proto::common::v1::StreamPayload* DecryptRequest::mutable_payload() {
  
  if (payload_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StreamPayload>(GetArenaNoVirtual());
    payload_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DecryptRequest.payload)
  return payload_;
}
inline void DecryptRequest::set_allocated_payload(::dapr::proto::common::v1::StreamPayload* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(payload_);
  }
  if (payload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DecryptRequest.payload)
}

// -------------------------------------------------------------------

// DecryptRequestOptions

// string component_name = 1[json_name = "componentName"];
inline void DecryptRequestOptions::clear_component_name() {
  component_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptRequestOptions::component_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
  return component_name_.GetNoArena();
}
inline void DecryptRequestOptions::set_component_name(const ::std::string& value) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
}
#if LANG_CXX11
inline void DecryptRequestOptions::set_component_name(::std::string&& value) {
  
  component_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
}
#endif
inline void DecryptRequestOptions::set_component_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
}
inline void DecryptRequestOptions::set_component_name(const char* value, size_t size) {
  
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
}
inline ::std::string* DecryptRequestOptions::mutable_component_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
  return component_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptRequestOptions::release_component_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
  
  return component_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptRequestOptions::set_allocated_component_name(::std::string* component_name) {
  if (component_name != NULL) {
    
  } else {
    
  }
  component_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DecryptRequestOptions.component_name)
}

// string key_name = 12[json_name = "keyName"];
inline void DecryptRequestOptions::clear_key_name() {
  key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DecryptRequestOptions::key_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
  return key_name_.GetNoArena();
}
inline void DecryptRequestOptions::set_key_name(const ::std::string& value) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
}
#if LANG_CXX11
inline void DecryptRequestOptions::set_key_name(::std::string&& value) {
  
  key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
}
#endif
inline void DecryptRequestOptions::set_key_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
}
inline void DecryptRequestOptions::set_key_name(const char* value, size_t size) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
}
inline ::std::string* DecryptRequestOptions::mutable_key_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
  return key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecryptRequestOptions::release_key_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
  
  return key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecryptRequestOptions::set_allocated_key_name(::std::string* key_name) {
  if (key_name != NULL) {
    
  } else {
    
  }
  key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DecryptRequestOptions.key_name)
}

// -------------------------------------------------------------------

// DecryptResponse

// .dapr.proto.common.v1.StreamPayload payload = 1;
inline bool DecryptResponse::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
inline const ::dapr::proto::common::v1::StreamPayload& DecryptResponse::_internal_payload() const {
  return *payload_;
}
inline const ::dapr::proto::common::v1::StreamPayload& DecryptResponse::payload() const {
  const ::dapr::proto::common::v1::StreamPayload* p = payload_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.DecryptResponse.payload)
  return p != NULL ? *p : *reinterpret_cast<const ::dapr::proto::common::v1::StreamPayload*>(
      &::dapr::proto::common::v1::_StreamPayload_default_instance_);
}
inline ::dapr::proto::common::v1::StreamPayload* DecryptResponse::release_payload() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.DecryptResponse.payload)
  
  ::dapr::proto::common::v1::StreamPayload* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline ::dapr::proto::common::v1::StreamPayload* DecryptResponse::mutable_payload() {
  
  if (payload_ == NULL) {
    auto* p = CreateMaybeMessage<::dapr::proto::common::v1::StreamPayload>(GetArenaNoVirtual());
    payload_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.DecryptResponse.payload)
  return payload_;
}
inline void DecryptResponse::set_allocated_payload(::dapr::proto::common::v1::StreamPayload* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(payload_);
  }
  if (payload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.DecryptResponse.payload)
}

// -------------------------------------------------------------------

// GetWorkflowRequest

// string instance_id = 1[json_name = "instanceID"];
inline void GetWorkflowRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void GetWorkflowRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
}
#if LANG_CXX11
inline void GetWorkflowRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
}
#endif
inline void GetWorkflowRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
}
inline void GetWorkflowRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
}
inline ::std::string* GetWorkflowRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetWorkflowRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetWorkflowRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowRequest.instance_id)
}

// string workflow_component = 2[json_name = "workflowComponent"];
inline void GetWorkflowRequest::clear_workflow_component() {
  workflow_component_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
  return workflow_component_.GetNoArena();
}
inline void GetWorkflowRequest::set_workflow_component(const ::std::string& value) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
}
#if LANG_CXX11
inline void GetWorkflowRequest::set_workflow_component(::std::string&& value) {
  
  workflow_component_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
}
#endif
inline void GetWorkflowRequest::set_workflow_component(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
}
inline void GetWorkflowRequest::set_workflow_component(const char* value, size_t size) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
}
inline ::std::string* GetWorkflowRequest::mutable_workflow_component() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
  return workflow_component_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetWorkflowRequest::release_workflow_component() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
  
  return workflow_component_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetWorkflowRequest::set_allocated_workflow_component(::std::string* workflow_component) {
  if (workflow_component != NULL) {
    
  } else {
    
  }
  workflow_component_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workflow_component);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowRequest.workflow_component)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetWorkflowResponse

// string instance_id = 1[json_name = "instanceID"];
inline void GetWorkflowResponse::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetWorkflowResponse::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
  return instance_id_.GetNoArena();
}
inline void GetWorkflowResponse::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
}
#if LANG_CXX11
inline void GetWorkflowResponse::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
}
#endif
inline void GetWorkflowResponse::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
}
inline void GetWorkflowResponse::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
}
inline ::std::string* GetWorkflowResponse::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetWorkflowResponse::release_instance_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetWorkflowResponse::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowResponse.instance_id)
}

// string workflow_name = 2[json_name = "workflowName"];
inline void GetWorkflowResponse::clear_workflow_name() {
  workflow_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetWorkflowResponse::workflow_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
  return workflow_name_.GetNoArena();
}
inline void GetWorkflowResponse::set_workflow_name(const ::std::string& value) {
  
  workflow_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
}
#if LANG_CXX11
inline void GetWorkflowResponse::set_workflow_name(::std::string&& value) {
  
  workflow_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
}
#endif
inline void GetWorkflowResponse::set_workflow_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  workflow_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
}
inline void GetWorkflowResponse::set_workflow_name(const char* value, size_t size) {
  
  workflow_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
}
inline ::std::string* GetWorkflowResponse::mutable_workflow_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
  return workflow_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetWorkflowResponse::release_workflow_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
  
  return workflow_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetWorkflowResponse::set_allocated_workflow_name(::std::string* workflow_name) {
  if (workflow_name != NULL) {
    
  } else {
    
  }
  workflow_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workflow_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowResponse.workflow_name)
}

// .google.protobuf.Timestamp created_at = 3[json_name = "createdAt"];
inline bool GetWorkflowResponse::has_created_at() const {
  return this != internal_default_instance() && created_at_ != NULL;
}
inline const ::google::protobuf::Timestamp& GetWorkflowResponse::_internal_created_at() const {
  return *created_at_;
}
inline const ::google::protobuf::Timestamp& GetWorkflowResponse::created_at() const {
  const ::google::protobuf::Timestamp* p = created_at_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowResponse.created_at)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* GetWorkflowResponse::release_created_at() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowResponse.created_at)
  
  ::google::protobuf::Timestamp* temp = created_at_;
  created_at_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* GetWorkflowResponse::mutable_created_at() {
  
  if (created_at_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    created_at_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowResponse.created_at)
  return created_at_;
}
inline void GetWorkflowResponse::set_allocated_created_at(::google::protobuf::Timestamp* created_at) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(created_at_);
  }
  if (created_at) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(created_at)->GetArena();
    if (message_arena != submessage_arena) {
      created_at = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, created_at, submessage_arena);
    }
    
  } else {
    
  }
  created_at_ = created_at;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowResponse.created_at)
}

// .google.protobuf.Timestamp last_updated_at = 4[json_name = "lastUpdatedAt"];
inline bool GetWorkflowResponse::has_last_updated_at() const {
  return this != internal_default_instance() && last_updated_at_ != NULL;
}
inline const ::google::protobuf::Timestamp& GetWorkflowResponse::_internal_last_updated_at() const {
  return *last_updated_at_;
}
inline const ::google::protobuf::Timestamp& GetWorkflowResponse::last_updated_at() const {
  const ::google::protobuf::Timestamp* p = last_updated_at_;
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowResponse.last_updated_at)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* GetWorkflowResponse::release_last_updated_at() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowResponse.last_updated_at)
  
  ::google::protobuf::Timestamp* temp = last_updated_at_;
  last_updated_at_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* GetWorkflowResponse::mutable_last_updated_at() {
  
  if (last_updated_at_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    last_updated_at_ = p;
  }
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowResponse.last_updated_at)
  return last_updated_at_;
}
inline void GetWorkflowResponse::set_allocated_last_updated_at(::google::protobuf::Timestamp* last_updated_at) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(last_updated_at_);
  }
  if (last_updated_at) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(last_updated_at)->GetArena();
    if (message_arena != submessage_arena) {
      last_updated_at = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, last_updated_at, submessage_arena);
    }
    
  } else {
    
  }
  last_updated_at_ = last_updated_at;
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowResponse.last_updated_at)
}

// string runtime_status = 5[json_name = "runtimeStatus"];
inline void GetWorkflowResponse::clear_runtime_status() {
  runtime_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetWorkflowResponse::runtime_status() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
  return runtime_status_.GetNoArena();
}
inline void GetWorkflowResponse::set_runtime_status(const ::std::string& value) {
  
  runtime_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
}
#if LANG_CXX11
inline void GetWorkflowResponse::set_runtime_status(::std::string&& value) {
  
  runtime_status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
}
#endif
inline void GetWorkflowResponse::set_runtime_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  runtime_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
}
inline void GetWorkflowResponse::set_runtime_status(const char* value, size_t size) {
  
  runtime_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
}
inline ::std::string* GetWorkflowResponse::mutable_runtime_status() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
  return runtime_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetWorkflowResponse::release_runtime_status() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
  
  return runtime_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetWorkflowResponse::set_allocated_runtime_status(::std::string* runtime_status) {
  if (runtime_status != NULL) {
    
  } else {
    
  }
  runtime_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), runtime_status);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.GetWorkflowResponse.runtime_status)
}

// map<string, string> properties = 6;
inline int GetWorkflowResponse::properties_size() const {
  return properties_.size();
}
inline void GetWorkflowResponse::clear_properties() {
  properties_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
GetWorkflowResponse::properties() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.GetWorkflowResponse.properties)
  return properties_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
GetWorkflowResponse::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.GetWorkflowResponse.properties)
  return properties_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StartWorkflowRequest

// string instance_id = 1[json_name = "instanceID"];
inline void StartWorkflowRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void StartWorkflowRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
}
#if LANG_CXX11
inline void StartWorkflowRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
}
#endif
inline void StartWorkflowRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
}
inline void StartWorkflowRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
}
inline ::std::string* StartWorkflowRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartWorkflowRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartWorkflowRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.StartWorkflowRequest.instance_id)
}

// string workflow_component = 2[json_name = "workflowComponent"];
inline void StartWorkflowRequest::clear_workflow_component() {
  workflow_component_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
  return workflow_component_.GetNoArena();
}
inline void StartWorkflowRequest::set_workflow_component(const ::std::string& value) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
}
#if LANG_CXX11
inline void StartWorkflowRequest::set_workflow_component(::std::string&& value) {
  
  workflow_component_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
}
#endif
inline void StartWorkflowRequest::set_workflow_component(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
}
inline void StartWorkflowRequest::set_workflow_component(const char* value, size_t size) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
}
inline ::std::string* StartWorkflowRequest::mutable_workflow_component() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
  return workflow_component_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartWorkflowRequest::release_workflow_component() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
  
  return workflow_component_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartWorkflowRequest::set_allocated_workflow_component(::std::string* workflow_component) {
  if (workflow_component != NULL) {
    
  } else {
    
  }
  workflow_component_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workflow_component);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_component)
}

// string workflow_name = 3[json_name = "workflowName"];
inline void StartWorkflowRequest::clear_workflow_name() {
  workflow_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartWorkflowRequest::workflow_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
  return workflow_name_.GetNoArena();
}
inline void StartWorkflowRequest::set_workflow_name(const ::std::string& value) {
  
  workflow_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
}
#if LANG_CXX11
inline void StartWorkflowRequest::set_workflow_name(::std::string&& value) {
  
  workflow_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
}
#endif
inline void StartWorkflowRequest::set_workflow_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  workflow_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
}
inline void StartWorkflowRequest::set_workflow_name(const char* value, size_t size) {
  
  workflow_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
}
inline ::std::string* StartWorkflowRequest::mutable_workflow_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
  return workflow_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartWorkflowRequest::release_workflow_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
  
  return workflow_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartWorkflowRequest::set_allocated_workflow_name(::std::string* workflow_name) {
  if (workflow_name != NULL) {
    
  } else {
    
  }
  workflow_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workflow_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.StartWorkflowRequest.workflow_name)
}

// map<string, string> options = 4;
inline int StartWorkflowRequest::options_size() const {
  return options_.size();
}
inline void StartWorkflowRequest::clear_options() {
  options_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
StartWorkflowRequest::options() const {
  // @@protoc_insertion_point(field_map:dapr.proto.runtime.v1.StartWorkflowRequest.options)
  return options_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
StartWorkflowRequest::mutable_options() {
  // @@protoc_insertion_point(field_mutable_map:dapr.proto.runtime.v1.StartWorkflowRequest.options)
  return options_.MutableMap();
}

// bytes input = 5;
inline void StartWorkflowRequest::clear_input() {
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartWorkflowRequest::input() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.StartWorkflowRequest.input)
  return input_.GetNoArena();
}
inline void StartWorkflowRequest::set_input(const ::std::string& value) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.StartWorkflowRequest.input)
}
#if LANG_CXX11
inline void StartWorkflowRequest::set_input(::std::string&& value) {
  
  input_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.StartWorkflowRequest.input)
}
#endif
inline void StartWorkflowRequest::set_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.StartWorkflowRequest.input)
}
inline void StartWorkflowRequest::set_input(const void* value, size_t size) {
  
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.StartWorkflowRequest.input)
}
inline ::std::string* StartWorkflowRequest::mutable_input() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.StartWorkflowRequest.input)
  return input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartWorkflowRequest::release_input() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.StartWorkflowRequest.input)
  
  return input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartWorkflowRequest::set_allocated_input(::std::string* input) {
  if (input != NULL) {
    
  } else {
    
  }
  input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.StartWorkflowRequest.input)
}

// -------------------------------------------------------------------

// StartWorkflowResponse

// string instance_id = 1[json_name = "instanceID"];
inline void StartWorkflowResponse::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartWorkflowResponse::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
  return instance_id_.GetNoArena();
}
inline void StartWorkflowResponse::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
}
#if LANG_CXX11
inline void StartWorkflowResponse::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
}
#endif
inline void StartWorkflowResponse::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
}
inline void StartWorkflowResponse::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
}
inline ::std::string* StartWorkflowResponse::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartWorkflowResponse::release_instance_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartWorkflowResponse::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.StartWorkflowResponse.instance_id)
}

// -------------------------------------------------------------------

// TerminateWorkflowRequest

// string instance_id = 1[json_name = "instanceID"];
inline void TerminateWorkflowRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TerminateWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void TerminateWorkflowRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
}
#if LANG_CXX11
inline void TerminateWorkflowRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
}
#endif
inline void TerminateWorkflowRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
}
inline void TerminateWorkflowRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
}
inline ::std::string* TerminateWorkflowRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TerminateWorkflowRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TerminateWorkflowRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TerminateWorkflowRequest.instance_id)
}

// string workflow_component = 2[json_name = "workflowComponent"];
inline void TerminateWorkflowRequest::clear_workflow_component() {
  workflow_component_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TerminateWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
  return workflow_component_.GetNoArena();
}
inline void TerminateWorkflowRequest::set_workflow_component(const ::std::string& value) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
}
#if LANG_CXX11
inline void TerminateWorkflowRequest::set_workflow_component(::std::string&& value) {
  
  workflow_component_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
}
#endif
inline void TerminateWorkflowRequest::set_workflow_component(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
}
inline void TerminateWorkflowRequest::set_workflow_component(const char* value, size_t size) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
}
inline ::std::string* TerminateWorkflowRequest::mutable_workflow_component() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
  return workflow_component_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TerminateWorkflowRequest::release_workflow_component() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
  
  return workflow_component_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TerminateWorkflowRequest::set_allocated_workflow_component(::std::string* workflow_component) {
  if (workflow_component != NULL) {
    
  } else {
    
  }
  workflow_component_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workflow_component);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.TerminateWorkflowRequest.workflow_component)
}

// -------------------------------------------------------------------

// PauseWorkflowRequest

// string instance_id = 1[json_name = "instanceID"];
inline void PauseWorkflowRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PauseWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void PauseWorkflowRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
}
#if LANG_CXX11
inline void PauseWorkflowRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
}
#endif
inline void PauseWorkflowRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
}
inline void PauseWorkflowRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
}
inline ::std::string* PauseWorkflowRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PauseWorkflowRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PauseWorkflowRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PauseWorkflowRequest.instance_id)
}

// string workflow_component = 2[json_name = "workflowComponent"];
inline void PauseWorkflowRequest::clear_workflow_component() {
  workflow_component_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PauseWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
  return workflow_component_.GetNoArena();
}
inline void PauseWorkflowRequest::set_workflow_component(const ::std::string& value) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
}
#if LANG_CXX11
inline void PauseWorkflowRequest::set_workflow_component(::std::string&& value) {
  
  workflow_component_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
}
#endif
inline void PauseWorkflowRequest::set_workflow_component(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
}
inline void PauseWorkflowRequest::set_workflow_component(const char* value, size_t size) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
}
inline ::std::string* PauseWorkflowRequest::mutable_workflow_component() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
  return workflow_component_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PauseWorkflowRequest::release_workflow_component() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
  
  return workflow_component_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PauseWorkflowRequest::set_allocated_workflow_component(::std::string* workflow_component) {
  if (workflow_component != NULL) {
    
  } else {
    
  }
  workflow_component_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workflow_component);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PauseWorkflowRequest.workflow_component)
}

// -------------------------------------------------------------------

// ResumeWorkflowRequest

// string instance_id = 1[json_name = "instanceID"];
inline void ResumeWorkflowRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResumeWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void ResumeWorkflowRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
}
#if LANG_CXX11
inline void ResumeWorkflowRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
}
#endif
inline void ResumeWorkflowRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
}
inline void ResumeWorkflowRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
}
inline ::std::string* ResumeWorkflowRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResumeWorkflowRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResumeWorkflowRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ResumeWorkflowRequest.instance_id)
}

// string workflow_component = 2[json_name = "workflowComponent"];
inline void ResumeWorkflowRequest::clear_workflow_component() {
  workflow_component_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResumeWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
  return workflow_component_.GetNoArena();
}
inline void ResumeWorkflowRequest::set_workflow_component(const ::std::string& value) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
}
#if LANG_CXX11
inline void ResumeWorkflowRequest::set_workflow_component(::std::string&& value) {
  
  workflow_component_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
}
#endif
inline void ResumeWorkflowRequest::set_workflow_component(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
}
inline void ResumeWorkflowRequest::set_workflow_component(const char* value, size_t size) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
}
inline ::std::string* ResumeWorkflowRequest::mutable_workflow_component() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
  return workflow_component_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResumeWorkflowRequest::release_workflow_component() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
  
  return workflow_component_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResumeWorkflowRequest::set_allocated_workflow_component(::std::string* workflow_component) {
  if (workflow_component != NULL) {
    
  } else {
    
  }
  workflow_component_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workflow_component);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.ResumeWorkflowRequest.workflow_component)
}

// -------------------------------------------------------------------

// RaiseEventWorkflowRequest

// string instance_id = 1[json_name = "instanceID"];
inline void RaiseEventWorkflowRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RaiseEventWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void RaiseEventWorkflowRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
}
#if LANG_CXX11
inline void RaiseEventWorkflowRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
}
#endif
inline void RaiseEventWorkflowRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
}
inline void RaiseEventWorkflowRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
}
inline ::std::string* RaiseEventWorkflowRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RaiseEventWorkflowRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RaiseEventWorkflowRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.instance_id)
}

// string workflow_component = 2[json_name = "workflowComponent"];
inline void RaiseEventWorkflowRequest::clear_workflow_component() {
  workflow_component_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RaiseEventWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
  return workflow_component_.GetNoArena();
}
inline void RaiseEventWorkflowRequest::set_workflow_component(const ::std::string& value) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
}
#if LANG_CXX11
inline void RaiseEventWorkflowRequest::set_workflow_component(::std::string&& value) {
  
  workflow_component_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
}
#endif
inline void RaiseEventWorkflowRequest::set_workflow_component(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
}
inline void RaiseEventWorkflowRequest::set_workflow_component(const char* value, size_t size) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
}
inline ::std::string* RaiseEventWorkflowRequest::mutable_workflow_component() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
  return workflow_component_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RaiseEventWorkflowRequest::release_workflow_component() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
  
  return workflow_component_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RaiseEventWorkflowRequest::set_allocated_workflow_component(::std::string* workflow_component) {
  if (workflow_component != NULL) {
    
  } else {
    
  }
  workflow_component_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workflow_component);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.workflow_component)
}

// string event_name = 3[json_name = "eventName"];
inline void RaiseEventWorkflowRequest::clear_event_name() {
  event_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RaiseEventWorkflowRequest::event_name() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
  return event_name_.GetNoArena();
}
inline void RaiseEventWorkflowRequest::set_event_name(const ::std::string& value) {
  
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
}
#if LANG_CXX11
inline void RaiseEventWorkflowRequest::set_event_name(::std::string&& value) {
  
  event_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
}
#endif
inline void RaiseEventWorkflowRequest::set_event_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
}
inline void RaiseEventWorkflowRequest::set_event_name(const char* value, size_t size) {
  
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
}
inline ::std::string* RaiseEventWorkflowRequest::mutable_event_name() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
  return event_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RaiseEventWorkflowRequest::release_event_name() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
  
  return event_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RaiseEventWorkflowRequest::set_allocated_event_name(::std::string* event_name) {
  if (event_name != NULL) {
    
  } else {
    
  }
  event_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_name);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_name)
}

// bytes event_data = 4;
inline void RaiseEventWorkflowRequest::clear_event_data() {
  event_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RaiseEventWorkflowRequest::event_data() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
  return event_data_.GetNoArena();
}
inline void RaiseEventWorkflowRequest::set_event_data(const ::std::string& value) {
  
  event_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
}
#if LANG_CXX11
inline void RaiseEventWorkflowRequest::set_event_data(::std::string&& value) {
  
  event_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
}
#endif
inline void RaiseEventWorkflowRequest::set_event_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  event_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
}
inline void RaiseEventWorkflowRequest::set_event_data(const void* value, size_t size) {
  
  event_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
}
inline ::std::string* RaiseEventWorkflowRequest::mutable_event_data() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
  return event_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RaiseEventWorkflowRequest::release_event_data() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
  
  return event_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RaiseEventWorkflowRequest::set_allocated_event_data(::std::string* event_data) {
  if (event_data != NULL) {
    
  } else {
    
  }
  event_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_data);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.RaiseEventWorkflowRequest.event_data)
}

// -------------------------------------------------------------------

// PurgeWorkflowRequest

// string instance_id = 1[json_name = "instanceID"];
inline void PurgeWorkflowRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PurgeWorkflowRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void PurgeWorkflowRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
}
#if LANG_CXX11
inline void PurgeWorkflowRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
}
#endif
inline void PurgeWorkflowRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
}
inline void PurgeWorkflowRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
}
inline ::std::string* PurgeWorkflowRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PurgeWorkflowRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PurgeWorkflowRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PurgeWorkflowRequest.instance_id)
}

// string workflow_component = 2[json_name = "workflowComponent"];
inline void PurgeWorkflowRequest::clear_workflow_component() {
  workflow_component_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PurgeWorkflowRequest::workflow_component() const {
  // @@protoc_insertion_point(field_get:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
  return workflow_component_.GetNoArena();
}
inline void PurgeWorkflowRequest::set_workflow_component(const ::std::string& value) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
}
#if LANG_CXX11
inline void PurgeWorkflowRequest::set_workflow_component(::std::string&& value) {
  
  workflow_component_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
}
#endif
inline void PurgeWorkflowRequest::set_workflow_component(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
}
inline void PurgeWorkflowRequest::set_workflow_component(const char* value, size_t size) {
  
  workflow_component_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
}
inline ::std::string* PurgeWorkflowRequest::mutable_workflow_component() {
  
  // @@protoc_insertion_point(field_mutable:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
  return workflow_component_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PurgeWorkflowRequest::release_workflow_component() {
  // @@protoc_insertion_point(field_release:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
  
  return workflow_component_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PurgeWorkflowRequest::set_allocated_workflow_component(::std::string* workflow_component) {
  if (workflow_component != NULL) {
    
  } else {
    
  }
  workflow_component_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workflow_component);
  // @@protoc_insertion_point(field_set_allocated:dapr.proto.runtime.v1.PurgeWorkflowRequest.workflow_component)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace runtime
}  // namespace proto
}  // namespace dapr

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::dapr::proto::runtime::v1::UnlockResponse_Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dapr::proto::runtime::v1::UnlockResponse_Status>() {
  return ::dapr::proto::runtime::v1::UnlockResponse_Status_descriptor();
}
template <> struct is_proto_enum< ::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat>() {
  return ::dapr::proto::runtime::v1::SubtleGetKeyRequest_KeyFormat_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_dapr_2fproto_2fruntime_2fv1_2fdapr_2eproto
